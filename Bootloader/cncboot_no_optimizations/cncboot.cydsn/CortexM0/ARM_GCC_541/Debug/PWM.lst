ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWM_Stop,"ax",%progbits
  20              		.align	2
  21              		.global	PWM_Stop
  22              		.code	16
  23              		.thumb_func
  24              		.type	PWM_Stop, %function
  25              	PWM_Stop:
  26              	.LFB3:
  27              		.file 1 "Generated_Source\\PSoC4\\PWM.c"
   1:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:Generated_Source\PSoC4/PWM.c **** * Version 2.10
   4:Generated_Source\PSoC4/PWM.c **** *
   5:Generated_Source\PSoC4/PWM.c **** * Description:
   6:Generated_Source\PSoC4/PWM.c **** *  This file provides the source code to the API for the PWM
   7:Generated_Source\PSoC4/PWM.c **** *  component
   8:Generated_Source\PSoC4/PWM.c **** *
   9:Generated_Source\PSoC4/PWM.c **** * Note:
  10:Generated_Source\PSoC4/PWM.c **** *  None
  11:Generated_Source\PSoC4/PWM.c **** *
  12:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  13:Generated_Source\PSoC4/PWM.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/PWM.c **** 
  19:Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  20:Generated_Source\PSoC4/PWM.c **** 
  21:Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  22:Generated_Source\PSoC4/PWM.c **** 
  23:Generated_Source\PSoC4/PWM.c **** 
  24:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  26:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  27:Generated_Source\PSoC4/PWM.c **** *
  28:Generated_Source\PSoC4/PWM.c **** * Summary:
  29:Generated_Source\PSoC4/PWM.c **** *  Initialize/Restore default PWM configuration.
  30:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 2


  31:Generated_Source\PSoC4/PWM.c **** * Parameters:
  32:Generated_Source\PSoC4/PWM.c **** *  None
  33:Generated_Source\PSoC4/PWM.c **** *
  34:Generated_Source\PSoC4/PWM.c **** * Return:
  35:Generated_Source\PSoC4/PWM.c **** *  None
  36:Generated_Source\PSoC4/PWM.c **** *
  37:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/PWM.c **** void PWM_Init(void)
  39:Generated_Source\PSoC4/PWM.c **** {
  40:Generated_Source\PSoC4/PWM.c **** 
  41:Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  43:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/PWM.c ****         
  45:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/PWM.c **** 
  48:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/PWM.c ****         
  51:Generated_Source\PSoC4/PWM.c ****          /* Set other values */
  52:Generated_Source\PSoC4/PWM.c ****         PWM_SetCounterMode(PWM_COUNT_DOWN);
  53:Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/PWM.c ****         PWM_WriteCounter(PWM_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  56:Generated_Source\PSoC4/PWM.c **** 
  57:Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
  58:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_TIMER_BASE_CONFIG;
  59:Generated_Source\PSoC4/PWM.c ****         
  60:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_TIMER_SIGNALS_MODES;
  62:Generated_Source\PSoC4/PWM.c ****     
  63:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_TC_INTERRUPT_MASK);
  65:Generated_Source\PSoC4/PWM.c ****         
  66:Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_TC_PERIOD_VALUE );
  68:Generated_Source\PSoC4/PWM.c **** 
  69:Generated_Source\PSoC4/PWM.c ****         #if (PWM__COMPARE == PWM_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/PWM.c **** 
  72:Generated_Source\PSoC4/PWM.c ****             #if (1u == PWM_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/PWM.c ****                 PWM_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCompareBuf(PWM_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/PWM.c ****             #endif  /* (1u == PWM_TC_COMPARE_SWAP) */
  76:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__COMPARE == PWM_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/PWM.c **** 
  78:Generated_Source\PSoC4/PWM.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/PWM.c ****         #if (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  80:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(1u);
  81:Generated_Source\PSoC4/PWM.c ****         #elif(PWM__COUNT_DOWN == PWM_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/PWM.c ****         #else
  84:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(0u);
  85:Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
  86:Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
  87:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 3


  88:Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  89:Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_PWM_BASE_CONFIG;
  90:Generated_Source\PSoC4/PWM.c **** 
  91:Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
  92:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/PWM.c ****         #else
  95:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_ALIGN | PWM_CTRL_PWM_KILL_EVENT;
  96:Generated_Source\PSoC4/PWM.c ****             
  97:Generated_Source\PSoC4/PWM.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/PWM.c ****             #if (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  99:Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(1u);
 100:Generated_Source\PSoC4/PWM.c ****             #elif (PWM__RIGHT == PWM_PWM_ALIGN)
 101:Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(PWM_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/PWM.c ****             #else 
 103:Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(0u);
 104:Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
 105:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 106:Generated_Source\PSoC4/PWM.c **** 
 107:Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_DT == PWM_PWM_MODE)
 108:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_DEAD_TIME_CYCLE;
 109:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_DT == PWM_PWM_MODE) */
 110:Generated_Source\PSoC4/PWM.c **** 
 111:Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM == PWM_PWM_MODE)
 112:Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_PRESCALER;
 113:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
 114:Generated_Source\PSoC4/PWM.c **** 
 115:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_PWM_SIGNALS_MODES;
 117:Generated_Source\PSoC4/PWM.c ****     
 118:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_PWM_INTERRUPT_MASK);
 120:Generated_Source\PSoC4/PWM.c **** 
 121:Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
 123:Generated_Source\PSoC4/PWM.c ****             PWM_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/PWM.c ****                     (PWM_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/PWM.c ****                     PWM_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/PWM.c ****                     PWM_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/PWM.c ****         #else
 128:Generated_Source\PSoC4/PWM.c ****             #if (PWM__LEFT == PWM_PWM_ALIGN)
 129:Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_LEFT;
 130:Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
 131:Generated_Source\PSoC4/PWM.c **** 
 132:Generated_Source\PSoC4/PWM.c ****             #if (PWM__RIGHT == PWM_PWM_ALIGN)
 133:Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_RIGHT == PWM_PWM_ALIGN) */
 135:Generated_Source\PSoC4/PWM.c **** 
 136:Generated_Source\PSoC4/PWM.c ****             #if (PWM__CENTER == PWM_PWM_ALIGN)
 137:Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_CENTER == PWM_PWM_ALIGN) */
 139:Generated_Source\PSoC4/PWM.c **** 
 140:Generated_Source\PSoC4/PWM.c ****             #if (PWM__ASYMMETRIC == PWM_PWM_ALIGN)
 141:Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM__ASYMMETRIC == PWM_PWM_ALIGN) */
 143:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 144:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 4


 145:Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_PWM_PERIOD_VALUE );
 147:Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
 148:Generated_Source\PSoC4/PWM.c **** 
 149:Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/PWM.c ****             PWM_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompareBuf(PWM_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/PWM.c **** 
 154:Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/PWM.c ****             PWM_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/PWM.c ****             PWM_WritePeriodBuf(PWM_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 159:Generated_Source\PSoC4/PWM.c ****     
 160:Generated_Source\PSoC4/PWM.c **** }
 161:Generated_Source\PSoC4/PWM.c **** 
 162:Generated_Source\PSoC4/PWM.c **** 
 163:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 165:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 166:Generated_Source\PSoC4/PWM.c **** *
 167:Generated_Source\PSoC4/PWM.c **** * Summary:
 168:Generated_Source\PSoC4/PWM.c **** *  Enables the PWM.
 169:Generated_Source\PSoC4/PWM.c **** *
 170:Generated_Source\PSoC4/PWM.c **** * Parameters:
 171:Generated_Source\PSoC4/PWM.c **** *  None
 172:Generated_Source\PSoC4/PWM.c **** *
 173:Generated_Source\PSoC4/PWM.c **** * Return:
 174:Generated_Source\PSoC4/PWM.c **** *  None
 175:Generated_Source\PSoC4/PWM.c **** *
 176:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void)
 178:Generated_Source\PSoC4/PWM.c **** {
 179:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 180:Generated_Source\PSoC4/PWM.c **** 
 181:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 182:Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 183:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 184:Generated_Source\PSoC4/PWM.c **** 
 185:Generated_Source\PSoC4/PWM.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 187:Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 189:Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__PWM_SEL == PWM_CONFIG) */
 191:Generated_Source\PSoC4/PWM.c **** 
 192:Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 193:Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 195:Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__TIMER == PWM_CONFIG) */
 197:Generated_Source\PSoC4/PWM.c ****     
 198:Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
 199:Generated_Source\PSoC4/PWM.c ****         #if (0u != PWM_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_RELOAD);
 201:Generated_Source\PSoC4/PWM.c ****         #endif /* (0u != PWM_QUAD_AUTO_START) */
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 5


 202:Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
 203:Generated_Source\PSoC4/PWM.c **** }
 204:Generated_Source\PSoC4/PWM.c **** 
 205:Generated_Source\PSoC4/PWM.c **** 
 206:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
 208:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 209:Generated_Source\PSoC4/PWM.c **** *
 210:Generated_Source\PSoC4/PWM.c **** * Summary:
 211:Generated_Source\PSoC4/PWM.c **** *  Initializes the PWM with default customizer
 212:Generated_Source\PSoC4/PWM.c **** *  values when called the first time and enables the PWM.
 213:Generated_Source\PSoC4/PWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/PWM.c **** *  just enabled.
 215:Generated_Source\PSoC4/PWM.c **** *
 216:Generated_Source\PSoC4/PWM.c **** * Parameters:
 217:Generated_Source\PSoC4/PWM.c **** *  None
 218:Generated_Source\PSoC4/PWM.c **** *
 219:Generated_Source\PSoC4/PWM.c **** * Return:
 220:Generated_Source\PSoC4/PWM.c **** *  None
 221:Generated_Source\PSoC4/PWM.c **** *
 222:Generated_Source\PSoC4/PWM.c **** * Global variables:
 223:Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/PWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/PWM.c **** *  to 1 the first time PWM_Start() is called. This allows
 226:Generated_Source\PSoC4/PWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/PWM.c **** *  calls to the PWM_Start() routine.
 228:Generated_Source\PSoC4/PWM.c **** *
 229:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/PWM.c **** void PWM_Start(void)
 231:Generated_Source\PSoC4/PWM.c **** {
 232:Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 233:Generated_Source\PSoC4/PWM.c ****     {
 234:Generated_Source\PSoC4/PWM.c ****         PWM_Init();
 235:Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 236:Generated_Source\PSoC4/PWM.c ****     }
 237:Generated_Source\PSoC4/PWM.c **** 
 238:Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
 239:Generated_Source\PSoC4/PWM.c **** }
 240:Generated_Source\PSoC4/PWM.c **** 
 241:Generated_Source\PSoC4/PWM.c **** 
 242:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 244:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 245:Generated_Source\PSoC4/PWM.c **** *
 246:Generated_Source\PSoC4/PWM.c **** * Summary:
 247:Generated_Source\PSoC4/PWM.c **** *  Disables the PWM.
 248:Generated_Source\PSoC4/PWM.c **** *
 249:Generated_Source\PSoC4/PWM.c **** * Parameters:
 250:Generated_Source\PSoC4/PWM.c **** *  None
 251:Generated_Source\PSoC4/PWM.c **** *
 252:Generated_Source\PSoC4/PWM.c **** * Return:
 253:Generated_Source\PSoC4/PWM.c **** *  None
 254:Generated_Source\PSoC4/PWM.c **** *
 255:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void)
 257:Generated_Source\PSoC4/PWM.c **** {
  28              		.loc 1 257 0
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 6


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 258:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/PWM.c **** 
 260:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 260 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
 261:Generated_Source\PSoC4/PWM.c **** 
 262:Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
  39              		.loc 1 262 0
  40 0006 044A     		ldr	r2, .L2
  41 0008 1368     		ldr	r3, [r2]
  42 000a 0221     		movs	r1, #2
  43 000c 8B43     		bics	r3, r1
  44 000e 1360     		str	r3, [r2]
 263:Generated_Source\PSoC4/PWM.c **** 
 264:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
  45              		.loc 1 264 0
  46 0010 FFF7FEFF 		bl	CyExitCriticalSection
  47              	.LVL1:
 265:Generated_Source\PSoC4/PWM.c **** }
  48              		.loc 1 265 0
  49              		@ sp needed
  50 0014 10BD     		pop	{r4, pc}
  51              	.L3:
  52 0016 C046     		.align	2
  53              	.L2:
  54 0018 00000540 		.word	1074069504
  55              		.cfi_endproc
  56              	.LFE3:
  57              		.size	PWM_Stop, .-PWM_Stop
  58              		.section	.text.PWM_SetMode,"ax",%progbits
  59              		.align	2
  60              		.global	PWM_SetMode
  61              		.code	16
  62              		.thumb_func
  63              		.type	PWM_SetMode, %function
  64              	PWM_SetMode:
  65              	.LFB4:
 266:Generated_Source\PSoC4/PWM.c **** 
 267:Generated_Source\PSoC4/PWM.c **** 
 268:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetMode
 270:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 271:Generated_Source\PSoC4/PWM.c **** *
 272:Generated_Source\PSoC4/PWM.c **** * Summary:
 273:Generated_Source\PSoC4/PWM.c **** *  Sets the operation mode of the PWM. This function is used when
 274:Generated_Source\PSoC4/PWM.c **** *  configured as a generic PWM and the actual mode of operation is
 275:Generated_Source\PSoC4/PWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/PWM.c **** *
 277:Generated_Source\PSoC4/PWM.c **** * Parameters:
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 7


 278:Generated_Source\PSoC4/PWM.c **** *  mode: Mode for the PWM to operate in
 279:Generated_Source\PSoC4/PWM.c **** *   Values:
 280:Generated_Source\PSoC4/PWM.c **** *   - PWM_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/PWM.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/PWM.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM - PWM
 286:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/PWM.c **** *
 289:Generated_Source\PSoC4/PWM.c **** * Return:
 290:Generated_Source\PSoC4/PWM.c **** *  None
 291:Generated_Source\PSoC4/PWM.c **** *
 292:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/PWM.c **** void PWM_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/PWM.c **** {
  66              		.loc 1 294 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              	.LVL2:
  71 0000 10B5     		push	{r4, lr}
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 4, -8
  74              		.cfi_offset 14, -4
  75 0002 0400     		movs	r4, r0
 295:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/PWM.c **** 
 297:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
  76              		.loc 1 297 0
  77 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  78              	.LVL3:
 298:Generated_Source\PSoC4/PWM.c **** 
 299:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
  79              		.loc 1 299 0
  80 0008 054B     		ldr	r3, .L5
  81 000a 1968     		ldr	r1, [r3]
  82 000c 054A     		ldr	r2, .L5+4
  83 000e 0A40     		ands	r2, r1
  84 0010 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
  85              		.loc 1 300 0
  86 0012 1A68     		ldr	r2, [r3]
  87 0014 1443     		orrs	r4, r2
  88              	.LVL4:
  89 0016 1C60     		str	r4, [r3]
 301:Generated_Source\PSoC4/PWM.c **** 
 302:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
  90              		.loc 1 302 0
  91 0018 FFF7FEFF 		bl	CyExitCriticalSection
  92              	.LVL5:
 303:Generated_Source\PSoC4/PWM.c **** }
  93              		.loc 1 303 0
  94              		@ sp needed
  95 001c 10BD     		pop	{r4, pc}
  96              	.L6:
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 8


  97 001e C046     		.align	2
  98              	.L5:
  99 0020 40010540 		.word	1074069824
 100 0024 FFFFFFF8 		.word	-117440513
 101              		.cfi_endproc
 102              	.LFE4:
 103              		.size	PWM_SetMode, .-PWM_SetMode
 104              		.section	.text.PWM_SetQDMode,"ax",%progbits
 105              		.align	2
 106              		.global	PWM_SetQDMode
 107              		.code	16
 108              		.thumb_func
 109              		.type	PWM_SetQDMode, %function
 110              	PWM_SetQDMode:
 111              	.LFB5:
 304:Generated_Source\PSoC4/PWM.c **** 
 305:Generated_Source\PSoC4/PWM.c **** 
 306:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetQDMode
 308:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 309:Generated_Source\PSoC4/PWM.c **** *
 310:Generated_Source\PSoC4/PWM.c **** * Summary:
 311:Generated_Source\PSoC4/PWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:Generated_Source\PSoC4/PWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/PWM.c **** *
 314:Generated_Source\PSoC4/PWM.c **** * Parameters:
 315:Generated_Source\PSoC4/PWM.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/PWM.c **** *   Values:
 317:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/PWM.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/PWM.c **** *
 322:Generated_Source\PSoC4/PWM.c **** * Return:
 323:Generated_Source\PSoC4/PWM.c **** *  None
 324:Generated_Source\PSoC4/PWM.c **** *
 325:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/PWM.c **** void PWM_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/PWM.c **** {
 112              		.loc 1 327 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              	.LVL6:
 117 0000 10B5     		push	{r4, lr}
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 4, -8
 120              		.cfi_offset 14, -4
 121 0002 0400     		movs	r4, r0
 328:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/PWM.c **** 
 330:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 122              		.loc 1 330 0
 123 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 124              	.LVL7:
 331:Generated_Source\PSoC4/PWM.c **** 
 332:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 9


 125              		.loc 1 332 0
 126 0008 054B     		ldr	r3, .L8
 127 000a 1968     		ldr	r1, [r3]
 128 000c 054A     		ldr	r2, .L8+4
 129 000e 0A40     		ands	r2, r1
 130 0010 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 131              		.loc 1 333 0
 132 0012 1A68     		ldr	r2, [r3]
 133 0014 1443     		orrs	r4, r2
 134              	.LVL8:
 135 0016 1C60     		str	r4, [r3]
 334:Generated_Source\PSoC4/PWM.c **** 
 335:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 136              		.loc 1 335 0
 137 0018 FFF7FEFF 		bl	CyExitCriticalSection
 138              	.LVL9:
 336:Generated_Source\PSoC4/PWM.c **** }
 139              		.loc 1 336 0
 140              		@ sp needed
 141 001c 10BD     		pop	{r4, pc}
 142              	.L9:
 143 001e C046     		.align	2
 144              	.L8:
 145 0020 40010540 		.word	1074069824
 146 0024 FFFF8FFF 		.word	-7340033
 147              		.cfi_endproc
 148              	.LFE5:
 149              		.size	PWM_SetQDMode, .-PWM_SetQDMode
 150              		.section	.text.PWM_SetPrescaler,"ax",%progbits
 151              		.align	2
 152              		.global	PWM_SetPrescaler
 153              		.code	16
 154              		.thumb_func
 155              		.type	PWM_SetPrescaler, %function
 156              	PWM_SetPrescaler:
 157              	.LFB6:
 337:Generated_Source\PSoC4/PWM.c **** 
 338:Generated_Source\PSoC4/PWM.c **** 
 339:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPrescaler
 341:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 342:Generated_Source\PSoC4/PWM.c **** *
 343:Generated_Source\PSoC4/PWM.c **** * Summary:
 344:Generated_Source\PSoC4/PWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/PWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/PWM.c **** *
 347:Generated_Source\PSoC4/PWM.c **** * Parameters:
 348:Generated_Source\PSoC4/PWM.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/PWM.c **** *   Values:
 350:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY64   - Divide by 64
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 10


 357:Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/PWM.c **** *
 359:Generated_Source\PSoC4/PWM.c **** * Return:
 360:Generated_Source\PSoC4/PWM.c **** *  None
 361:Generated_Source\PSoC4/PWM.c **** *
 362:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/PWM.c **** void PWM_SetPrescaler(uint32 prescaler)
 364:Generated_Source\PSoC4/PWM.c **** {
 158              		.loc 1 364 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              	.LVL10:
 163 0000 10B5     		push	{r4, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 4, -8
 166              		.cfi_offset 14, -4
 167 0002 0400     		movs	r4, r0
 365:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 366:Generated_Source\PSoC4/PWM.c **** 
 367:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 168              		.loc 1 367 0
 169 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 170              	.LVL11:
 368:Generated_Source\PSoC4/PWM.c **** 
 369:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 171              		.loc 1 369 0
 172 0008 054B     		ldr	r3, .L11
 173 000a 1968     		ldr	r1, [r3]
 174 000c 054A     		ldr	r2, .L11+4
 175 000e 0A40     		ands	r2, r1
 176 0010 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 177              		.loc 1 370 0
 178 0012 1A68     		ldr	r2, [r3]
 179 0014 1443     		orrs	r4, r2
 180              	.LVL12:
 181 0016 1C60     		str	r4, [r3]
 371:Generated_Source\PSoC4/PWM.c **** 
 372:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 182              		.loc 1 372 0
 183 0018 FFF7FEFF 		bl	CyExitCriticalSection
 184              	.LVL13:
 373:Generated_Source\PSoC4/PWM.c **** }
 185              		.loc 1 373 0
 186              		@ sp needed
 187 001c 10BD     		pop	{r4, pc}
 188              	.L12:
 189 001e C046     		.align	2
 190              	.L11:
 191 0020 40010540 		.word	1074069824
 192 0024 FF00FFFF 		.word	-65281
 193              		.cfi_endproc
 194              	.LFE6:
 195              		.size	PWM_SetPrescaler, .-PWM_SetPrescaler
 196              		.section	.text.PWM_SetOneShot,"ax",%progbits
 197              		.align	2
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 11


 198              		.global	PWM_SetOneShot
 199              		.code	16
 200              		.thumb_func
 201              		.type	PWM_SetOneShot, %function
 202              	PWM_SetOneShot:
 203              	.LFB7:
 374:Generated_Source\PSoC4/PWM.c **** 
 375:Generated_Source\PSoC4/PWM.c **** 
 376:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetOneShot
 378:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 379:Generated_Source\PSoC4/PWM.c **** *
 380:Generated_Source\PSoC4/PWM.c **** * Summary:
 381:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM runs
 382:Generated_Source\PSoC4/PWM.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/PWM.c **** *  PWM operates in the continuous mode.
 384:Generated_Source\PSoC4/PWM.c **** *
 385:Generated_Source\PSoC4/PWM.c **** * Parameters:
 386:Generated_Source\PSoC4/PWM.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/PWM.c **** *   Values:
 388:Generated_Source\PSoC4/PWM.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/PWM.c **** *
 391:Generated_Source\PSoC4/PWM.c **** * Return:
 392:Generated_Source\PSoC4/PWM.c **** *  None
 393:Generated_Source\PSoC4/PWM.c **** *
 394:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/PWM.c **** void PWM_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/PWM.c **** {
 204              		.loc 1 396 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              	.LVL14:
 209 0000 70B5     		push	{r4, r5, r6, lr}
 210              		.cfi_def_cfa_offset 16
 211              		.cfi_offset 4, -16
 212              		.cfi_offset 5, -12
 213              		.cfi_offset 6, -8
 214              		.cfi_offset 14, -4
 215 0002 0400     		movs	r4, r0
 397:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/PWM.c **** 
 399:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 216              		.loc 1 399 0
 217 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 218              	.LVL15:
 400:Generated_Source\PSoC4/PWM.c **** 
 401:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 219              		.loc 1 401 0
 220 0008 0749     		ldr	r1, .L14
 221 000a 0A68     		ldr	r2, [r1]
 222 000c 074B     		ldr	r3, .L14+4
 223 000e 1340     		ands	r3, r2
 224 0010 0B60     		str	r3, [r1]
 402:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 225              		.loc 1 402 0
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 12


 226 0012 0D68     		ldr	r5, [r1]
 227 0014 A304     		lsls	r3, r4, #18
 228 0016 8022     		movs	r2, #128
 229 0018 D202     		lsls	r2, r2, #11
 230 001a 1340     		ands	r3, r2
 231 001c 2B43     		orrs	r3, r5
 232 001e 0B60     		str	r3, [r1]
 403:Generated_Source\PSoC4/PWM.c ****                                                                PWM_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/PWM.c **** 
 405:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 233              		.loc 1 405 0
 234 0020 FFF7FEFF 		bl	CyExitCriticalSection
 235              	.LVL16:
 406:Generated_Source\PSoC4/PWM.c **** }
 236              		.loc 1 406 0
 237              		@ sp needed
 238              	.LVL17:
 239 0024 70BD     		pop	{r4, r5, r6, pc}
 240              	.L15:
 241 0026 C046     		.align	2
 242              	.L14:
 243 0028 40010540 		.word	1074069824
 244 002c FFFFFBFF 		.word	-262145
 245              		.cfi_endproc
 246              	.LFE7:
 247              		.size	PWM_SetOneShot, .-PWM_SetOneShot
 248              		.section	.text.PWM_SetPWMMode,"ax",%progbits
 249              		.align	2
 250              		.global	PWM_SetPWMMode
 251              		.code	16
 252              		.thumb_func
 253              		.type	PWM_SetPWMMode, %function
 254              	PWM_SetPWMMode:
 255              	.LFB8:
 407:Generated_Source\PSoC4/PWM.c **** 
 408:Generated_Source\PSoC4/PWM.c **** 
 409:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMMode
 411:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 412:Generated_Source\PSoC4/PWM.c **** *
 413:Generated_Source\PSoC4/PWM.c **** * Summary:
 414:Generated_Source\PSoC4/PWM.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/PWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/PWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/PWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/PWM.c **** *  the mode.
 419:Generated_Source\PSoC4/PWM.c **** *
 420:Generated_Source\PSoC4/PWM.c **** * Parameters:
 421:Generated_Source\PSoC4/PWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/PWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/PWM.c **** *   Values:
 424:Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 13


 430:Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/PWM.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/PWM.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/PWM.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/PWM.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/PWM.c **** *
 445:Generated_Source\PSoC4/PWM.c **** * Return:
 446:Generated_Source\PSoC4/PWM.c **** *  None
 447:Generated_Source\PSoC4/PWM.c **** *
 448:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/PWM.c **** {
 256              		.loc 1 450 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 261              	.LVL18:
 451:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 262              		.loc 1 451 0
 263 0000 3F23     		movs	r3, #63
 264 0002 1840     		ands	r0, r3
 265              	.LVL19:
 266 0004 014B     		ldr	r3, .L17
 267 0006 1860     		str	r0, [r3]
 452:Generated_Source\PSoC4/PWM.c **** }
 268              		.loc 1 452 0
 269              		@ sp needed
 270 0008 7047     		bx	lr
 271              	.L18:
 272 000a C046     		.align	2
 273              	.L17:
 274 000c 68010540 		.word	1074069864
 275              		.cfi_endproc
 276              	.LFE8:
 277              		.size	PWM_SetPWMMode, .-PWM_SetPWMMode
 278              		.section	.text.PWM_SetPWMSyncKill,"ax",%progbits
 279              		.align	2
 280              		.global	PWM_SetPWMSyncKill
 281              		.code	16
 282              		.thumb_func
 283              		.type	PWM_SetPWMSyncKill, %function
 284              	PWM_SetPWMSyncKill:
 285              	.LFB9:
 453:Generated_Source\PSoC4/PWM.c **** 
 454:Generated_Source\PSoC4/PWM.c **** 
 455:Generated_Source\PSoC4/PWM.c **** 
 456:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 14


 457:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMSyncKill
 458:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 459:Generated_Source\PSoC4/PWM.c **** *
 460:Generated_Source\PSoC4/PWM.c **** * Summary:
 461:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/PWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/PWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/PWM.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/PWM.c **** *
 466:Generated_Source\PSoC4/PWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/PWM.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/PWM.c **** *
 469:Generated_Source\PSoC4/PWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/PWM.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/PWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/PWM.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/PWM.c **** 
 474:Generated_Source\PSoC4/PWM.c **** *
 475:Generated_Source\PSoC4/PWM.c **** * Parameters:
 476:Generated_Source\PSoC4/PWM.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/PWM.c **** *   Values:
 478:Generated_Source\PSoC4/PWM.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/PWM.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/PWM.c **** *
 481:Generated_Source\PSoC4/PWM.c **** * Return:
 482:Generated_Source\PSoC4/PWM.c **** *  None
 483:Generated_Source\PSoC4/PWM.c **** *
 484:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/PWM.c **** {
 286              		.loc 1 486 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              	.LVL20:
 291 0000 70B5     		push	{r4, r5, r6, lr}
 292              		.cfi_def_cfa_offset 16
 293              		.cfi_offset 4, -16
 294              		.cfi_offset 5, -12
 295              		.cfi_offset 6, -8
 296              		.cfi_offset 14, -4
 297 0002 0400     		movs	r4, r0
 487:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/PWM.c **** 
 489:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 298              		.loc 1 489 0
 299 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 300              	.LVL21:
 490:Generated_Source\PSoC4/PWM.c **** 
 491:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 301              		.loc 1 491 0
 302 0008 064A     		ldr	r2, .L20
 303 000a 1368     		ldr	r3, [r2]
 304 000c 0421     		movs	r1, #4
 305 000e 8B43     		bics	r3, r1
 306 0010 1360     		str	r3, [r2]
 492:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 15


 307              		.loc 1 492 0
 308 0012 1568     		ldr	r5, [r2]
 309 0014 A300     		lsls	r3, r4, #2
 310 0016 1940     		ands	r1, r3
 311 0018 0C00     		movs	r4, r1
 312              	.LVL22:
 313 001a 2C43     		orrs	r4, r5
 314 001c 1460     		str	r4, [r2]
 493:Generated_Source\PSoC4/PWM.c ****                                                PWM_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/PWM.c **** 
 495:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 315              		.loc 1 495 0
 316 001e FFF7FEFF 		bl	CyExitCriticalSection
 317              	.LVL23:
 496:Generated_Source\PSoC4/PWM.c **** }
 318              		.loc 1 496 0
 319              		@ sp needed
 320 0022 70BD     		pop	{r4, r5, r6, pc}
 321              	.L21:
 322              		.align	2
 323              	.L20:
 324 0024 40010540 		.word	1074069824
 325              		.cfi_endproc
 326              	.LFE9:
 327              		.size	PWM_SetPWMSyncKill, .-PWM_SetPWMSyncKill
 328              		.section	.text.PWM_SetPWMStopOnKill,"ax",%progbits
 329              		.align	2
 330              		.global	PWM_SetPWMStopOnKill
 331              		.code	16
 332              		.thumb_func
 333              		.type	PWM_SetPWMStopOnKill, %function
 334              	PWM_SetPWMStopOnKill:
 335              	.LFB10:
 497:Generated_Source\PSoC4/PWM.c **** 
 498:Generated_Source\PSoC4/PWM.c **** 
 499:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMStopOnKill
 501:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 502:Generated_Source\PSoC4/PWM.c **** *
 503:Generated_Source\PSoC4/PWM.c **** * Summary:
 504:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/PWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/PWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/PWM.c **** *
 508:Generated_Source\PSoC4/PWM.c **** *
 509:Generated_Source\PSoC4/PWM.c **** * Parameters:
 510:Generated_Source\PSoC4/PWM.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/PWM.c **** *   Values:
 512:Generated_Source\PSoC4/PWM.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/PWM.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/PWM.c **** *
 515:Generated_Source\PSoC4/PWM.c **** * Return:
 516:Generated_Source\PSoC4/PWM.c **** *  None
 517:Generated_Source\PSoC4/PWM.c **** *
 518:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 16


 336              		.loc 1 520 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              	.LVL24:
 341 0000 70B5     		push	{r4, r5, r6, lr}
 342              		.cfi_def_cfa_offset 16
 343              		.cfi_offset 4, -16
 344              		.cfi_offset 5, -12
 345              		.cfi_offset 6, -8
 346              		.cfi_offset 14, -4
 347 0002 0400     		movs	r4, r0
 521:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 522:Generated_Source\PSoC4/PWM.c **** 
 523:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 348              		.loc 1 523 0
 349 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 350              	.LVL25:
 524:Generated_Source\PSoC4/PWM.c **** 
 525:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
 351              		.loc 1 525 0
 352 0008 064A     		ldr	r2, .L23
 353 000a 1368     		ldr	r3, [r2]
 354 000c 0821     		movs	r1, #8
 355 000e 8B43     		bics	r3, r1
 356 0010 1360     		str	r3, [r2]
 526:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 357              		.loc 1 526 0
 358 0012 1568     		ldr	r5, [r2]
 359 0014 E300     		lsls	r3, r4, #3
 360 0016 1940     		ands	r1, r3
 361 0018 0C00     		movs	r4, r1
 362              	.LVL26:
 363 001a 2C43     		orrs	r4, r5
 364 001c 1460     		str	r4, [r2]
 527:Generated_Source\PSoC4/PWM.c ****                                                          PWM_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/PWM.c **** 
 529:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 365              		.loc 1 529 0
 366 001e FFF7FEFF 		bl	CyExitCriticalSection
 367              	.LVL27:
 530:Generated_Source\PSoC4/PWM.c **** }
 368              		.loc 1 530 0
 369              		@ sp needed
 370 0022 70BD     		pop	{r4, r5, r6, pc}
 371              	.L24:
 372              		.align	2
 373              	.L23:
 374 0024 40010540 		.word	1074069824
 375              		.cfi_endproc
 376              	.LFE10:
 377              		.size	PWM_SetPWMStopOnKill, .-PWM_SetPWMStopOnKill
 378              		.section	.text.PWM_SetPWMDeadTime,"ax",%progbits
 379              		.align	2
 380              		.global	PWM_SetPWMDeadTime
 381              		.code	16
 382              		.thumb_func
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 17


 383              		.type	PWM_SetPWMDeadTime, %function
 384              	PWM_SetPWMDeadTime:
 385              	.LFB11:
 531:Generated_Source\PSoC4/PWM.c **** 
 532:Generated_Source\PSoC4/PWM.c **** 
 533:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMDeadTime
 535:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 536:Generated_Source\PSoC4/PWM.c **** *
 537:Generated_Source\PSoC4/PWM.c **** * Summary:
 538:Generated_Source\PSoC4/PWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/PWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:Generated_Source\PSoC4/PWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/PWM.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/PWM.c **** 
 543:Generated_Source\PSoC4/PWM.c **** *
 544:Generated_Source\PSoC4/PWM.c **** * Parameters:
 545:Generated_Source\PSoC4/PWM.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/PWM.c **** *   Values: 0 to 255
 547:Generated_Source\PSoC4/PWM.c **** *
 548:Generated_Source\PSoC4/PWM.c **** * Return:
 549:Generated_Source\PSoC4/PWM.c **** *  None
 550:Generated_Source\PSoC4/PWM.c **** *
 551:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/PWM.c **** {
 386              		.loc 1 553 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390              	.LVL28:
 391 0000 10B5     		push	{r4, lr}
 392              		.cfi_def_cfa_offset 8
 393              		.cfi_offset 4, -8
 394              		.cfi_offset 14, -4
 395 0002 0400     		movs	r4, r0
 554:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/PWM.c **** 
 556:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 396              		.loc 1 556 0
 397 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 398              	.LVL29:
 557:Generated_Source\PSoC4/PWM.c **** 
 558:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 399              		.loc 1 558 0
 400 0008 064B     		ldr	r3, .L26
 401 000a 1968     		ldr	r1, [r3]
 402 000c 064A     		ldr	r2, .L26+4
 403 000e 0A40     		ands	r2, r1
 404 0010 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 405              		.loc 1 559 0
 406 0012 1A68     		ldr	r2, [r3]
 407 0014 2406     		lsls	r4, r4, #24
 408              	.LVL30:
 409 0016 240C     		lsrs	r4, r4, #16
 410 0018 1443     		orrs	r4, r2
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 18


 411 001a 1C60     		str	r4, [r3]
 560:Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/PWM.c **** 
 562:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 412              		.loc 1 562 0
 413 001c FFF7FEFF 		bl	CyExitCriticalSection
 414              	.LVL31:
 563:Generated_Source\PSoC4/PWM.c **** }
 415              		.loc 1 563 0
 416              		@ sp needed
 417 0020 10BD     		pop	{r4, pc}
 418              	.L27:
 419 0022 C046     		.align	2
 420              	.L26:
 421 0024 40010540 		.word	1074069824
 422 0028 FF00FFFF 		.word	-65281
 423              		.cfi_endproc
 424              	.LFE11:
 425              		.size	PWM_SetPWMDeadTime, .-PWM_SetPWMDeadTime
 426              		.section	.text.PWM_SetPWMInvert,"ax",%progbits
 427              		.align	2
 428              		.global	PWM_SetPWMInvert
 429              		.code	16
 430              		.thumb_func
 431              		.type	PWM_SetPWMInvert, %function
 432              	PWM_SetPWMInvert:
 433              	.LFB12:
 564:Generated_Source\PSoC4/PWM.c **** 
 565:Generated_Source\PSoC4/PWM.c **** 
 566:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMInvert
 568:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 569:Generated_Source\PSoC4/PWM.c **** *
 570:Generated_Source\PSoC4/PWM.c **** * Summary:
 571:Generated_Source\PSoC4/PWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/PWM.c **** *  inverted from their normal output values.  This functionality is only
 573:Generated_Source\PSoC4/PWM.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/PWM.c **** *
 575:Generated_Source\PSoC4/PWM.c **** * Parameters:
 576:Generated_Source\PSoC4/PWM.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/PWM.c **** *   Values:
 578:Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/PWM.c **** *
 581:Generated_Source\PSoC4/PWM.c **** * Return:
 582:Generated_Source\PSoC4/PWM.c **** *  None
 583:Generated_Source\PSoC4/PWM.c **** *
 584:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/PWM.c **** {
 434              		.loc 1 586 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              	.LVL32:
 439 0000 10B5     		push	{r4, lr}
 440              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 19


 441              		.cfi_offset 4, -8
 442              		.cfi_offset 14, -4
 443 0002 0400     		movs	r4, r0
 587:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/PWM.c **** 
 589:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 444              		.loc 1 589 0
 445 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 446              	.LVL33:
 590:Generated_Source\PSoC4/PWM.c **** 
 591:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 447              		.loc 1 591 0
 448 0008 054B     		ldr	r3, .L29
 449 000a 1968     		ldr	r1, [r3]
 450 000c 054A     		ldr	r2, .L29+4
 451 000e 0A40     		ands	r2, r1
 452 0010 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 453              		.loc 1 592 0
 454 0012 1A68     		ldr	r2, [r3]
 455 0014 1443     		orrs	r4, r2
 456              	.LVL34:
 457 0016 1C60     		str	r4, [r3]
 593:Generated_Source\PSoC4/PWM.c **** 
 594:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 458              		.loc 1 594 0
 459 0018 FFF7FEFF 		bl	CyExitCriticalSection
 460              	.LVL35:
 595:Generated_Source\PSoC4/PWM.c **** }
 461              		.loc 1 595 0
 462              		@ sp needed
 463 001c 10BD     		pop	{r4, pc}
 464              	.L30:
 465 001e C046     		.align	2
 466              	.L29:
 467 0020 40010540 		.word	1074069824
 468 0024 FFFFCFFF 		.word	-3145729
 469              		.cfi_endproc
 470              	.LFE12:
 471              		.size	PWM_SetPWMInvert, .-PWM_SetPWMInvert
 472              		.section	.text.PWM_WriteCounter,"ax",%progbits
 473              		.align	2
 474              		.global	PWM_WriteCounter
 475              		.code	16
 476              		.thumb_func
 477              		.type	PWM_WriteCounter, %function
 478              	PWM_WriteCounter:
 479              	.LFB13:
 596:Generated_Source\PSoC4/PWM.c **** 
 597:Generated_Source\PSoC4/PWM.c **** 
 598:Generated_Source\PSoC4/PWM.c **** 
 599:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCounter
 601:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 602:Generated_Source\PSoC4/PWM.c **** *
 603:Generated_Source\PSoC4/PWM.c **** * Summary:
 604:Generated_Source\PSoC4/PWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 20


 605:Generated_Source\PSoC4/PWM.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/PWM.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/PWM.c **** *
 608:Generated_Source\PSoC4/PWM.c **** * Parameters:
 609:Generated_Source\PSoC4/PWM.c **** *  count: value to write
 610:Generated_Source\PSoC4/PWM.c **** *
 611:Generated_Source\PSoC4/PWM.c **** * Return:
 612:Generated_Source\PSoC4/PWM.c **** *  None
 613:Generated_Source\PSoC4/PWM.c **** *
 614:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/PWM.c **** void PWM_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/PWM.c **** {
 480              		.loc 1 616 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              		@ link register save eliminated.
 485              	.LVL36:
 617:Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
 486              		.loc 1 617 0
 487 0000 0004     		lsls	r0, r0, #16
 488              	.LVL37:
 489 0002 000C     		lsrs	r0, r0, #16
 490 0004 014B     		ldr	r3, .L32
 491 0006 1860     		str	r0, [r3]
 618:Generated_Source\PSoC4/PWM.c **** }
 492              		.loc 1 618 0
 493              		@ sp needed
 494 0008 7047     		bx	lr
 495              	.L33:
 496 000a C046     		.align	2
 497              	.L32:
 498 000c 48010540 		.word	1074069832
 499              		.cfi_endproc
 500              	.LFE13:
 501              		.size	PWM_WriteCounter, .-PWM_WriteCounter
 502              		.section	.text.PWM_ReadCounter,"ax",%progbits
 503              		.align	2
 504              		.global	PWM_ReadCounter
 505              		.code	16
 506              		.thumb_func
 507              		.type	PWM_ReadCounter, %function
 508              	PWM_ReadCounter:
 509              	.LFB14:
 619:Generated_Source\PSoC4/PWM.c **** 
 620:Generated_Source\PSoC4/PWM.c **** 
 621:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCounter
 623:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 624:Generated_Source\PSoC4/PWM.c **** *
 625:Generated_Source\PSoC4/PWM.c **** * Summary:
 626:Generated_Source\PSoC4/PWM.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/PWM.c **** *
 628:Generated_Source\PSoC4/PWM.c **** * Parameters:
 629:Generated_Source\PSoC4/PWM.c **** *  None
 630:Generated_Source\PSoC4/PWM.c **** *
 631:Generated_Source\PSoC4/PWM.c **** * Return:
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 21


 632:Generated_Source\PSoC4/PWM.c **** *  Current counter value
 633:Generated_Source\PSoC4/PWM.c **** *
 634:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCounter(void)
 636:Generated_Source\PSoC4/PWM.c **** {
 510              		.loc 1 636 0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 514              		@ link register save eliminated.
 637:Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 515              		.loc 1 637 0
 516 0000 024B     		ldr	r3, .L35
 517 0002 1868     		ldr	r0, [r3]
 518 0004 0004     		lsls	r0, r0, #16
 519 0006 000C     		lsrs	r0, r0, #16
 638:Generated_Source\PSoC4/PWM.c **** }
 520              		.loc 1 638 0
 521              		@ sp needed
 522 0008 7047     		bx	lr
 523              	.L36:
 524 000a C046     		.align	2
 525              	.L35:
 526 000c 48010540 		.word	1074069832
 527              		.cfi_endproc
 528              	.LFE14:
 529              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 530              		.section	.text.PWM_SetCounterMode,"ax",%progbits
 531              		.align	2
 532              		.global	PWM_SetCounterMode
 533              		.code	16
 534              		.thumb_func
 535              		.type	PWM_SetCounterMode, %function
 536              	PWM_SetCounterMode:
 537              	.LFB15:
 639:Generated_Source\PSoC4/PWM.c **** 
 640:Generated_Source\PSoC4/PWM.c **** 
 641:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCounterMode
 643:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 644:Generated_Source\PSoC4/PWM.c **** *
 645:Generated_Source\PSoC4/PWM.c **** * Summary:
 646:Generated_Source\PSoC4/PWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/PWM.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/PWM.c **** *
 649:Generated_Source\PSoC4/PWM.c **** * Parameters:
 650:Generated_Source\PSoC4/PWM.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/PWM.c **** *   Values:
 652:Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/PWM.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/PWM.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/PWM.c **** *                                         and period
 659:Generated_Source\PSoC4/PWM.c **** *
 660:Generated_Source\PSoC4/PWM.c **** * Return:
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 22


 661:Generated_Source\PSoC4/PWM.c **** *  None
 662:Generated_Source\PSoC4/PWM.c **** *
 663:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/PWM.c **** void PWM_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/PWM.c **** {
 538              		.loc 1 665 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 0, uses_anonymous_args = 0
 542              	.LVL38:
 543 0000 10B5     		push	{r4, lr}
 544              		.cfi_def_cfa_offset 8
 545              		.cfi_offset 4, -8
 546              		.cfi_offset 14, -4
 547 0002 0400     		movs	r4, r0
 666:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/PWM.c **** 
 668:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 548              		.loc 1 668 0
 549 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 550              	.LVL39:
 669:Generated_Source\PSoC4/PWM.c **** 
 670:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 551              		.loc 1 670 0
 552 0008 054B     		ldr	r3, .L38
 553 000a 1968     		ldr	r1, [r3]
 554 000c 054A     		ldr	r2, .L38+4
 555 000e 0A40     		ands	r2, r1
 556 0010 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 557              		.loc 1 671 0
 558 0012 1A68     		ldr	r2, [r3]
 559 0014 1443     		orrs	r4, r2
 560              	.LVL40:
 561 0016 1C60     		str	r4, [r3]
 672:Generated_Source\PSoC4/PWM.c **** 
 673:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 562              		.loc 1 673 0
 563 0018 FFF7FEFF 		bl	CyExitCriticalSection
 564              	.LVL41:
 674:Generated_Source\PSoC4/PWM.c **** }
 565              		.loc 1 674 0
 566              		@ sp needed
 567 001c 10BD     		pop	{r4, pc}
 568              	.L39:
 569 001e C046     		.align	2
 570              	.L38:
 571 0020 40010540 		.word	1074069824
 572 0024 FFFFFCFF 		.word	-196609
 573              		.cfi_endproc
 574              	.LFE15:
 575              		.size	PWM_SetCounterMode, .-PWM_SetCounterMode
 576              		.section	.text.PWM_WritePeriod,"ax",%progbits
 577              		.align	2
 578              		.global	PWM_WritePeriod
 579              		.code	16
 580              		.thumb_func
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 23


 581              		.type	PWM_WritePeriod, %function
 582              	PWM_WritePeriod:
 583              	.LFB16:
 675:Generated_Source\PSoC4/PWM.c **** 
 676:Generated_Source\PSoC4/PWM.c **** 
 677:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 679:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 680:Generated_Source\PSoC4/PWM.c **** *
 681:Generated_Source\PSoC4/PWM.c **** * Summary:
 682:Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/PWM.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/PWM.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/PWM.c **** *
 686:Generated_Source\PSoC4/PWM.c **** * Parameters:
 687:Generated_Source\PSoC4/PWM.c **** *  period: Period value
 688:Generated_Source\PSoC4/PWM.c **** *
 689:Generated_Source\PSoC4/PWM.c **** * Return:
 690:Generated_Source\PSoC4/PWM.c **** *  None
 691:Generated_Source\PSoC4/PWM.c **** *
 692:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/PWM.c **** {
 584              		.loc 1 694 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589              	.LVL42:
 695:Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 590              		.loc 1 695 0
 591 0000 0004     		lsls	r0, r0, #16
 592              	.LVL43:
 593 0002 000C     		lsrs	r0, r0, #16
 594 0004 014B     		ldr	r3, .L41
 595 0006 1860     		str	r0, [r3]
 696:Generated_Source\PSoC4/PWM.c **** }
 596              		.loc 1 696 0
 597              		@ sp needed
 598 0008 7047     		bx	lr
 599              	.L42:
 600 000a C046     		.align	2
 601              	.L41:
 602 000c 54010540 		.word	1074069844
 603              		.cfi_endproc
 604              	.LFE16:
 605              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 606              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 607              		.align	2
 608              		.global	PWM_ReadPeriod
 609              		.code	16
 610              		.thumb_func
 611              		.type	PWM_ReadPeriod, %function
 612              	PWM_ReadPeriod:
 613              	.LFB17:
 697:Generated_Source\PSoC4/PWM.c **** 
 698:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 24


 699:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 701:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 702:Generated_Source\PSoC4/PWM.c **** *
 703:Generated_Source\PSoC4/PWM.c **** * Summary:
 704:Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/PWM.c **** *
 706:Generated_Source\PSoC4/PWM.c **** * Parameters:
 707:Generated_Source\PSoC4/PWM.c **** *  None
 708:Generated_Source\PSoC4/PWM.c **** *
 709:Generated_Source\PSoC4/PWM.c **** * Return:
 710:Generated_Source\PSoC4/PWM.c **** *  Period value
 711:Generated_Source\PSoC4/PWM.c **** *
 712:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriod(void)
 714:Generated_Source\PSoC4/PWM.c **** {
 614              		.loc 1 714 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              		@ link register save eliminated.
 715:Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 619              		.loc 1 715 0
 620 0000 024B     		ldr	r3, .L44
 621 0002 1868     		ldr	r0, [r3]
 622 0004 0004     		lsls	r0, r0, #16
 623 0006 000C     		lsrs	r0, r0, #16
 716:Generated_Source\PSoC4/PWM.c **** }
 624              		.loc 1 716 0
 625              		@ sp needed
 626 0008 7047     		bx	lr
 627              	.L45:
 628 000a C046     		.align	2
 629              	.L44:
 630 000c 54010540 		.word	1074069844
 631              		.cfi_endproc
 632              	.LFE17:
 633              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 634              		.section	.text.PWM_SetCompareSwap,"ax",%progbits
 635              		.align	2
 636              		.global	PWM_SetCompareSwap
 637              		.code	16
 638              		.thumb_func
 639              		.type	PWM_SetCompareSwap, %function
 640              	PWM_SetCompareSwap:
 641              	.LFB18:
 717:Generated_Source\PSoC4/PWM.c **** 
 718:Generated_Source\PSoC4/PWM.c **** 
 719:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCompareSwap
 721:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 722:Generated_Source\PSoC4/PWM.c **** *
 723:Generated_Source\PSoC4/PWM.c **** * Summary:
 724:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/PWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/PWM.c **** *  following a hardware switch event.
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 25


 728:Generated_Source\PSoC4/PWM.c **** *
 729:Generated_Source\PSoC4/PWM.c **** * Parameters:
 730:Generated_Source\PSoC4/PWM.c **** *  swapEnable
 731:Generated_Source\PSoC4/PWM.c **** *   Values:
 732:Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/PWM.c **** *
 735:Generated_Source\PSoC4/PWM.c **** * Return:
 736:Generated_Source\PSoC4/PWM.c **** *  None
 737:Generated_Source\PSoC4/PWM.c **** *
 738:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/PWM.c **** void PWM_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/PWM.c **** {
 642              		.loc 1 740 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646              	.LVL44:
 647 0000 10B5     		push	{r4, lr}
 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 4, -8
 650              		.cfi_offset 14, -4
 651 0002 0400     		movs	r4, r0
 741:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/PWM.c **** 
 743:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 652              		.loc 1 743 0
 653 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 654              	.LVL45:
 744:Generated_Source\PSoC4/PWM.c **** 
 745:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 655              		.loc 1 745 0
 656 0008 054B     		ldr	r3, .L47
 657 000a 1A68     		ldr	r2, [r3]
 658 000c 0121     		movs	r1, #1
 659 000e 8A43     		bics	r2, r1
 660 0010 1A60     		str	r2, [r3]
 746:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 661              		.loc 1 746 0
 662 0012 1A68     		ldr	r2, [r3]
 663 0014 0C40     		ands	r4, r1
 664              	.LVL46:
 665 0016 1443     		orrs	r4, r2
 666 0018 1C60     		str	r4, [r3]
 747:Generated_Source\PSoC4/PWM.c **** 
 748:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 667              		.loc 1 748 0
 668 001a FFF7FEFF 		bl	CyExitCriticalSection
 669              	.LVL47:
 749:Generated_Source\PSoC4/PWM.c **** }
 670              		.loc 1 749 0
 671              		@ sp needed
 672 001e 10BD     		pop	{r4, pc}
 673              	.L48:
 674              		.align	2
 675              	.L47:
 676 0020 40010540 		.word	1074069824
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 26


 677              		.cfi_endproc
 678              	.LFE18:
 679              		.size	PWM_SetCompareSwap, .-PWM_SetCompareSwap
 680              		.section	.text.PWM_WritePeriodBuf,"ax",%progbits
 681              		.align	2
 682              		.global	PWM_WritePeriodBuf
 683              		.code	16
 684              		.thumb_func
 685              		.type	PWM_WritePeriodBuf, %function
 686              	PWM_WritePeriodBuf:
 687              	.LFB19:
 750:Generated_Source\PSoC4/PWM.c **** 
 751:Generated_Source\PSoC4/PWM.c **** 
 752:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriodBuf
 754:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 755:Generated_Source\PSoC4/PWM.c **** *
 756:Generated_Source\PSoC4/PWM.c **** * Summary:
 757:Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/PWM.c **** *
 759:Generated_Source\PSoC4/PWM.c **** * Parameters:
 760:Generated_Source\PSoC4/PWM.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/PWM.c **** *
 762:Generated_Source\PSoC4/PWM.c **** * Return:
 763:Generated_Source\PSoC4/PWM.c **** *  None
 764:Generated_Source\PSoC4/PWM.c **** *
 765:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/PWM.c **** {
 688              		.loc 1 767 0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 693              	.LVL48:
 768:Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 694              		.loc 1 768 0
 695 0000 0004     		lsls	r0, r0, #16
 696              	.LVL49:
 697 0002 000C     		lsrs	r0, r0, #16
 698 0004 014B     		ldr	r3, .L50
 699 0006 1860     		str	r0, [r3]
 769:Generated_Source\PSoC4/PWM.c **** }
 700              		.loc 1 769 0
 701              		@ sp needed
 702 0008 7047     		bx	lr
 703              	.L51:
 704 000a C046     		.align	2
 705              	.L50:
 706 000c 58010540 		.word	1074069848
 707              		.cfi_endproc
 708              	.LFE19:
 709              		.size	PWM_WritePeriodBuf, .-PWM_WritePeriodBuf
 710              		.section	.text.PWM_ReadPeriodBuf,"ax",%progbits
 711              		.align	2
 712              		.global	PWM_ReadPeriodBuf
 713              		.code	16
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 27


 714              		.thumb_func
 715              		.type	PWM_ReadPeriodBuf, %function
 716              	PWM_ReadPeriodBuf:
 717              	.LFB20:
 770:Generated_Source\PSoC4/PWM.c **** 
 771:Generated_Source\PSoC4/PWM.c **** 
 772:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriodBuf
 774:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 775:Generated_Source\PSoC4/PWM.c **** *
 776:Generated_Source\PSoC4/PWM.c **** * Summary:
 777:Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/PWM.c **** *
 779:Generated_Source\PSoC4/PWM.c **** * Parameters:
 780:Generated_Source\PSoC4/PWM.c **** *  None
 781:Generated_Source\PSoC4/PWM.c **** *
 782:Generated_Source\PSoC4/PWM.c **** * Return:
 783:Generated_Source\PSoC4/PWM.c **** *  Period value
 784:Generated_Source\PSoC4/PWM.c **** *
 785:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/PWM.c **** {
 718              		.loc 1 787 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 0, uses_anonymous_args = 0
 722              		@ link register save eliminated.
 788:Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 723              		.loc 1 788 0
 724 0000 024B     		ldr	r3, .L53
 725 0002 1868     		ldr	r0, [r3]
 726 0004 0004     		lsls	r0, r0, #16
 727 0006 000C     		lsrs	r0, r0, #16
 789:Generated_Source\PSoC4/PWM.c **** }
 728              		.loc 1 789 0
 729              		@ sp needed
 730 0008 7047     		bx	lr
 731              	.L54:
 732 000a C046     		.align	2
 733              	.L53:
 734 000c 58010540 		.word	1074069848
 735              		.cfi_endproc
 736              	.LFE20:
 737              		.size	PWM_ReadPeriodBuf, .-PWM_ReadPeriodBuf
 738              		.section	.text.PWM_SetPeriodSwap,"ax",%progbits
 739              		.align	2
 740              		.global	PWM_SetPeriodSwap
 741              		.code	16
 742              		.thumb_func
 743              		.type	PWM_SetPeriodSwap, %function
 744              	PWM_SetPeriodSwap:
 745              	.LFB21:
 790:Generated_Source\PSoC4/PWM.c **** 
 791:Generated_Source\PSoC4/PWM.c **** 
 792:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPeriodSwap
 794:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 28


 795:Generated_Source\PSoC4/PWM.c **** *
 796:Generated_Source\PSoC4/PWM.c **** * Summary:
 797:Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/PWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/PWM.c **** *  switch event.
 801:Generated_Source\PSoC4/PWM.c **** *
 802:Generated_Source\PSoC4/PWM.c **** * Parameters:
 803:Generated_Source\PSoC4/PWM.c **** *  swapEnable
 804:Generated_Source\PSoC4/PWM.c **** *   Values:
 805:Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/PWM.c **** *
 808:Generated_Source\PSoC4/PWM.c **** * Return:
 809:Generated_Source\PSoC4/PWM.c **** *  None
 810:Generated_Source\PSoC4/PWM.c **** *
 811:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 812:Generated_Source\PSoC4/PWM.c **** void PWM_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/PWM.c **** {
 746              		.loc 1 813 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750              	.LVL50:
 751 0000 70B5     		push	{r4, r5, r6, lr}
 752              		.cfi_def_cfa_offset 16
 753              		.cfi_offset 4, -16
 754              		.cfi_offset 5, -12
 755              		.cfi_offset 6, -8
 756              		.cfi_offset 14, -4
 757 0002 0400     		movs	r4, r0
 814:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/PWM.c **** 
 816:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 758              		.loc 1 816 0
 759 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 760              	.LVL51:
 817:Generated_Source\PSoC4/PWM.c **** 
 818:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
 761              		.loc 1 818 0
 762 0008 064A     		ldr	r2, .L56
 763 000a 1368     		ldr	r3, [r2]
 764 000c 0221     		movs	r1, #2
 765 000e 8B43     		bics	r3, r1
 766 0010 1360     		str	r3, [r2]
 819:Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 767              		.loc 1 819 0
 768 0012 1568     		ldr	r5, [r2]
 769 0014 6300     		lsls	r3, r4, #1
 770 0016 1940     		ands	r1, r3
 771 0018 0C00     		movs	r4, r1
 772              	.LVL52:
 773 001a 2C43     		orrs	r4, r5
 774 001c 1460     		str	r4, [r2]
 820:Generated_Source\PSoC4/PWM.c ****                                                             PWM_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/PWM.c **** 
 822:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 29


 775              		.loc 1 822 0
 776 001e FFF7FEFF 		bl	CyExitCriticalSection
 777              	.LVL53:
 823:Generated_Source\PSoC4/PWM.c **** }
 778              		.loc 1 823 0
 779              		@ sp needed
 780 0022 70BD     		pop	{r4, r5, r6, pc}
 781              	.L57:
 782              		.align	2
 783              	.L56:
 784 0024 40010540 		.word	1074069824
 785              		.cfi_endproc
 786              	.LFE21:
 787              		.size	PWM_SetPeriodSwap, .-PWM_SetPeriodSwap
 788              		.section	.text.PWM_WriteCompare,"ax",%progbits
 789              		.align	2
 790              		.global	PWM_WriteCompare
 791              		.code	16
 792              		.thumb_func
 793              		.type	PWM_WriteCompare, %function
 794              	PWM_WriteCompare:
 795              	.LFB22:
 824:Generated_Source\PSoC4/PWM.c **** 
 825:Generated_Source\PSoC4/PWM.c **** 
 826:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompare
 828:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 829:Generated_Source\PSoC4/PWM.c **** *
 830:Generated_Source\PSoC4/PWM.c **** * Summary:
 831:Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/PWM.c **** *
 834:Generated_Source\PSoC4/PWM.c **** * Parameters:
 835:Generated_Source\PSoC4/PWM.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/PWM.c **** *
 837:Generated_Source\PSoC4/PWM.c **** * Return:
 838:Generated_Source\PSoC4/PWM.c **** *  None
 839:Generated_Source\PSoC4/PWM.c **** *
 840:Generated_Source\PSoC4/PWM.c **** * Note:
 841:Generated_Source\PSoC4/PWM.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:Generated_Source\PSoC4/PWM.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/PWM.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/PWM.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/PWM.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/PWM.c **** *
 848:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/PWM.c **** {
 796              		.loc 1 850 0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 0
 799              		@ frame_needed = 0, uses_anonymous_args = 0
 800              		@ link register save eliminated.
 801              	.LVL54:
 851:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 30


 853:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/PWM.c **** 
 855:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 857:Generated_Source\PSoC4/PWM.c **** 
 858:Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/PWM.c ****         {
 860:Generated_Source\PSoC4/PWM.c ****             compare++;
 861:Generated_Source\PSoC4/PWM.c ****         }
 862:Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/PWM.c ****         {
 864:Generated_Source\PSoC4/PWM.c ****             compare--;
 865:Generated_Source\PSoC4/PWM.c ****         }
 866:Generated_Source\PSoC4/PWM.c ****         else
 867:Generated_Source\PSoC4/PWM.c ****         {
 868:Generated_Source\PSoC4/PWM.c ****         }
 869:Generated_Source\PSoC4/PWM.c ****         
 870:Generated_Source\PSoC4/PWM.c ****     
 871:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/PWM.c ****     
 873:Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 802              		.loc 1 873 0
 803 0000 0004     		lsls	r0, r0, #16
 804              	.LVL55:
 805 0002 000C     		lsrs	r0, r0, #16
 806 0004 014B     		ldr	r3, .L59
 807 0006 1860     		str	r0, [r3]
 874:Generated_Source\PSoC4/PWM.c **** }
 808              		.loc 1 874 0
 809              		@ sp needed
 810 0008 7047     		bx	lr
 811              	.L60:
 812 000a C046     		.align	2
 813              	.L59:
 814 000c 4C010540 		.word	1074069836
 815              		.cfi_endproc
 816              	.LFE22:
 817              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 818              		.section	.text.PWM_ReadCompare,"ax",%progbits
 819              		.align	2
 820              		.global	PWM_ReadCompare
 821              		.code	16
 822              		.thumb_func
 823              		.type	PWM_ReadCompare, %function
 824              	PWM_ReadCompare:
 825              	.LFB23:
 875:Generated_Source\PSoC4/PWM.c **** 
 876:Generated_Source\PSoC4/PWM.c **** 
 877:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompare
 879:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 880:Generated_Source\PSoC4/PWM.c **** *
 881:Generated_Source\PSoC4/PWM.c **** * Summary:
 882:Generated_Source\PSoC4/PWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/PWM.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:Generated_Source\PSoC4/PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 31


 886:Generated_Source\PSoC4/PWM.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/PWM.c **** *
 888:Generated_Source\PSoC4/PWM.c **** * Parameters:
 889:Generated_Source\PSoC4/PWM.c **** *  None
 890:Generated_Source\PSoC4/PWM.c **** *
 891:Generated_Source\PSoC4/PWM.c **** * Return:
 892:Generated_Source\PSoC4/PWM.c **** *  Compare value
 893:Generated_Source\PSoC4/PWM.c **** *
 894:Generated_Source\PSoC4/PWM.c **** * Note:
 895:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/PWM.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/PWM.c **** *
 899:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompare(void)
 901:Generated_Source\PSoC4/PWM.c **** {
 826              		.loc 1 901 0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 0
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830              		@ link register save eliminated.
 902:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/PWM.c **** 
 907:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 909:Generated_Source\PSoC4/PWM.c ****         
 910:Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_REG;
 911:Generated_Source\PSoC4/PWM.c ****         
 912:Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/PWM.c ****         {
 914:Generated_Source\PSoC4/PWM.c ****             regVal--;
 915:Generated_Source\PSoC4/PWM.c ****         }
 916:Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/PWM.c ****         {
 918:Generated_Source\PSoC4/PWM.c ****             regVal++;
 919:Generated_Source\PSoC4/PWM.c ****         }
 920:Generated_Source\PSoC4/PWM.c ****         else
 921:Generated_Source\PSoC4/PWM.c ****         {
 922:Generated_Source\PSoC4/PWM.c ****         }
 923:Generated_Source\PSoC4/PWM.c **** 
 924:Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
 925:Generated_Source\PSoC4/PWM.c ****     #else
 926:Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 831              		.loc 1 926 0
 832 0000 024B     		ldr	r3, .L62
 833 0002 1868     		ldr	r0, [r3]
 834 0004 0004     		lsls	r0, r0, #16
 835 0006 000C     		lsrs	r0, r0, #16
 927:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/PWM.c **** }
 836              		.loc 1 928 0
 837              		@ sp needed
 838 0008 7047     		bx	lr
 839              	.L63:
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 32


 840 000a C046     		.align	2
 841              	.L62:
 842 000c 4C010540 		.word	1074069836
 843              		.cfi_endproc
 844              	.LFE23:
 845              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 846              		.section	.text.PWM_WriteCompareBuf,"ax",%progbits
 847              		.align	2
 848              		.global	PWM_WriteCompareBuf
 849              		.code	16
 850              		.thumb_func
 851              		.type	PWM_WriteCompareBuf, %function
 852              	PWM_WriteCompareBuf:
 853              	.LFB24:
 929:Generated_Source\PSoC4/PWM.c **** 
 930:Generated_Source\PSoC4/PWM.c **** 
 931:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompareBuf
 933:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 934:Generated_Source\PSoC4/PWM.c **** *
 935:Generated_Source\PSoC4/PWM.c **** * Summary:
 936:Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/PWM.c **** *
 939:Generated_Source\PSoC4/PWM.c **** * Parameters:
 940:Generated_Source\PSoC4/PWM.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/PWM.c **** *
 942:Generated_Source\PSoC4/PWM.c **** * Return:
 943:Generated_Source\PSoC4/PWM.c **** *  None
 944:Generated_Source\PSoC4/PWM.c **** *
 945:Generated_Source\PSoC4/PWM.c **** * Note:
 946:Generated_Source\PSoC4/PWM.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/PWM.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/PWM.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/PWM.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/PWM.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/PWM.c **** *
 953:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/PWM.c **** {
 854              		.loc 1 955 0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 858              		@ link register save eliminated.
 859              	.LVL56:
 956:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/PWM.c **** 
 960:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 962:Generated_Source\PSoC4/PWM.c **** 
 963:Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/PWM.c ****         {
 965:Generated_Source\PSoC4/PWM.c ****             compareBuf++;
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 33


 966:Generated_Source\PSoC4/PWM.c ****         }
 967:Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/PWM.c ****         {
 969:Generated_Source\PSoC4/PWM.c ****             compareBuf --;
 970:Generated_Source\PSoC4/PWM.c ****         }
 971:Generated_Source\PSoC4/PWM.c ****         else
 972:Generated_Source\PSoC4/PWM.c ****         {
 973:Generated_Source\PSoC4/PWM.c ****         }
 974:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/PWM.c ****     
 976:Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 860              		.loc 1 976 0
 861 0000 0004     		lsls	r0, r0, #16
 862              	.LVL57:
 863 0002 000C     		lsrs	r0, r0, #16
 864 0004 014B     		ldr	r3, .L65
 865 0006 1860     		str	r0, [r3]
 977:Generated_Source\PSoC4/PWM.c **** }
 866              		.loc 1 977 0
 867              		@ sp needed
 868 0008 7047     		bx	lr
 869              	.L66:
 870 000a C046     		.align	2
 871              	.L65:
 872 000c 50010540 		.word	1074069840
 873              		.cfi_endproc
 874              	.LFE24:
 875              		.size	PWM_WriteCompareBuf, .-PWM_WriteCompareBuf
 876              		.section	.text.PWM_ReadCompareBuf,"ax",%progbits
 877              		.align	2
 878              		.global	PWM_ReadCompareBuf
 879              		.code	16
 880              		.thumb_func
 881              		.type	PWM_ReadCompareBuf, %function
 882              	PWM_ReadCompareBuf:
 883              	.LFB25:
 978:Generated_Source\PSoC4/PWM.c **** 
 979:Generated_Source\PSoC4/PWM.c **** 
 980:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompareBuf
 982:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 983:Generated_Source\PSoC4/PWM.c **** *
 984:Generated_Source\PSoC4/PWM.c **** * Summary:
 985:Generated_Source\PSoC4/PWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/PWM.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/PWM.c **** *
 988:Generated_Source\PSoC4/PWM.c **** * Parameters:
 989:Generated_Source\PSoC4/PWM.c **** *  None
 990:Generated_Source\PSoC4/PWM.c **** *
 991:Generated_Source\PSoC4/PWM.c **** * Return:
 992:Generated_Source\PSoC4/PWM.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/PWM.c **** *
 994:Generated_Source\PSoC4/PWM.c **** * Note:
 995:Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/PWM.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 34


 999:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/PWM.c **** {
 884              		.loc 1 1001 0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 888              		@ link register save eliminated.
1002:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/PWM.c **** 
1007:Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
1009:Generated_Source\PSoC4/PWM.c **** 
1010:Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/PWM.c ****         
1012:Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
1013:Generated_Source\PSoC4/PWM.c ****         {
1014:Generated_Source\PSoC4/PWM.c ****             regVal--;
1015:Generated_Source\PSoC4/PWM.c ****         }
1016:Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/PWM.c ****         {
1018:Generated_Source\PSoC4/PWM.c ****             regVal++;
1019:Generated_Source\PSoC4/PWM.c ****         }
1020:Generated_Source\PSoC4/PWM.c ****         else
1021:Generated_Source\PSoC4/PWM.c ****         {
1022:Generated_Source\PSoC4/PWM.c ****         }
1023:Generated_Source\PSoC4/PWM.c **** 
1024:Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
1025:Generated_Source\PSoC4/PWM.c ****     #else
1026:Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 889              		.loc 1 1026 0
 890 0000 024B     		ldr	r3, .L68
 891 0002 1868     		ldr	r0, [r3]
 892 0004 0004     		lsls	r0, r0, #16
 893 0006 000C     		lsrs	r0, r0, #16
1027:Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/PWM.c **** }
 894              		.loc 1 1028 0
 895              		@ sp needed
 896 0008 7047     		bx	lr
 897              	.L69:
 898 000a C046     		.align	2
 899              	.L68:
 900 000c 50010540 		.word	1074069840
 901              		.cfi_endproc
 902              	.LFE25:
 903              		.size	PWM_ReadCompareBuf, .-PWM_ReadCompareBuf
 904              		.section	.text.PWM_ReadCapture,"ax",%progbits
 905              		.align	2
 906              		.global	PWM_ReadCapture
 907              		.code	16
 908              		.thumb_func
 909              		.type	PWM_ReadCapture, %function
 910              	PWM_ReadCapture:
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 35


 911              	.LFB26:
1029:Generated_Source\PSoC4/PWM.c **** 
1030:Generated_Source\PSoC4/PWM.c **** 
1031:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCapture
1033:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1034:Generated_Source\PSoC4/PWM.c **** *
1035:Generated_Source\PSoC4/PWM.c **** * Summary:
1036:Generated_Source\PSoC4/PWM.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/PWM.c **** *
1039:Generated_Source\PSoC4/PWM.c **** * Parameters:
1040:Generated_Source\PSoC4/PWM.c **** *  None
1041:Generated_Source\PSoC4/PWM.c **** *
1042:Generated_Source\PSoC4/PWM.c **** * Return:
1043:Generated_Source\PSoC4/PWM.c **** *  Capture value
1044:Generated_Source\PSoC4/PWM.c **** *
1045:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCapture(void)
1047:Generated_Source\PSoC4/PWM.c **** {
 912              		.loc 1 1047 0
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 0
 915              		@ frame_needed = 0, uses_anonymous_args = 0
 916              		@ link register save eliminated.
1048:Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 917              		.loc 1 1048 0
 918 0000 024B     		ldr	r3, .L71
 919 0002 1868     		ldr	r0, [r3]
 920 0004 0004     		lsls	r0, r0, #16
 921 0006 000C     		lsrs	r0, r0, #16
1049:Generated_Source\PSoC4/PWM.c **** }
 922              		.loc 1 1049 0
 923              		@ sp needed
 924 0008 7047     		bx	lr
 925              	.L72:
 926 000a C046     		.align	2
 927              	.L71:
 928 000c 4C010540 		.word	1074069836
 929              		.cfi_endproc
 930              	.LFE26:
 931              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 932              		.section	.text.PWM_ReadCaptureBuf,"ax",%progbits
 933              		.align	2
 934              		.global	PWM_ReadCaptureBuf
 935              		.code	16
 936              		.thumb_func
 937              		.type	PWM_ReadCaptureBuf, %function
 938              	PWM_ReadCaptureBuf:
 939              	.LFB27:
1050:Generated_Source\PSoC4/PWM.c **** 
1051:Generated_Source\PSoC4/PWM.c **** 
1052:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCaptureBuf
1054:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1055:Generated_Source\PSoC4/PWM.c **** *
1056:Generated_Source\PSoC4/PWM.c **** * Summary:
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 36


1057:Generated_Source\PSoC4/PWM.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/PWM.c **** *
1060:Generated_Source\PSoC4/PWM.c **** * Parameters:
1061:Generated_Source\PSoC4/PWM.c **** *  None
1062:Generated_Source\PSoC4/PWM.c **** *
1063:Generated_Source\PSoC4/PWM.c **** * Return:
1064:Generated_Source\PSoC4/PWM.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/PWM.c **** *
1066:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/PWM.c **** {
 940              		.loc 1 1068 0
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 0
 943              		@ frame_needed = 0, uses_anonymous_args = 0
 944              		@ link register save eliminated.
1069:Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 945              		.loc 1 1069 0
 946 0000 024B     		ldr	r3, .L74
 947 0002 1868     		ldr	r0, [r3]
 948 0004 0004     		lsls	r0, r0, #16
 949 0006 000C     		lsrs	r0, r0, #16
1070:Generated_Source\PSoC4/PWM.c **** }
 950              		.loc 1 1070 0
 951              		@ sp needed
 952 0008 7047     		bx	lr
 953              	.L75:
 954 000a C046     		.align	2
 955              	.L74:
 956 000c 50010540 		.word	1074069840
 957              		.cfi_endproc
 958              	.LFE27:
 959              		.size	PWM_ReadCaptureBuf, .-PWM_ReadCaptureBuf
 960              		.section	.text.PWM_SetCaptureMode,"ax",%progbits
 961              		.align	2
 962              		.global	PWM_SetCaptureMode
 963              		.code	16
 964              		.thumb_func
 965              		.type	PWM_SetCaptureMode, %function
 966              	PWM_SetCaptureMode:
 967              	.LFB28:
1071:Generated_Source\PSoC4/PWM.c **** 
1072:Generated_Source\PSoC4/PWM.c **** 
1073:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCaptureMode
1075:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1076:Generated_Source\PSoC4/PWM.c **** *
1077:Generated_Source\PSoC4/PWM.c **** * Summary:
1078:Generated_Source\PSoC4/PWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/PWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/PWM.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/PWM.c **** *
1082:Generated_Source\PSoC4/PWM.c **** * Parameters:
1083:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/PWM.c **** *   Values:
1085:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 37


1086:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/PWM.c **** *
1090:Generated_Source\PSoC4/PWM.c **** * Return:
1091:Generated_Source\PSoC4/PWM.c **** *  None
1092:Generated_Source\PSoC4/PWM.c **** *
1093:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/PWM.c **** void PWM_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/PWM.c **** {
 968              		.loc 1 1095 0
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 0
 971              		@ frame_needed = 0, uses_anonymous_args = 0
 972              	.LVL58:
 973 0000 10B5     		push	{r4, lr}
 974              		.cfi_def_cfa_offset 8
 975              		.cfi_offset 4, -8
 976              		.cfi_offset 14, -4
 977 0002 0400     		movs	r4, r0
1096:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/PWM.c **** 
1098:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 978              		.loc 1 1098 0
 979 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 980              	.LVL59:
1099:Generated_Source\PSoC4/PWM.c **** 
1100:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
 981              		.loc 1 1100 0
 982 0008 054B     		ldr	r3, .L77
 983 000a 1A68     		ldr	r2, [r3]
 984 000c 0321     		movs	r1, #3
 985 000e 8A43     		bics	r2, r1
 986 0010 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 987              		.loc 1 1101 0
 988 0012 1A68     		ldr	r2, [r3]
 989 0014 1443     		orrs	r4, r2
 990              	.LVL60:
 991 0016 1C60     		str	r4, [r3]
1102:Generated_Source\PSoC4/PWM.c **** 
1103:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 992              		.loc 1 1103 0
 993 0018 FFF7FEFF 		bl	CyExitCriticalSection
 994              	.LVL61:
1104:Generated_Source\PSoC4/PWM.c **** }
 995              		.loc 1 1104 0
 996              		@ sp needed
 997 001c 10BD     		pop	{r4, pc}
 998              	.L78:
 999 001e C046     		.align	2
 1000              	.L77:
 1001 0020 64010540 		.word	1074069860
 1002              		.cfi_endproc
 1003              	.LFE28:
 1004              		.size	PWM_SetCaptureMode, .-PWM_SetCaptureMode
 1005              		.section	.text.PWM_SetReloadMode,"ax",%progbits
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 38


 1006              		.align	2
 1007              		.global	PWM_SetReloadMode
 1008              		.code	16
 1009              		.thumb_func
 1010              		.type	PWM_SetReloadMode, %function
 1011              	PWM_SetReloadMode:
 1012              	.LFB29:
1105:Generated_Source\PSoC4/PWM.c **** 
1106:Generated_Source\PSoC4/PWM.c **** 
1107:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetReloadMode
1109:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1110:Generated_Source\PSoC4/PWM.c **** *
1111:Generated_Source\PSoC4/PWM.c **** * Summary:
1112:Generated_Source\PSoC4/PWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/PWM.c **** *  input.
1114:Generated_Source\PSoC4/PWM.c **** *
1115:Generated_Source\PSoC4/PWM.c **** * Parameters:
1116:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1117:Generated_Source\PSoC4/PWM.c **** *   Values:
1118:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/PWM.c **** *
1123:Generated_Source\PSoC4/PWM.c **** * Return:
1124:Generated_Source\PSoC4/PWM.c **** *  None
1125:Generated_Source\PSoC4/PWM.c **** *
1126:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/PWM.c **** void PWM_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/PWM.c **** {
 1013              		.loc 1 1128 0
 1014              		.cfi_startproc
 1015              		@ args = 0, pretend = 0, frame = 0
 1016              		@ frame_needed = 0, uses_anonymous_args = 0
 1017              	.LVL62:
 1018 0000 10B5     		push	{r4, lr}
 1019              		.cfi_def_cfa_offset 8
 1020              		.cfi_offset 4, -8
 1021              		.cfi_offset 14, -4
 1022 0002 0400     		movs	r4, r0
1129:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/PWM.c **** 
1131:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1023              		.loc 1 1131 0
 1024 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1025              	.LVL63:
1132:Generated_Source\PSoC4/PWM.c **** 
1133:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
 1026              		.loc 1 1133 0
 1027 0008 054B     		ldr	r3, .L80
 1028 000a 1A68     		ldr	r2, [r3]
 1029 000c 3021     		movs	r1, #48
 1030 000e 8A43     		bics	r2, r1
 1031 0010 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 1032              		.loc 1 1134 0
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 39


 1033 0012 1A68     		ldr	r2, [r3]
 1034 0014 2401     		lsls	r4, r4, #4
 1035              	.LVL64:
 1036 0016 1443     		orrs	r4, r2
 1037 0018 1C60     		str	r4, [r3]
1135:Generated_Source\PSoC4/PWM.c **** 
1136:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1038              		.loc 1 1136 0
 1039 001a FFF7FEFF 		bl	CyExitCriticalSection
 1040              	.LVL65:
1137:Generated_Source\PSoC4/PWM.c **** }
 1041              		.loc 1 1137 0
 1042              		@ sp needed
 1043 001e 10BD     		pop	{r4, pc}
 1044              	.L81:
 1045              		.align	2
 1046              	.L80:
 1047 0020 64010540 		.word	1074069860
 1048              		.cfi_endproc
 1049              	.LFE29:
 1050              		.size	PWM_SetReloadMode, .-PWM_SetReloadMode
 1051              		.section	.text.PWM_SetStartMode,"ax",%progbits
 1052              		.align	2
 1053              		.global	PWM_SetStartMode
 1054              		.code	16
 1055              		.thumb_func
 1056              		.type	PWM_SetStartMode, %function
 1057              	PWM_SetStartMode:
 1058              	.LFB30:
1138:Generated_Source\PSoC4/PWM.c **** 
1139:Generated_Source\PSoC4/PWM.c **** 
1140:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStartMode
1142:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1143:Generated_Source\PSoC4/PWM.c **** *
1144:Generated_Source\PSoC4/PWM.c **** * Summary:
1145:Generated_Source\PSoC4/PWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/PWM.c **** *  phiB input.
1147:Generated_Source\PSoC4/PWM.c **** *
1148:Generated_Source\PSoC4/PWM.c **** * Parameters:
1149:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/PWM.c **** *   Values:
1151:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1155:Generated_Source\PSoC4/PWM.c **** *
1156:Generated_Source\PSoC4/PWM.c **** * Return:
1157:Generated_Source\PSoC4/PWM.c **** *  None
1158:Generated_Source\PSoC4/PWM.c **** *
1159:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/PWM.c **** void PWM_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/PWM.c **** {
 1059              		.loc 1 1161 0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 0
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 40


 1063              	.LVL66:
 1064 0000 10B5     		push	{r4, lr}
 1065              		.cfi_def_cfa_offset 8
 1066              		.cfi_offset 4, -8
 1067              		.cfi_offset 14, -4
 1068 0002 0400     		movs	r4, r0
1162:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/PWM.c **** 
1164:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1069              		.loc 1 1164 0
 1070 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1071              	.LVL67:
1165:Generated_Source\PSoC4/PWM.c **** 
1166:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
 1072              		.loc 1 1166 0
 1073 0008 054B     		ldr	r3, .L83
 1074 000a 1968     		ldr	r1, [r3]
 1075 000c 054A     		ldr	r2, .L83+4
 1076 000e 0A40     		ands	r2, r1
 1077 0010 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 1078              		.loc 1 1167 0
 1079 0012 1A68     		ldr	r2, [r3]
 1080 0014 2402     		lsls	r4, r4, #8
 1081              	.LVL68:
 1082 0016 1443     		orrs	r4, r2
 1083 0018 1C60     		str	r4, [r3]
1168:Generated_Source\PSoC4/PWM.c **** 
1169:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1084              		.loc 1 1169 0
 1085 001a FFF7FEFF 		bl	CyExitCriticalSection
 1086              	.LVL69:
1170:Generated_Source\PSoC4/PWM.c **** }
 1087              		.loc 1 1170 0
 1088              		@ sp needed
 1089 001e 10BD     		pop	{r4, pc}
 1090              	.L84:
 1091              		.align	2
 1092              	.L83:
 1093 0020 64010540 		.word	1074069860
 1094 0024 FFFCFFFF 		.word	-769
 1095              		.cfi_endproc
 1096              	.LFE30:
 1097              		.size	PWM_SetStartMode, .-PWM_SetStartMode
 1098              		.section	.text.PWM_SetStopMode,"ax",%progbits
 1099              		.align	2
 1100              		.global	PWM_SetStopMode
 1101              		.code	16
 1102              		.thumb_func
 1103              		.type	PWM_SetStopMode, %function
 1104              	PWM_SetStopMode:
 1105              	.LFB31:
1171:Generated_Source\PSoC4/PWM.c **** 
1172:Generated_Source\PSoC4/PWM.c **** 
1173:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStopMode
1175:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 41


1176:Generated_Source\PSoC4/PWM.c **** *
1177:Generated_Source\PSoC4/PWM.c **** * Summary:
1178:Generated_Source\PSoC4/PWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/PWM.c **** *
1180:Generated_Source\PSoC4/PWM.c **** * Parameters:
1181:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/PWM.c **** *   Values:
1183:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/PWM.c **** *
1188:Generated_Source\PSoC4/PWM.c **** * Return:
1189:Generated_Source\PSoC4/PWM.c **** *  None
1190:Generated_Source\PSoC4/PWM.c **** *
1191:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/PWM.c **** void PWM_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/PWM.c **** {
 1106              		.loc 1 1193 0
 1107              		.cfi_startproc
 1108              		@ args = 0, pretend = 0, frame = 0
 1109              		@ frame_needed = 0, uses_anonymous_args = 0
 1110              	.LVL70:
 1111 0000 10B5     		push	{r4, lr}
 1112              		.cfi_def_cfa_offset 8
 1113              		.cfi_offset 4, -8
 1114              		.cfi_offset 14, -4
 1115 0002 0400     		movs	r4, r0
1194:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/PWM.c **** 
1196:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1116              		.loc 1 1196 0
 1117 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1118              	.LVL71:
1197:Generated_Source\PSoC4/PWM.c **** 
1198:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
 1119              		.loc 1 1198 0
 1120 0008 054B     		ldr	r3, .L86
 1121 000a 1A68     		ldr	r2, [r3]
 1122 000c C021     		movs	r1, #192
 1123 000e 8A43     		bics	r2, r1
 1124 0010 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1125              		.loc 1 1199 0
 1126 0012 1A68     		ldr	r2, [r3]
 1127 0014 A401     		lsls	r4, r4, #6
 1128              	.LVL72:
 1129 0016 1443     		orrs	r4, r2
 1130 0018 1C60     		str	r4, [r3]
1200:Generated_Source\PSoC4/PWM.c **** 
1201:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1131              		.loc 1 1201 0
 1132 001a FFF7FEFF 		bl	CyExitCriticalSection
 1133              	.LVL73:
1202:Generated_Source\PSoC4/PWM.c **** }
 1134              		.loc 1 1202 0
 1135              		@ sp needed
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 42


 1136 001e 10BD     		pop	{r4, pc}
 1137              	.L87:
 1138              		.align	2
 1139              	.L86:
 1140 0020 64010540 		.word	1074069860
 1141              		.cfi_endproc
 1142              	.LFE31:
 1143              		.size	PWM_SetStopMode, .-PWM_SetStopMode
 1144              		.section	.text.PWM_SetCountMode,"ax",%progbits
 1145              		.align	2
 1146              		.global	PWM_SetCountMode
 1147              		.code	16
 1148              		.thumb_func
 1149              		.type	PWM_SetCountMode, %function
 1150              	PWM_SetCountMode:
 1151              	.LFB32:
1203:Generated_Source\PSoC4/PWM.c **** 
1204:Generated_Source\PSoC4/PWM.c **** 
1205:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCountMode
1207:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1208:Generated_Source\PSoC4/PWM.c **** *
1209:Generated_Source\PSoC4/PWM.c **** * Summary:
1210:Generated_Source\PSoC4/PWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/PWM.c **** *  input.
1212:Generated_Source\PSoC4/PWM.c **** *
1213:Generated_Source\PSoC4/PWM.c **** * Parameters:
1214:Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/PWM.c **** *   Values:
1216:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/PWM.c **** *
1221:Generated_Source\PSoC4/PWM.c **** * Return:
1222:Generated_Source\PSoC4/PWM.c **** *  None
1223:Generated_Source\PSoC4/PWM.c **** *
1224:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/PWM.c **** void PWM_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/PWM.c **** {
 1152              		.loc 1 1226 0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 0
 1155              		@ frame_needed = 0, uses_anonymous_args = 0
 1156              	.LVL74:
 1157 0000 10B5     		push	{r4, lr}
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 4, -8
 1160              		.cfi_offset 14, -4
 1161 0002 0400     		movs	r4, r0
1227:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/PWM.c **** 
1229:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1162              		.loc 1 1229 0
 1163 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1164              	.LVL75:
1230:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 43


1231:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
 1165              		.loc 1 1231 0
 1166 0008 054B     		ldr	r3, .L89
 1167 000a 1A68     		ldr	r2, [r3]
 1168 000c 0C21     		movs	r1, #12
 1169 000e 8A43     		bics	r2, r1
 1170 0010 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1171              		.loc 1 1232 0
 1172 0012 1A68     		ldr	r2, [r3]
 1173 0014 A400     		lsls	r4, r4, #2
 1174              	.LVL76:
 1175 0016 1443     		orrs	r4, r2
 1176 0018 1C60     		str	r4, [r3]
1233:Generated_Source\PSoC4/PWM.c **** 
1234:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1177              		.loc 1 1234 0
 1178 001a FFF7FEFF 		bl	CyExitCriticalSection
 1179              	.LVL77:
1235:Generated_Source\PSoC4/PWM.c **** }
 1180              		.loc 1 1235 0
 1181              		@ sp needed
 1182 001e 10BD     		pop	{r4, pc}
 1183              	.L90:
 1184              		.align	2
 1185              	.L89:
 1186 0020 64010540 		.word	1074069860
 1187              		.cfi_endproc
 1188              	.LFE32:
 1189              		.size	PWM_SetCountMode, .-PWM_SetCountMode
 1190              		.section	.text.PWM_TriggerCommand,"ax",%progbits
 1191              		.align	2
 1192              		.global	PWM_TriggerCommand
 1193              		.code	16
 1194              		.thumb_func
 1195              		.type	PWM_TriggerCommand, %function
 1196              	PWM_TriggerCommand:
 1197              	.LFB33:
1236:Generated_Source\PSoC4/PWM.c **** 
1237:Generated_Source\PSoC4/PWM.c **** 
1238:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_TriggerCommand
1240:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1241:Generated_Source\PSoC4/PWM.c **** *
1242:Generated_Source\PSoC4/PWM.c **** * Summary:
1243:Generated_Source\PSoC4/PWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:Generated_Source\PSoC4/PWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/PWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/PWM.c **** *
1247:Generated_Source\PSoC4/PWM.c **** * Parameters:
1248:Generated_Source\PSoC4/PWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/PWM.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/PWM.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/PWM.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/PWM.c **** *        define.
1253:Generated_Source\PSoC4/PWM.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/PWM.c **** *           Timer/Counter with Capture and PWM modes.
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 44


1255:Generated_Source\PSoC4/PWM.c **** *   Values:
1256:Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/PWM.c **** *
1261:Generated_Source\PSoC4/PWM.c **** * Return:
1262:Generated_Source\PSoC4/PWM.c **** *  None
1263:Generated_Source\PSoC4/PWM.c **** *
1264:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/PWM.c **** void PWM_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/PWM.c **** {
 1198              		.loc 1 1266 0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 0
 1201              		@ frame_needed = 0, uses_anonymous_args = 0
 1202              	.LVL78:
 1203 0000 70B5     		push	{r4, r5, r6, lr}
 1204              		.cfi_def_cfa_offset 16
 1205              		.cfi_offset 4, -16
 1206              		.cfi_offset 5, -12
 1207              		.cfi_offset 6, -8
 1208              		.cfi_offset 14, -4
 1209 0002 0400     		movs	r4, r0
 1210 0004 0D00     		movs	r5, r1
1267:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/PWM.c **** 
1269:Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1211              		.loc 1 1269 0
 1212 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1213              	.LVL79:
1270:Generated_Source\PSoC4/PWM.c **** 
1271:Generated_Source\PSoC4/PWM.c ****     PWM_COMMAND_REG = ((uint32)(mask << command));
 1214              		.loc 1 1271 0
 1215 000a AC40     		lsls	r4, r4, r5
 1216              	.LVL80:
 1217 000c 024B     		ldr	r3, .L92
 1218 000e 1C60     		str	r4, [r3]
1272:Generated_Source\PSoC4/PWM.c **** 
1273:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1219              		.loc 1 1273 0
 1220 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1221              	.LVL81:
1274:Generated_Source\PSoC4/PWM.c **** }
 1222              		.loc 1 1274 0
 1223              		@ sp needed
 1224              	.LVL82:
 1225 0014 70BD     		pop	{r4, r5, r6, pc}
 1226              	.L93:
 1227 0016 C046     		.align	2
 1228              	.L92:
 1229 0018 08000540 		.word	1074069512
 1230              		.cfi_endproc
 1231              	.LFE33:
 1232              		.size	PWM_TriggerCommand, .-PWM_TriggerCommand
 1233              		.section	.text.PWM_Enable,"ax",%progbits
 1234              		.align	2
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 45


 1235              		.global	PWM_Enable
 1236              		.code	16
 1237              		.thumb_func
 1238              		.type	PWM_Enable, %function
 1239              	PWM_Enable:
 1240              	.LFB1:
 178:Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1241              		.loc 1 178 0
 1242              		.cfi_startproc
 1243              		@ args = 0, pretend = 0, frame = 0
 1244              		@ frame_needed = 0, uses_anonymous_args = 0
 1245 0000 10B5     		push	{r4, lr}
 1246              		.cfi_def_cfa_offset 8
 1247              		.cfi_offset 4, -8
 1248              		.cfi_offset 14, -4
 181:Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 1249              		.loc 1 181 0
 1250 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1251              	.LVL83:
 182:Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1252              		.loc 1 182 0
 1253 0006 064A     		ldr	r2, .L95
 1254 0008 1168     		ldr	r1, [r2]
 1255 000a 0223     		movs	r3, #2
 1256 000c 0B43     		orrs	r3, r1
 1257 000e 1360     		str	r3, [r2]
 183:Generated_Source\PSoC4/PWM.c **** 
 1258              		.loc 1 183 0
 1259 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1260              	.LVL84:
 188:Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
 1261              		.loc 1 188 0
 1262 0014 1821     		movs	r1, #24
 1263 0016 0220     		movs	r0, #2
 1264 0018 FFF7FEFF 		bl	PWM_TriggerCommand
 1265              	.LVL85:
 203:Generated_Source\PSoC4/PWM.c **** 
 1266              		.loc 1 203 0
 1267              		@ sp needed
 1268 001c 10BD     		pop	{r4, pc}
 1269              	.L96:
 1270 001e C046     		.align	2
 1271              	.L95:
 1272 0020 00000540 		.word	1074069504
 1273              		.cfi_endproc
 1274              	.LFE1:
 1275              		.size	PWM_Enable, .-PWM_Enable
 1276              		.section	.text.PWM_ReadStatus,"ax",%progbits
 1277              		.align	2
 1278              		.global	PWM_ReadStatus
 1279              		.code	16
 1280              		.thumb_func
 1281              		.type	PWM_ReadStatus, %function
 1282              	PWM_ReadStatus:
 1283              	.LFB34:
1275:Generated_Source\PSoC4/PWM.c **** 
1276:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 46


1277:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadStatus
1279:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1280:Generated_Source\PSoC4/PWM.c **** *
1281:Generated_Source\PSoC4/PWM.c **** * Summary:
1282:Generated_Source\PSoC4/PWM.c **** *  Reads the status of the PWM.
1283:Generated_Source\PSoC4/PWM.c **** *
1284:Generated_Source\PSoC4/PWM.c **** * Parameters:
1285:Generated_Source\PSoC4/PWM.c **** *  None
1286:Generated_Source\PSoC4/PWM.c **** *
1287:Generated_Source\PSoC4/PWM.c **** * Return:
1288:Generated_Source\PSoC4/PWM.c **** *  Status
1289:Generated_Source\PSoC4/PWM.c **** *   Values:
1290:Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/PWM.c **** *
1293:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadStatus(void)
1295:Generated_Source\PSoC4/PWM.c **** {
 1284              		.loc 1 1295 0
 1285              		.cfi_startproc
 1286              		@ args = 0, pretend = 0, frame = 0
 1287              		@ frame_needed = 0, uses_anonymous_args = 0
 1288              		@ link register save eliminated.
1296:Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1289              		.loc 1 1296 0
 1290 0000 034B     		ldr	r3, .L98
 1291 0002 1868     		ldr	r0, [r3]
 1292 0004 820F     		lsrs	r2, r0, #30
1297:Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1293              		.loc 1 1297 0
 1294 0006 1B68     		ldr	r3, [r3]
 1295 0008 0120     		movs	r0, #1
 1296 000a 1840     		ands	r0, r3
1296:Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1297              		.loc 1 1296 0
 1298 000c 1043     		orrs	r0, r2
1298:Generated_Source\PSoC4/PWM.c **** }
 1299              		.loc 1 1298 0
 1300              		@ sp needed
 1301 000e 7047     		bx	lr
 1302              	.L99:
 1303              		.align	2
 1304              	.L98:
 1305 0010 44010540 		.word	1074069828
 1306              		.cfi_endproc
 1307              	.LFE34:
 1308              		.size	PWM_ReadStatus, .-PWM_ReadStatus
 1309              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 1310              		.align	2
 1311              		.global	PWM_SetInterruptMode
 1312              		.code	16
 1313              		.thumb_func
 1314              		.type	PWM_SetInterruptMode, %function
 1315              	PWM_SetInterruptMode:
 1316              	.LFB35:
1299:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 47


1300:Generated_Source\PSoC4/PWM.c **** 
1301:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterruptMode
1303:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1304:Generated_Source\PSoC4/PWM.c **** *
1305:Generated_Source\PSoC4/PWM.c **** * Summary:
1306:Generated_Source\PSoC4/PWM.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/PWM.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/PWM.c **** *
1309:Generated_Source\PSoC4/PWM.c **** * Parameters:
1310:Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/PWM.c **** *   Values:
1312:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/PWM.c **** *
1315:Generated_Source\PSoC4/PWM.c **** * Return:
1316:Generated_Source\PSoC4/PWM.c **** *  None
1317:Generated_Source\PSoC4/PWM.c **** *
1318:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/PWM.c **** void PWM_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/PWM.c **** {
 1317              		.loc 1 1320 0
 1318              		.cfi_startproc
 1319              		@ args = 0, pretend = 0, frame = 0
 1320              		@ frame_needed = 0, uses_anonymous_args = 0
 1321              		@ link register save eliminated.
 1322              	.LVL86:
1321:Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
 1323              		.loc 1 1321 0
 1324 0000 014B     		ldr	r3, .L101
 1325 0002 1860     		str	r0, [r3]
1322:Generated_Source\PSoC4/PWM.c **** }
 1326              		.loc 1 1322 0
 1327              		@ sp needed
 1328 0004 7047     		bx	lr
 1329              	.L102:
 1330 0006 C046     		.align	2
 1331              	.L101:
 1332 0008 78010540 		.word	1074069880
 1333              		.cfi_endproc
 1334              	.LFE35:
 1335              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 1336              		.section	.text.PWM_Init,"ax",%progbits
 1337              		.align	2
 1338              		.global	PWM_Init
 1339              		.code	16
 1340              		.thumb_func
 1341              		.type	PWM_Init, %function
 1342              	PWM_Init:
 1343              	.LFB0:
  39:Generated_Source\PSoC4/PWM.c **** 
 1344              		.loc 1 39 0
 1345              		.cfi_startproc
 1346              		@ args = 0, pretend = 0, frame = 0
 1347              		@ frame_needed = 0, uses_anonymous_args = 0
 1348 0000 10B5     		push	{r4, lr}
 1349              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 48


 1350              		.cfi_offset 4, -8
 1351              		.cfi_offset 14, -4
  89:Generated_Source\PSoC4/PWM.c **** 
 1352              		.loc 1 89 0
 1353 0002 0F4C     		ldr	r4, .L104
 1354 0004 8023     		movs	r3, #128
 1355 0006 DB04     		lsls	r3, r3, #19
 1356 0008 2360     		str	r3, [r4]
  95:Generated_Source\PSoC4/PWM.c ****             
 1357              		.loc 1 95 0
 1358 000a 2368     		ldr	r3, [r4]
 1359 000c 2360     		str	r3, [r4]
 103:Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
 1360              		.loc 1 103 0
 1361 000e 0020     		movs	r0, #0
 1362 0010 FFF7FEFF 		bl	PWM_WriteCounter
 1363              	.LVL87:
 112:Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
 1364              		.loc 1 112 0
 1365 0014 2368     		ldr	r3, [r4]
 1366 0016 E022     		movs	r2, #224
 1367 0018 D200     		lsls	r2, r2, #3
 1368 001a 1343     		orrs	r3, r2
 1369 001c 2360     		str	r3, [r4]
 116:Generated_Source\PSoC4/PWM.c ****     
 1370              		.loc 1 116 0
 1371 001e C322     		movs	r2, #195
 1372 0020 9200     		lsls	r2, r2, #2
 1373 0022 084B     		ldr	r3, .L104+4
 1374 0024 1A60     		str	r2, [r3]
 119:Generated_Source\PSoC4/PWM.c **** 
 1375              		.loc 1 119 0
 1376 0026 0020     		movs	r0, #0
 1377 0028 FFF7FEFF 		bl	PWM_SetInterruptMode
 1378              	.LVL88:
 129:Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
 1379              		.loc 1 129 0
 1380 002c 3122     		movs	r2, #49
 1381 002e 064B     		ldr	r3, .L104+8
 1382 0030 1A60     		str	r2, [r3]
 146:Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
 1383              		.loc 1 146 0
 1384 0032 0648     		ldr	r0, .L104+12
 1385 0034 FFF7FEFF 		bl	PWM_WritePeriod
 1386              	.LVL89:
 147:Generated_Source\PSoC4/PWM.c **** 
 1387              		.loc 1 147 0
 1388 0038 0548     		ldr	r0, .L104+16
 1389 003a FFF7FEFF 		bl	PWM_WriteCompare
 1390              	.LVL90:
 160:Generated_Source\PSoC4/PWM.c **** 
 1391              		.loc 1 160 0
 1392              		@ sp needed
 1393 003e 10BD     		pop	{r4, pc}
 1394              	.L105:
 1395              		.align	2
 1396              	.L104:
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 49


 1397 0040 40010540 		.word	1074069824
 1398 0044 64010540 		.word	1074069860
 1399 0048 68010540 		.word	1074069864
 1400 004c E2160000 		.word	5858
 1401 0050 710B0000 		.word	2929
 1402              		.cfi_endproc
 1403              	.LFE0:
 1404              		.size	PWM_Init, .-PWM_Init
 1405              		.section	.text.PWM_Start,"ax",%progbits
 1406              		.align	2
 1407              		.global	PWM_Start
 1408              		.code	16
 1409              		.thumb_func
 1410              		.type	PWM_Start, %function
 1411              	PWM_Start:
 1412              	.LFB2:
 231:Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 1413              		.loc 1 231 0
 1414              		.cfi_startproc
 1415              		@ args = 0, pretend = 0, frame = 0
 1416              		@ frame_needed = 0, uses_anonymous_args = 0
 1417 0000 10B5     		push	{r4, lr}
 1418              		.cfi_def_cfa_offset 8
 1419              		.cfi_offset 4, -8
 1420              		.cfi_offset 14, -4
 232:Generated_Source\PSoC4/PWM.c ****     {
 1421              		.loc 1 232 0
 1422 0002 064B     		ldr	r3, .L108
 1423 0004 1B78     		ldrb	r3, [r3]
 1424 0006 002B     		cmp	r3, #0
 1425 0008 04D1     		bne	.L107
 234:Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 1426              		.loc 1 234 0
 1427 000a FFF7FEFF 		bl	PWM_Init
 1428              	.LVL91:
 235:Generated_Source\PSoC4/PWM.c ****     }
 1429              		.loc 1 235 0
 1430 000e 0122     		movs	r2, #1
 1431 0010 024B     		ldr	r3, .L108
 1432 0012 1A70     		strb	r2, [r3]
 1433              	.L107:
 238:Generated_Source\PSoC4/PWM.c **** }
 1434              		.loc 1 238 0
 1435 0014 FFF7FEFF 		bl	PWM_Enable
 1436              	.LVL92:
 239:Generated_Source\PSoC4/PWM.c **** 
 1437              		.loc 1 239 0
 1438              		@ sp needed
 1439 0018 10BD     		pop	{r4, pc}
 1440              	.L109:
 1441 001a C046     		.align	2
 1442              	.L108:
 1443 001c 00000000 		.word	.LANCHOR0
 1444              		.cfi_endproc
 1445              	.LFE2:
 1446              		.size	PWM_Start, .-PWM_Start
 1447              		.section	.text.PWM_GetInterruptSourceMasked,"ax",%progbits
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 50


 1448              		.align	2
 1449              		.global	PWM_GetInterruptSourceMasked
 1450              		.code	16
 1451              		.thumb_func
 1452              		.type	PWM_GetInterruptSourceMasked, %function
 1453              	PWM_GetInterruptSourceMasked:
 1454              	.LFB36:
1323:Generated_Source\PSoC4/PWM.c **** 
1324:Generated_Source\PSoC4/PWM.c **** 
1325:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1328:Generated_Source\PSoC4/PWM.c **** *
1329:Generated_Source\PSoC4/PWM.c **** * Summary:
1330:Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/PWM.c **** *
1332:Generated_Source\PSoC4/PWM.c **** * Parameters:
1333:Generated_Source\PSoC4/PWM.c **** *   None
1334:Generated_Source\PSoC4/PWM.c **** *
1335:Generated_Source\PSoC4/PWM.c **** * Return:
1336:Generated_Source\PSoC4/PWM.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/PWM.c **** *   Values:
1338:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/PWM.c **** *
1341:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/PWM.c **** {
 1455              		.loc 1 1343 0
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 0
 1458              		@ frame_needed = 0, uses_anonymous_args = 0
 1459              		@ link register save eliminated.
1344:Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1460              		.loc 1 1344 0
 1461 0000 014B     		ldr	r3, .L111
 1462 0002 1868     		ldr	r0, [r3]
1345:Generated_Source\PSoC4/PWM.c **** }
 1463              		.loc 1 1345 0
 1464              		@ sp needed
 1465 0004 7047     		bx	lr
 1466              	.L112:
 1467 0006 C046     		.align	2
 1468              	.L111:
 1469 0008 7C010540 		.word	1074069884
 1470              		.cfi_endproc
 1471              	.LFE36:
 1472              		.size	PWM_GetInterruptSourceMasked, .-PWM_GetInterruptSourceMasked
 1473              		.section	.text.PWM_GetInterruptSource,"ax",%progbits
 1474              		.align	2
 1475              		.global	PWM_GetInterruptSource
 1476              		.code	16
 1477              		.thumb_func
 1478              		.type	PWM_GetInterruptSource, %function
 1479              	PWM_GetInterruptSource:
 1480              	.LFB37:
1346:Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 51


1347:Generated_Source\PSoC4/PWM.c **** 
1348:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSource
1350:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1351:Generated_Source\PSoC4/PWM.c **** *
1352:Generated_Source\PSoC4/PWM.c **** * Summary:
1353:Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/PWM.c **** *
1355:Generated_Source\PSoC4/PWM.c **** * Parameters:
1356:Generated_Source\PSoC4/PWM.c **** *  None
1357:Generated_Source\PSoC4/PWM.c **** *
1358:Generated_Source\PSoC4/PWM.c **** * Return:
1359:Generated_Source\PSoC4/PWM.c **** *  Interrupt request value
1360:Generated_Source\PSoC4/PWM.c **** *   Values:
1361:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/PWM.c **** *
1364:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSource(void)
1366:Generated_Source\PSoC4/PWM.c **** {
 1481              		.loc 1 1366 0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 0
 1484              		@ frame_needed = 0, uses_anonymous_args = 0
 1485              		@ link register save eliminated.
1367:Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1486              		.loc 1 1367 0
 1487 0000 014B     		ldr	r3, .L114
 1488 0002 1868     		ldr	r0, [r3]
1368:Generated_Source\PSoC4/PWM.c **** }
 1489              		.loc 1 1368 0
 1490              		@ sp needed
 1491 0004 7047     		bx	lr
 1492              	.L115:
 1493 0006 C046     		.align	2
 1494              	.L114:
 1495 0008 70010540 		.word	1074069872
 1496              		.cfi_endproc
 1497              	.LFE37:
 1498              		.size	PWM_GetInterruptSource, .-PWM_GetInterruptSource
 1499              		.section	.text.PWM_ClearInterrupt,"ax",%progbits
 1500              		.align	2
 1501              		.global	PWM_ClearInterrupt
 1502              		.code	16
 1503              		.thumb_func
 1504              		.type	PWM_ClearInterrupt, %function
 1505              	PWM_ClearInterrupt:
 1506              	.LFB38:
1369:Generated_Source\PSoC4/PWM.c **** 
1370:Generated_Source\PSoC4/PWM.c **** 
1371:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ClearInterrupt
1373:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1374:Generated_Source\PSoC4/PWM.c **** *
1375:Generated_Source\PSoC4/PWM.c **** * Summary:
1376:Generated_Source\PSoC4/PWM.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 52


1378:Generated_Source\PSoC4/PWM.c **** * Parameters:
1379:Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/PWM.c **** *   Values:
1381:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/PWM.c **** *
1384:Generated_Source\PSoC4/PWM.c **** * Return:
1385:Generated_Source\PSoC4/PWM.c **** *  None
1386:Generated_Source\PSoC4/PWM.c **** *
1387:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/PWM.c **** void PWM_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/PWM.c **** {
 1507              		.loc 1 1389 0
 1508              		.cfi_startproc
 1509              		@ args = 0, pretend = 0, frame = 0
 1510              		@ frame_needed = 0, uses_anonymous_args = 0
 1511              		@ link register save eliminated.
 1512              	.LVL93:
1390:Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1513              		.loc 1 1390 0
 1514 0000 014B     		ldr	r3, .L117
 1515 0002 1860     		str	r0, [r3]
1391:Generated_Source\PSoC4/PWM.c **** }
 1516              		.loc 1 1391 0
 1517              		@ sp needed
 1518 0004 7047     		bx	lr
 1519              	.L118:
 1520 0006 C046     		.align	2
 1521              	.L117:
 1522 0008 70010540 		.word	1074069872
 1523              		.cfi_endproc
 1524              	.LFE38:
 1525              		.size	PWM_ClearInterrupt, .-PWM_ClearInterrupt
 1526              		.section	.text.PWM_SetInterrupt,"ax",%progbits
 1527              		.align	2
 1528              		.global	PWM_SetInterrupt
 1529              		.code	16
 1530              		.thumb_func
 1531              		.type	PWM_SetInterrupt, %function
 1532              	PWM_SetInterrupt:
 1533              	.LFB39:
1392:Generated_Source\PSoC4/PWM.c **** 
1393:Generated_Source\PSoC4/PWM.c **** 
1394:Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterrupt
1396:Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1397:Generated_Source\PSoC4/PWM.c **** *
1398:Generated_Source\PSoC4/PWM.c **** * Summary:
1399:Generated_Source\PSoC4/PWM.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/PWM.c **** *
1401:Generated_Source\PSoC4/PWM.c **** * Parameters:
1402:Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/PWM.c **** *   Values:
1404:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/PWM.c **** *
1407:Generated_Source\PSoC4/PWM.c **** * Return:
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 53


1408:Generated_Source\PSoC4/PWM.c **** *  None
1409:Generated_Source\PSoC4/PWM.c **** *
1410:Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/PWM.c **** void PWM_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/PWM.c **** {
 1534              		.loc 1 1412 0
 1535              		.cfi_startproc
 1536              		@ args = 0, pretend = 0, frame = 0
 1537              		@ frame_needed = 0, uses_anonymous_args = 0
 1538              		@ link register save eliminated.
 1539              	.LVL94:
1413:Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1540              		.loc 1 1413 0
 1541 0000 014B     		ldr	r3, .L120
 1542 0002 1860     		str	r0, [r3]
1414:Generated_Source\PSoC4/PWM.c **** }
 1543              		.loc 1 1414 0
 1544              		@ sp needed
 1545 0004 7047     		bx	lr
 1546              	.L121:
 1547 0006 C046     		.align	2
 1548              	.L120:
 1549 0008 74010540 		.word	1074069876
 1550              		.cfi_endproc
 1551              	.LFE39:
 1552              		.size	PWM_SetInterrupt, .-PWM_SetInterrupt
 1553              		.global	PWM_initVar
 1554              		.bss
 1555              		.set	.LANCHOR0,. + 0
 1556              		.type	PWM_initVar, %object
 1557              		.size	PWM_initVar, 1
 1558              	PWM_initVar:
 1559 0000 00       		.space	1
 1560              		.text
 1561              	.Letext0:
 1562              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1563              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1564              		.section	.debug_info,"",%progbits
 1565              	.Ldebug_info0:
 1566 0000 07090000 		.4byte	0x907
 1567 0004 0400     		.2byte	0x4
 1568 0006 00000000 		.4byte	.Ldebug_abbrev0
 1569 000a 04       		.byte	0x4
 1570 000b 01       		.uleb128 0x1
 1571 000c 3A000000 		.4byte	.LASF79
 1572 0010 0C       		.byte	0xc
 1573 0011 11010000 		.4byte	.LASF80
 1574 0015 2B020000 		.4byte	.LASF81
 1575 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1576 001d 00000000 		.4byte	0
 1577 0021 00000000 		.4byte	.Ldebug_line0
 1578 0025 02       		.uleb128 0x2
 1579 0026 01       		.byte	0x1
 1580 0027 06       		.byte	0x6
 1581 0028 4C010000 		.4byte	.LASF0
 1582 002c 02       		.uleb128 0x2
 1583 002d 01       		.byte	0x1
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 54


 1584 002e 08       		.byte	0x8
 1585 002f E0030000 		.4byte	.LASF1
 1586 0033 02       		.uleb128 0x2
 1587 0034 02       		.byte	0x2
 1588 0035 05       		.byte	0x5
 1589 0036 17040000 		.4byte	.LASF2
 1590 003a 02       		.uleb128 0x2
 1591 003b 02       		.byte	0x2
 1592 003c 07       		.byte	0x7
 1593 003d DF020000 		.4byte	.LASF3
 1594 0041 02       		.uleb128 0x2
 1595 0042 04       		.byte	0x4
 1596 0043 05       		.byte	0x5
 1597 0044 94010000 		.4byte	.LASF4
 1598 0048 02       		.uleb128 0x2
 1599 0049 04       		.byte	0x4
 1600 004a 07       		.byte	0x7
 1601 004b AD020000 		.4byte	.LASF5
 1602 004f 02       		.uleb128 0x2
 1603 0050 08       		.byte	0x8
 1604 0051 05       		.byte	0x5
 1605 0052 3E010000 		.4byte	.LASF6
 1606 0056 02       		.uleb128 0x2
 1607 0057 08       		.byte	0x8
 1608 0058 07       		.byte	0x7
 1609 0059 CF000000 		.4byte	.LASF7
 1610 005d 03       		.uleb128 0x3
 1611 005e 04       		.byte	0x4
 1612 005f 05       		.byte	0x5
 1613 0060 696E7400 		.ascii	"int\000"
 1614 0064 02       		.uleb128 0x2
 1615 0065 04       		.byte	0x4
 1616 0066 07       		.byte	0x7
 1617 0067 85020000 		.4byte	.LASF8
 1618 006b 04       		.uleb128 0x4
 1619 006c 9D010000 		.4byte	.LASF9
 1620 0070 02       		.byte	0x2
 1621 0071 9801     		.2byte	0x198
 1622 0073 2C000000 		.4byte	0x2c
 1623 0077 04       		.uleb128 0x4
 1624 0078 EA010000 		.4byte	.LASF10
 1625 007c 02       		.byte	0x2
 1626 007d 9A01     		.2byte	0x19a
 1627 007f 48000000 		.4byte	0x48
 1628 0083 02       		.uleb128 0x2
 1629 0084 04       		.byte	0x4
 1630 0085 04       		.byte	0x4
 1631 0086 AE030000 		.4byte	.LASF11
 1632 008a 02       		.uleb128 0x2
 1633 008b 08       		.byte	0x8
 1634 008c 04       		.byte	0x4
 1635 008d A3010000 		.4byte	.LASF12
 1636 0091 02       		.uleb128 0x2
 1637 0092 01       		.byte	0x1
 1638 0093 08       		.byte	0x8
 1639 0094 6D040000 		.4byte	.LASF13
 1640 0098 04       		.uleb128 0x4
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 55


 1641 0099 45030000 		.4byte	.LASF14
 1642 009d 02       		.byte	0x2
 1643 009e 4402     		.2byte	0x244
 1644 00a0 A4000000 		.4byte	0xa4
 1645 00a4 05       		.uleb128 0x5
 1646 00a5 77000000 		.4byte	0x77
 1647 00a9 02       		.uleb128 0x2
 1648 00aa 08       		.byte	0x8
 1649 00ab 04       		.byte	0x4
 1650 00ac 6F030000 		.4byte	.LASF15
 1651 00b0 02       		.uleb128 0x2
 1652 00b1 04       		.byte	0x4
 1653 00b2 07       		.byte	0x7
 1654 00b3 66030000 		.4byte	.LASF16
 1655 00b7 06       		.uleb128 0x6
 1656 00b8 D0010000 		.4byte	.LASF17
 1657 00bc 01       		.byte	0x1
 1658 00bd 0001     		.2byte	0x100
 1659 00bf 00000000 		.4byte	.LFB3
 1660 00c3 1C000000 		.4byte	.LFE3-.LFB3
 1661 00c7 01       		.uleb128 0x1
 1662 00c8 9C       		.byte	0x9c
 1663 00c9 F0000000 		.4byte	0xf0
 1664 00cd 07       		.uleb128 0x7
 1665 00ce CE040000 		.4byte	.LASF19
 1666 00d2 01       		.byte	0x1
 1667 00d3 0201     		.2byte	0x102
 1668 00d5 6B000000 		.4byte	0x6b
 1669 00d9 00000000 		.4byte	.LLST0
 1670 00dd 08       		.uleb128 0x8
 1671 00de 06000000 		.4byte	.LVL0
 1672 00e2 F4080000 		.4byte	0x8f4
 1673 00e6 08       		.uleb128 0x8
 1674 00e7 14000000 		.4byte	.LVL1
 1675 00eb FF080000 		.4byte	0x8ff
 1676 00ef 00       		.byte	0
 1677 00f0 06       		.uleb128 0x6
 1678 00f1 F0040000 		.4byte	.LASF18
 1679 00f5 01       		.byte	0x1
 1680 00f6 2501     		.2byte	0x125
 1681 00f8 00000000 		.4byte	.LFB4
 1682 00fc 28000000 		.4byte	.LFE4-.LFB4
 1683 0100 01       		.uleb128 0x1
 1684 0101 9C       		.byte	0x9c
 1685 0102 39010000 		.4byte	0x139
 1686 0106 09       		.uleb128 0x9
 1687 0107 72040000 		.4byte	.LASF21
 1688 010b 01       		.byte	0x1
 1689 010c 2501     		.2byte	0x125
 1690 010e 77000000 		.4byte	0x77
 1691 0112 13000000 		.4byte	.LLST1
 1692 0116 07       		.uleb128 0x7
 1693 0117 CE040000 		.4byte	.LASF19
 1694 011b 01       		.byte	0x1
 1695 011c 2701     		.2byte	0x127
 1696 011e 6B000000 		.4byte	0x6b
 1697 0122 3F000000 		.4byte	.LLST2
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 56


 1698 0126 08       		.uleb128 0x8
 1699 0127 08000000 		.4byte	.LVL3
 1700 012b F4080000 		.4byte	0x8f4
 1701 012f 08       		.uleb128 0x8
 1702 0130 1C000000 		.4byte	.LVL5
 1703 0134 FF080000 		.4byte	0x8ff
 1704 0138 00       		.byte	0
 1705 0139 06       		.uleb128 0x6
 1706 013a 5F040000 		.4byte	.LASF20
 1707 013e 01       		.byte	0x1
 1708 013f 4601     		.2byte	0x146
 1709 0141 00000000 		.4byte	.LFB5
 1710 0145 28000000 		.4byte	.LFE5-.LFB5
 1711 0149 01       		.uleb128 0x1
 1712 014a 9C       		.byte	0x9c
 1713 014b 82010000 		.4byte	0x182
 1714 014f 09       		.uleb128 0x9
 1715 0150 F9000000 		.4byte	.LASF22
 1716 0154 01       		.byte	0x1
 1717 0155 4601     		.2byte	0x146
 1718 0157 77000000 		.4byte	0x77
 1719 015b 52000000 		.4byte	.LLST3
 1720 015f 07       		.uleb128 0x7
 1721 0160 CE040000 		.4byte	.LASF19
 1722 0164 01       		.byte	0x1
 1723 0165 4801     		.2byte	0x148
 1724 0167 6B000000 		.4byte	0x6b
 1725 016b 7E000000 		.4byte	.LLST4
 1726 016f 08       		.uleb128 0x8
 1727 0170 08000000 		.4byte	.LVL7
 1728 0174 F4080000 		.4byte	0x8f4
 1729 0178 08       		.uleb128 0x8
 1730 0179 1C000000 		.4byte	.LVL9
 1731 017d FF080000 		.4byte	0x8ff
 1732 0181 00       		.byte	0
 1733 0182 06       		.uleb128 0x6
 1734 0183 F2020000 		.4byte	.LASF23
 1735 0187 01       		.byte	0x1
 1736 0188 6B01     		.2byte	0x16b
 1737 018a 00000000 		.4byte	.LFB6
 1738 018e 28000000 		.4byte	.LFE6-.LFB6
 1739 0192 01       		.uleb128 0x1
 1740 0193 9C       		.byte	0x9c
 1741 0194 CB010000 		.4byte	0x1cb
 1742 0198 09       		.uleb128 0x9
 1743 0199 B4030000 		.4byte	.LASF24
 1744 019d 01       		.byte	0x1
 1745 019e 6B01     		.2byte	0x16b
 1746 01a0 77000000 		.4byte	0x77
 1747 01a4 91000000 		.4byte	.LLST5
 1748 01a8 07       		.uleb128 0x7
 1749 01a9 CE040000 		.4byte	.LASF19
 1750 01ad 01       		.byte	0x1
 1751 01ae 6D01     		.2byte	0x16d
 1752 01b0 6B000000 		.4byte	0x6b
 1753 01b4 BD000000 		.4byte	.LLST6
 1754 01b8 08       		.uleb128 0x8
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 57


 1755 01b9 08000000 		.4byte	.LVL11
 1756 01bd F4080000 		.4byte	0x8f4
 1757 01c1 08       		.uleb128 0x8
 1758 01c2 1C000000 		.4byte	.LVL13
 1759 01c6 FF080000 		.4byte	0x8ff
 1760 01ca 00       		.byte	0
 1761 01cb 06       		.uleb128 0x6
 1762 01cc 83030000 		.4byte	.LASF25
 1763 01d0 01       		.byte	0x1
 1764 01d1 8B01     		.2byte	0x18b
 1765 01d3 00000000 		.4byte	.LFB7
 1766 01d7 30000000 		.4byte	.LFE7-.LFB7
 1767 01db 01       		.uleb128 0x1
 1768 01dc 9C       		.byte	0x9c
 1769 01dd 14020000 		.4byte	0x214
 1770 01e1 09       		.uleb128 0x9
 1771 01e2 03030000 		.4byte	.LASF26
 1772 01e6 01       		.byte	0x1
 1773 01e7 8B01     		.2byte	0x18b
 1774 01e9 77000000 		.4byte	0x77
 1775 01ed D0000000 		.4byte	.LLST7
 1776 01f1 07       		.uleb128 0x7
 1777 01f2 CE040000 		.4byte	.LASF19
 1778 01f6 01       		.byte	0x1
 1779 01f7 8D01     		.2byte	0x18d
 1780 01f9 6B000000 		.4byte	0x6b
 1781 01fd FC000000 		.4byte	.LLST8
 1782 0201 08       		.uleb128 0x8
 1783 0202 08000000 		.4byte	.LVL15
 1784 0206 F4080000 		.4byte	0x8f4
 1785 020a 08       		.uleb128 0x8
 1786 020b 24000000 		.4byte	.LVL16
 1787 020f FF080000 		.4byte	0x8ff
 1788 0213 00       		.byte	0
 1789 0214 06       		.uleb128 0x6
 1790 0215 08040000 		.4byte	.LASF27
 1791 0219 01       		.byte	0x1
 1792 021a C101     		.2byte	0x1c1
 1793 021c 00000000 		.4byte	.LFB8
 1794 0220 10000000 		.4byte	.LFE8-.LFB8
 1795 0224 01       		.uleb128 0x1
 1796 0225 9C       		.byte	0x9c
 1797 0226 3B020000 		.4byte	0x23b
 1798 022a 09       		.uleb128 0x9
 1799 022b BF020000 		.4byte	.LASF28
 1800 022f 01       		.byte	0x1
 1801 0230 C101     		.2byte	0x1c1
 1802 0232 77000000 		.4byte	0x77
 1803 0236 0F010000 		.4byte	.LLST9
 1804 023a 00       		.byte	0
 1805 023b 06       		.uleb128 0x6
 1806 023c 27000000 		.4byte	.LASF29
 1807 0240 01       		.byte	0x1
 1808 0241 E501     		.2byte	0x1e5
 1809 0243 00000000 		.4byte	.LFB9
 1810 0247 28000000 		.4byte	.LFE9-.LFB9
 1811 024b 01       		.uleb128 0x1
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 58


 1812 024c 9C       		.byte	0x9c
 1813 024d 84020000 		.4byte	0x284
 1814 0251 09       		.uleb128 0x9
 1815 0252 11050000 		.4byte	.LASF30
 1816 0256 01       		.byte	0x1
 1817 0257 E501     		.2byte	0x1e5
 1818 0259 77000000 		.4byte	0x77
 1819 025d 30010000 		.4byte	.LLST10
 1820 0261 07       		.uleb128 0x7
 1821 0262 CE040000 		.4byte	.LASF19
 1822 0266 01       		.byte	0x1
 1823 0267 E701     		.2byte	0x1e7
 1824 0269 6B000000 		.4byte	0x6b
 1825 026d 5C010000 		.4byte	.LLST11
 1826 0271 08       		.uleb128 0x8
 1827 0272 08000000 		.4byte	.LVL21
 1828 0276 F4080000 		.4byte	0x8f4
 1829 027a 08       		.uleb128 0x8
 1830 027b 22000000 		.4byte	.LVL23
 1831 027f FF080000 		.4byte	0x8ff
 1832 0283 00       		.byte	0
 1833 0284 06       		.uleb128 0x6
 1834 0285 FC040000 		.4byte	.LASF31
 1835 0289 01       		.byte	0x1
 1836 028a 0702     		.2byte	0x207
 1837 028c 00000000 		.4byte	.LFB10
 1838 0290 28000000 		.4byte	.LFE10-.LFB10
 1839 0294 01       		.uleb128 0x1
 1840 0295 9C       		.byte	0x9c
 1841 0296 CD020000 		.4byte	0x2cd
 1842 029a 09       		.uleb128 0x9
 1843 029b F7030000 		.4byte	.LASF32
 1844 029f 01       		.byte	0x1
 1845 02a0 0702     		.2byte	0x207
 1846 02a2 77000000 		.4byte	0x77
 1847 02a6 6F010000 		.4byte	.LLST12
 1848 02aa 07       		.uleb128 0x7
 1849 02ab CE040000 		.4byte	.LASF19
 1850 02af 01       		.byte	0x1
 1851 02b0 0902     		.2byte	0x209
 1852 02b2 6B000000 		.4byte	0x6b
 1853 02b6 9B010000 		.4byte	.LLST13
 1854 02ba 08       		.uleb128 0x8
 1855 02bb 08000000 		.4byte	.LVL25
 1856 02bf F4080000 		.4byte	0x8f4
 1857 02c3 08       		.uleb128 0x8
 1858 02c4 22000000 		.4byte	.LVL27
 1859 02c8 FF080000 		.4byte	0x8ff
 1860 02cc 00       		.byte	0
 1861 02cd 06       		.uleb128 0x6
 1862 02ce 92020000 		.4byte	.LASF33
 1863 02d2 01       		.byte	0x1
 1864 02d3 2802     		.2byte	0x228
 1865 02d5 00000000 		.4byte	.LFB11
 1866 02d9 2C000000 		.4byte	.LFE11-.LFB11
 1867 02dd 01       		.uleb128 0x1
 1868 02de 9C       		.byte	0x9c
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 59


 1869 02df 16030000 		.4byte	0x316
 1870 02e3 09       		.uleb128 0x9
 1871 02e4 22020000 		.4byte	.LASF34
 1872 02e8 01       		.byte	0x1
 1873 02e9 2802     		.2byte	0x228
 1874 02eb 77000000 		.4byte	0x77
 1875 02ef AE010000 		.4byte	.LLST14
 1876 02f3 07       		.uleb128 0x7
 1877 02f4 CE040000 		.4byte	.LASF19
 1878 02f8 01       		.byte	0x1
 1879 02f9 2A02     		.2byte	0x22a
 1880 02fb 6B000000 		.4byte	0x6b
 1881 02ff DA010000 		.4byte	.LLST15
 1882 0303 08       		.uleb128 0x8
 1883 0304 08000000 		.4byte	.LVL29
 1884 0308 F4080000 		.4byte	0x8f4
 1885 030c 08       		.uleb128 0x8
 1886 030d 20000000 		.4byte	.LVL31
 1887 0311 FF080000 		.4byte	0x8ff
 1888 0315 00       		.byte	0
 1889 0316 06       		.uleb128 0x6
 1890 0317 D9010000 		.4byte	.LASF35
 1891 031b 01       		.byte	0x1
 1892 031c 4902     		.2byte	0x249
 1893 031e 00000000 		.4byte	.LFB12
 1894 0322 28000000 		.4byte	.LFE12-.LFB12
 1895 0326 01       		.uleb128 0x1
 1896 0327 9C       		.byte	0x9c
 1897 0328 5F030000 		.4byte	0x35f
 1898 032c 09       		.uleb128 0x9
 1899 032d 0E020000 		.4byte	.LASF36
 1900 0331 01       		.byte	0x1
 1901 0332 4902     		.2byte	0x249
 1902 0334 77000000 		.4byte	0x77
 1903 0338 ED010000 		.4byte	.LLST16
 1904 033c 07       		.uleb128 0x7
 1905 033d CE040000 		.4byte	.LASF19
 1906 0341 01       		.byte	0x1
 1907 0342 4B02     		.2byte	0x24b
 1908 0344 6B000000 		.4byte	0x6b
 1909 0348 19020000 		.4byte	.LLST17
 1910 034c 08       		.uleb128 0x8
 1911 034d 08000000 		.4byte	.LVL33
 1912 0351 F4080000 		.4byte	0x8f4
 1913 0355 08       		.uleb128 0x8
 1914 0356 1C000000 		.4byte	.LVL35
 1915 035a FF080000 		.4byte	0x8ff
 1916 035e 00       		.byte	0
 1917 035f 06       		.uleb128 0x6
 1918 0360 00010000 		.4byte	.LASF37
 1919 0364 01       		.byte	0x1
 1920 0365 6702     		.2byte	0x267
 1921 0367 00000000 		.4byte	.LFB13
 1922 036b 10000000 		.4byte	.LFE13-.LFB13
 1923 036f 01       		.uleb128 0x1
 1924 0370 9C       		.byte	0x9c
 1925 0371 86030000 		.4byte	0x386
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 60


 1926 0375 09       		.uleb128 0x9
 1927 0376 00000000 		.4byte	.LASF38
 1928 037a 01       		.byte	0x1
 1929 037b 6702     		.2byte	0x267
 1930 037d 77000000 		.4byte	0x77
 1931 0381 2C020000 		.4byte	.LLST18
 1932 0385 00       		.byte	0
 1933 0386 0A       		.uleb128 0xa
 1934 0387 2E010000 		.4byte	.LASF43
 1935 038b 01       		.byte	0x1
 1936 038c 7B02     		.2byte	0x27b
 1937 038e 77000000 		.4byte	0x77
 1938 0392 00000000 		.4byte	.LFB14
 1939 0396 10000000 		.4byte	.LFE14-.LFB14
 1940 039a 01       		.uleb128 0x1
 1941 039b 9C       		.byte	0x9c
 1942 039c 06       		.uleb128 0x6
 1943 039d 42050000 		.4byte	.LASF39
 1944 03a1 01       		.byte	0x1
 1945 03a2 9802     		.2byte	0x298
 1946 03a4 00000000 		.4byte	.LFB15
 1947 03a8 28000000 		.4byte	.LFE15-.LFB15
 1948 03ac 01       		.uleb128 0x1
 1949 03ad 9C       		.byte	0x9c
 1950 03ae E5030000 		.4byte	0x3e5
 1951 03b2 09       		.uleb128 0x9
 1952 03b3 9A040000 		.4byte	.LASF40
 1953 03b7 01       		.byte	0x1
 1954 03b8 9802     		.2byte	0x298
 1955 03ba 77000000 		.4byte	0x77
 1956 03be 4D020000 		.4byte	.LLST19
 1957 03c2 07       		.uleb128 0x7
 1958 03c3 CE040000 		.4byte	.LASF19
 1959 03c7 01       		.byte	0x1
 1960 03c8 9A02     		.2byte	0x29a
 1961 03ca 6B000000 		.4byte	0x6b
 1962 03ce 79020000 		.4byte	.LLST20
 1963 03d2 08       		.uleb128 0x8
 1964 03d3 08000000 		.4byte	.LVL39
 1965 03d7 F4080000 		.4byte	0x8f4
 1966 03db 08       		.uleb128 0x8
 1967 03dc 1C000000 		.4byte	.LVL41
 1968 03e0 FF080000 		.4byte	0x8ff
 1969 03e4 00       		.byte	0
 1970 03e5 06       		.uleb128 0x6
 1971 03e6 35030000 		.4byte	.LASF41
 1972 03ea 01       		.byte	0x1
 1973 03eb B502     		.2byte	0x2b5
 1974 03ed 00000000 		.4byte	.LFB16
 1975 03f1 10000000 		.4byte	.LFE16-.LFB16
 1976 03f5 01       		.uleb128 0x1
 1977 03f6 9C       		.byte	0x9c
 1978 03f7 0C040000 		.4byte	0x40c
 1979 03fb 09       		.uleb128 0x9
 1980 03fc C8000000 		.4byte	.LASF42
 1981 0400 01       		.byte	0x1
 1982 0401 B502     		.2byte	0x2b5
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 61


 1983 0403 77000000 		.4byte	0x77
 1984 0407 8C020000 		.4byte	.LLST21
 1985 040b 00       		.byte	0
 1986 040c 0A       		.uleb128 0xa
 1987 040d 57030000 		.4byte	.LASF44
 1988 0411 01       		.byte	0x1
 1989 0412 C902     		.2byte	0x2c9
 1990 0414 77000000 		.4byte	0x77
 1991 0418 00000000 		.4byte	.LFB17
 1992 041c 10000000 		.4byte	.LFE17-.LFB17
 1993 0420 01       		.uleb128 0x1
 1994 0421 9C       		.byte	0x9c
 1995 0422 06       		.uleb128 0x6
 1996 0423 BD010000 		.4byte	.LASF45
 1997 0427 01       		.byte	0x1
 1998 0428 E302     		.2byte	0x2e3
 1999 042a 00000000 		.4byte	.LFB18
 2000 042e 24000000 		.4byte	.LFE18-.LFB18
 2001 0432 01       		.uleb128 0x1
 2002 0433 9C       		.byte	0x9c
 2003 0434 6B040000 		.4byte	0x46b
 2004 0438 09       		.uleb128 0x9
 2005 0439 20050000 		.4byte	.LASF46
 2006 043d 01       		.byte	0x1
 2007 043e E302     		.2byte	0x2e3
 2008 0440 77000000 		.4byte	0x77
 2009 0444 AD020000 		.4byte	.LLST22
 2010 0448 07       		.uleb128 0x7
 2011 0449 CE040000 		.4byte	.LASF19
 2012 044d 01       		.byte	0x1
 2013 044e E502     		.2byte	0x2e5
 2014 0450 6B000000 		.4byte	0x6b
 2015 0454 D9020000 		.4byte	.LLST23
 2016 0458 08       		.uleb128 0x8
 2017 0459 08000000 		.4byte	.LVL45
 2018 045d F4080000 		.4byte	0x8f4
 2019 0461 08       		.uleb128 0x8
 2020 0462 1E000000 		.4byte	.LVL47
 2021 0466 FF080000 		.4byte	0x8ff
 2022 046a 00       		.byte	0
 2023 046b 06       		.uleb128 0x6
 2024 046c 4C040000 		.4byte	.LASF47
 2025 0470 01       		.byte	0x1
 2026 0471 FE02     		.2byte	0x2fe
 2027 0473 00000000 		.4byte	.LFB19
 2028 0477 10000000 		.4byte	.LFE19-.LFB19
 2029 047b 01       		.uleb128 0x1
 2030 047c 9C       		.byte	0x9c
 2031 047d 92040000 		.4byte	0x492
 2032 0481 09       		.uleb128 0x9
 2033 0482 B1040000 		.4byte	.LASF48
 2034 0486 01       		.byte	0x1
 2035 0487 FE02     		.2byte	0x2fe
 2036 0489 77000000 		.4byte	0x77
 2037 048d EC020000 		.4byte	.LLST24
 2038 0491 00       		.byte	0
 2039 0492 0A       		.uleb128 0xa
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 62


 2040 0493 92030000 		.4byte	.LASF49
 2041 0497 01       		.byte	0x1
 2042 0498 1203     		.2byte	0x312
 2043 049a 77000000 		.4byte	0x77
 2044 049e 00000000 		.4byte	.LFB20
 2045 04a2 10000000 		.4byte	.LFE20-.LFB20
 2046 04a6 01       		.uleb128 0x1
 2047 04a7 9C       		.byte	0x9c
 2048 04a8 06       		.uleb128 0x6
 2049 04a9 CE030000 		.4byte	.LASF50
 2050 04ad 01       		.byte	0x1
 2051 04ae 2C03     		.2byte	0x32c
 2052 04b0 00000000 		.4byte	.LFB21
 2053 04b4 28000000 		.4byte	.LFE21-.LFB21
 2054 04b8 01       		.uleb128 0x1
 2055 04b9 9C       		.byte	0x9c
 2056 04ba F1040000 		.4byte	0x4f1
 2057 04be 09       		.uleb128 0x9
 2058 04bf 20050000 		.4byte	.LASF46
 2059 04c3 01       		.byte	0x1
 2060 04c4 2C03     		.2byte	0x32c
 2061 04c6 77000000 		.4byte	0x77
 2062 04ca 0D030000 		.4byte	.LLST25
 2063 04ce 07       		.uleb128 0x7
 2064 04cf CE040000 		.4byte	.LASF19
 2065 04d3 01       		.byte	0x1
 2066 04d4 2E03     		.2byte	0x32e
 2067 04d6 6B000000 		.4byte	0x6b
 2068 04da 39030000 		.4byte	.LLST26
 2069 04de 08       		.uleb128 0x8
 2070 04df 08000000 		.4byte	.LVL51
 2071 04e3 F4080000 		.4byte	0x8f4
 2072 04e7 08       		.uleb128 0x8
 2073 04e8 22000000 		.4byte	.LVL53
 2074 04ec FF080000 		.4byte	0x8ff
 2075 04f0 00       		.byte	0
 2076 04f1 06       		.uleb128 0x6
 2077 04f2 24030000 		.4byte	.LASF51
 2078 04f6 01       		.byte	0x1
 2079 04f7 5103     		.2byte	0x351
 2080 04f9 00000000 		.4byte	.LFB22
 2081 04fd 10000000 		.4byte	.LFE22-.LFB22
 2082 0501 01       		.uleb128 0x1
 2083 0502 9C       		.byte	0x9c
 2084 0503 18050000 		.4byte	0x518
 2085 0507 09       		.uleb128 0x9
 2086 0508 7B030000 		.4byte	.LASF52
 2087 050c 01       		.byte	0x1
 2088 050d 5103     		.2byte	0x351
 2089 050f 77000000 		.4byte	0x77
 2090 0513 4C030000 		.4byte	.LLST27
 2091 0517 00       		.byte	0
 2092 0518 0A       		.uleb128 0xa
 2093 0519 55050000 		.4byte	.LASF53
 2094 051d 01       		.byte	0x1
 2095 051e 8403     		.2byte	0x384
 2096 0520 77000000 		.4byte	0x77
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 63


 2097 0524 00000000 		.4byte	.LFB23
 2098 0528 10000000 		.4byte	.LFE23-.LFB23
 2099 052c 01       		.uleb128 0x1
 2100 052d 9C       		.byte	0x9c
 2101 052e 06       		.uleb128 0x6
 2102 052f 58010000 		.4byte	.LASF54
 2103 0533 01       		.byte	0x1
 2104 0534 BA03     		.2byte	0x3ba
 2105 0536 00000000 		.4byte	.LFB24
 2106 053a 10000000 		.4byte	.LFE24-.LFB24
 2107 053e 01       		.uleb128 0x1
 2108 053f 9C       		.byte	0x9c
 2109 0540 55050000 		.4byte	0x555
 2110 0544 09       		.uleb128 0x9
 2111 0545 A6040000 		.4byte	.LASF55
 2112 0549 01       		.byte	0x1
 2113 054a BA03     		.2byte	0x3ba
 2114 054c 77000000 		.4byte	0x77
 2115 0550 6D030000 		.4byte	.LLST28
 2116 0554 00       		.byte	0
 2117 0555 0A       		.uleb128 0xa
 2118 0556 AA010000 		.4byte	.LASF56
 2119 055a 01       		.byte	0x1
 2120 055b E803     		.2byte	0x3e8
 2121 055d 77000000 		.4byte	0x77
 2122 0561 00000000 		.4byte	.LFB25
 2123 0565 10000000 		.4byte	.LFE25-.LFB25
 2124 0569 01       		.uleb128 0x1
 2125 056a 9C       		.byte	0x9c
 2126 056b 0A       		.uleb128 0xa
 2127 056c BE030000 		.4byte	.LASF57
 2128 0570 01       		.byte	0x1
 2129 0571 1604     		.2byte	0x416
 2130 0573 77000000 		.4byte	0x77
 2131 0577 00000000 		.4byte	.LFB26
 2132 057b 10000000 		.4byte	.LFE26-.LFB26
 2133 057f 01       		.uleb128 0x1
 2134 0580 9C       		.byte	0x9c
 2135 0581 0A       		.uleb128 0xa
 2136 0582 BB040000 		.4byte	.LASF58
 2137 0586 01       		.byte	0x1
 2138 0587 2B04     		.2byte	0x42b
 2139 0589 77000000 		.4byte	0x77
 2140 058d 00000000 		.4byte	.LFB27
 2141 0591 10000000 		.4byte	.LFE27-.LFB27
 2142 0595 01       		.uleb128 0x1
 2143 0596 9C       		.byte	0x9c
 2144 0597 06       		.uleb128 0x6
 2145 0598 E6000000 		.4byte	.LASF59
 2146 059c 01       		.byte	0x1
 2147 059d 4604     		.2byte	0x446
 2148 059f 00000000 		.4byte	.LFB28
 2149 05a3 24000000 		.4byte	.LFE28-.LFB28
 2150 05a7 01       		.uleb128 0x1
 2151 05a8 9C       		.byte	0x9c
 2152 05a9 E0050000 		.4byte	0x5e0
 2153 05ad 09       		.uleb128 0x9
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 64


 2154 05ae 02020000 		.4byte	.LASF60
 2155 05b2 01       		.byte	0x1
 2156 05b3 4604     		.2byte	0x446
 2157 05b5 77000000 		.4byte	0x77
 2158 05b9 8E030000 		.4byte	.LLST29
 2159 05bd 07       		.uleb128 0x7
 2160 05be CE040000 		.4byte	.LASF19
 2161 05c2 01       		.byte	0x1
 2162 05c3 4804     		.2byte	0x448
 2163 05c5 6B000000 		.4byte	0x6b
 2164 05c9 BA030000 		.4byte	.LLST30
 2165 05cd 08       		.uleb128 0x8
 2166 05ce 08000000 		.4byte	.LVL59
 2167 05d2 F4080000 		.4byte	0x8f4
 2168 05d6 08       		.uleb128 0x8
 2169 05d7 1C000000 		.4byte	.LVL61
 2170 05db FF080000 		.4byte	0x8ff
 2171 05df 00       		.byte	0
 2172 05e0 06       		.uleb128 0x6
 2173 05e1 88040000 		.4byte	.LASF61
 2174 05e5 01       		.byte	0x1
 2175 05e6 6704     		.2byte	0x467
 2176 05e8 00000000 		.4byte	.LFB29
 2177 05ec 24000000 		.4byte	.LFE29-.LFB29
 2178 05f0 01       		.uleb128 0x1
 2179 05f1 9C       		.byte	0x9c
 2180 05f2 29060000 		.4byte	0x629
 2181 05f6 09       		.uleb128 0x9
 2182 05f7 02020000 		.4byte	.LASF60
 2183 05fb 01       		.byte	0x1
 2184 05fc 6704     		.2byte	0x467
 2185 05fe 77000000 		.4byte	0x77
 2186 0602 CD030000 		.4byte	.LLST31
 2187 0606 07       		.uleb128 0x7
 2188 0607 CE040000 		.4byte	.LASF19
 2189 060b 01       		.byte	0x1
 2190 060c 6904     		.2byte	0x469
 2191 060e 6B000000 		.4byte	0x6b
 2192 0612 F9030000 		.4byte	.LLST32
 2193 0616 08       		.uleb128 0x8
 2194 0617 08000000 		.4byte	.LVL63
 2195 061b F4080000 		.4byte	0x8f4
 2196 061f 08       		.uleb128 0x8
 2197 0620 1E000000 		.4byte	.LVL65
 2198 0624 FF080000 		.4byte	0x8ff
 2199 0628 00       		.byte	0
 2200 0629 06       		.uleb128 0x6
 2201 062a F1010000 		.4byte	.LASF62
 2202 062e 01       		.byte	0x1
 2203 062f 8804     		.2byte	0x488
 2204 0631 00000000 		.4byte	.LFB30
 2205 0635 28000000 		.4byte	.LFE30-.LFB30
 2206 0639 01       		.uleb128 0x1
 2207 063a 9C       		.byte	0x9c
 2208 063b 72060000 		.4byte	0x672
 2209 063f 09       		.uleb128 0x9
 2210 0640 02020000 		.4byte	.LASF60
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 65


 2211 0644 01       		.byte	0x1
 2212 0645 8804     		.2byte	0x488
 2213 0647 77000000 		.4byte	0x77
 2214 064b 0C040000 		.4byte	.LLST33
 2215 064f 07       		.uleb128 0x7
 2216 0650 CE040000 		.4byte	.LASF19
 2217 0654 01       		.byte	0x1
 2218 0655 8A04     		.2byte	0x48a
 2219 0657 6B000000 		.4byte	0x6b
 2220 065b 38040000 		.4byte	.LLST34
 2221 065f 08       		.uleb128 0x8
 2222 0660 08000000 		.4byte	.LVL67
 2223 0664 F4080000 		.4byte	0x8f4
 2224 0668 08       		.uleb128 0x8
 2225 0669 1E000000 		.4byte	.LVL69
 2226 066d FF080000 		.4byte	0x8ff
 2227 0671 00       		.byte	0
 2228 0672 06       		.uleb128 0x6
 2229 0673 75020000 		.4byte	.LASF63
 2230 0677 01       		.byte	0x1
 2231 0678 A804     		.2byte	0x4a8
 2232 067a 00000000 		.4byte	.LFB31
 2233 067e 24000000 		.4byte	.LFE31-.LFB31
 2234 0682 01       		.uleb128 0x1
 2235 0683 9C       		.byte	0x9c
 2236 0684 BB060000 		.4byte	0x6bb
 2237 0688 09       		.uleb128 0x9
 2238 0689 02020000 		.4byte	.LASF60
 2239 068d 01       		.byte	0x1
 2240 068e A804     		.2byte	0x4a8
 2241 0690 77000000 		.4byte	0x77
 2242 0694 4B040000 		.4byte	.LLST35
 2243 0698 07       		.uleb128 0x7
 2244 0699 CE040000 		.4byte	.LASF19
 2245 069d 01       		.byte	0x1
 2246 069e AA04     		.2byte	0x4aa
 2247 06a0 6B000000 		.4byte	0x6b
 2248 06a4 77040000 		.4byte	.LLST36
 2249 06a8 08       		.uleb128 0x8
 2250 06a9 08000000 		.4byte	.LVL71
 2251 06ad F4080000 		.4byte	0x8f4
 2252 06b1 08       		.uleb128 0x8
 2253 06b2 1E000000 		.4byte	.LVL73
 2254 06b6 FF080000 		.4byte	0x8ff
 2255 06ba 00       		.byte	0
 2256 06bb 06       		.uleb128 0x6
 2257 06bc DF040000 		.4byte	.LASF64
 2258 06c0 01       		.byte	0x1
 2259 06c1 C904     		.2byte	0x4c9
 2260 06c3 00000000 		.4byte	.LFB32
 2261 06c7 24000000 		.4byte	.LFE32-.LFB32
 2262 06cb 01       		.uleb128 0x1
 2263 06cc 9C       		.byte	0x9c
 2264 06cd 04070000 		.4byte	0x704
 2265 06d1 09       		.uleb128 0x9
 2266 06d2 02020000 		.4byte	.LASF60
 2267 06d6 01       		.byte	0x1
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 66


 2268 06d7 C904     		.2byte	0x4c9
 2269 06d9 77000000 		.4byte	0x77
 2270 06dd 8A040000 		.4byte	.LLST37
 2271 06e1 07       		.uleb128 0x7
 2272 06e2 CE040000 		.4byte	.LASF19
 2273 06e6 01       		.byte	0x1
 2274 06e7 CB04     		.2byte	0x4cb
 2275 06e9 6B000000 		.4byte	0x6b
 2276 06ed B6040000 		.4byte	.LLST38
 2277 06f1 08       		.uleb128 0x8
 2278 06f2 08000000 		.4byte	.LVL75
 2279 06f6 F4080000 		.4byte	0x8f4
 2280 06fa 08       		.uleb128 0x8
 2281 06fb 1E000000 		.4byte	.LVL77
 2282 06ff FF080000 		.4byte	0x8ff
 2283 0703 00       		.byte	0
 2284 0704 06       		.uleb128 0x6
 2285 0705 11030000 		.4byte	.LASF65
 2286 0709 01       		.byte	0x1
 2287 070a F104     		.2byte	0x4f1
 2288 070c 00000000 		.4byte	.LFB33
 2289 0710 1C000000 		.4byte	.LFE33-.LFB33
 2290 0714 01       		.uleb128 0x1
 2291 0715 9C       		.byte	0x9c
 2292 0716 5D070000 		.4byte	0x75d
 2293 071a 09       		.uleb128 0x9
 2294 071b 0E020000 		.4byte	.LASF36
 2295 071f 01       		.byte	0x1
 2296 0720 F104     		.2byte	0x4f1
 2297 0722 77000000 		.4byte	0x77
 2298 0726 C9040000 		.4byte	.LLST39
 2299 072a 09       		.uleb128 0x9
 2300 072b A5020000 		.4byte	.LASF66
 2301 072f 01       		.byte	0x1
 2302 0730 F104     		.2byte	0x4f1
 2303 0732 77000000 		.4byte	0x77
 2304 0736 F5040000 		.4byte	.LLST40
 2305 073a 07       		.uleb128 0x7
 2306 073b CE040000 		.4byte	.LASF19
 2307 073f 01       		.byte	0x1
 2308 0740 F304     		.2byte	0x4f3
 2309 0742 6B000000 		.4byte	0x6b
 2310 0746 21050000 		.4byte	.LLST41
 2311 074a 08       		.uleb128 0x8
 2312 074b 0A000000 		.4byte	.LVL79
 2313 074f F4080000 		.4byte	0x8f4
 2314 0753 08       		.uleb128 0x8
 2315 0754 14000000 		.4byte	.LVL81
 2316 0758 FF080000 		.4byte	0x8ff
 2317 075c 00       		.byte	0
 2318 075d 0B       		.uleb128 0xb
 2319 075e 06000000 		.4byte	.LASF67
 2320 0762 01       		.byte	0x1
 2321 0763 B1       		.byte	0xb1
 2322 0764 00000000 		.4byte	.LFB1
 2323 0768 24000000 		.4byte	.LFE1-.LFB1
 2324 076c 01       		.uleb128 0x1
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 67


 2325 076d 9C       		.byte	0x9c
 2326 076e A8070000 		.4byte	0x7a8
 2327 0772 0C       		.uleb128 0xc
 2328 0773 CE040000 		.4byte	.LASF19
 2329 0777 01       		.byte	0x1
 2330 0778 B3       		.byte	0xb3
 2331 0779 6B000000 		.4byte	0x6b
 2332 077d 34050000 		.4byte	.LLST42
 2333 0781 08       		.uleb128 0x8
 2334 0782 06000000 		.4byte	.LVL83
 2335 0786 F4080000 		.4byte	0x8f4
 2336 078a 08       		.uleb128 0x8
 2337 078b 14000000 		.4byte	.LVL84
 2338 078f FF080000 		.4byte	0x8ff
 2339 0793 0D       		.uleb128 0xd
 2340 0794 1C000000 		.4byte	.LVL85
 2341 0798 04070000 		.4byte	0x704
 2342 079c 0E       		.uleb128 0xe
 2343 079d 01       		.uleb128 0x1
 2344 079e 50       		.byte	0x50
 2345 079f 01       		.uleb128 0x1
 2346 07a0 32       		.byte	0x32
 2347 07a1 0E       		.uleb128 0xe
 2348 07a2 01       		.uleb128 0x1
 2349 07a3 51       		.byte	0x51
 2350 07a4 01       		.uleb128 0x1
 2351 07a5 48       		.byte	0x48
 2352 07a6 00       		.byte	0
 2353 07a7 00       		.byte	0
 2354 07a8 0A       		.uleb128 0xa
 2355 07a9 13020000 		.4byte	.LASF68
 2356 07ad 01       		.byte	0x1
 2357 07ae 0E05     		.2byte	0x50e
 2358 07b0 77000000 		.4byte	0x77
 2359 07b4 00000000 		.4byte	.LFB34
 2360 07b8 14000000 		.4byte	.LFE34-.LFB34
 2361 07bc 01       		.uleb128 0x1
 2362 07bd 9C       		.byte	0x9c
 2363 07be 06       		.uleb128 0x6
 2364 07bf 6C010000 		.4byte	.LASF69
 2365 07c3 01       		.byte	0x1
 2366 07c4 2705     		.2byte	0x527
 2367 07c6 00000000 		.4byte	.LFB35
 2368 07ca 0C000000 		.4byte	.LFE35-.LFB35
 2369 07ce 01       		.uleb128 0x1
 2370 07cf 9C       		.byte	0x9c
 2371 07d0 E3070000 		.4byte	0x7e3
 2372 07d4 0F       		.uleb128 0xf
 2373 07d5 3E040000 		.4byte	.LASF70
 2374 07d9 01       		.byte	0x1
 2375 07da 2705     		.2byte	0x527
 2376 07dc 77000000 		.4byte	0x77
 2377 07e0 01       		.uleb128 0x1
 2378 07e1 50       		.byte	0x50
 2379 07e2 00       		.byte	0
 2380 07e3 0B       		.uleb128 0xb
 2381 07e4 EE030000 		.4byte	.LASF71
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 68


 2382 07e8 01       		.byte	0x1
 2383 07e9 26       		.byte	0x26
 2384 07ea 00000000 		.4byte	.LFB0
 2385 07ee 54000000 		.4byte	.LFE0-.LFB0
 2386 07f2 01       		.uleb128 0x1
 2387 07f3 9C       		.byte	0x9c
 2388 07f4 45080000 		.4byte	0x845
 2389 07f8 10       		.uleb128 0x10
 2390 07f9 14000000 		.4byte	.LVL87
 2391 07fd 5F030000 		.4byte	0x35f
 2392 0801 0B080000 		.4byte	0x80b
 2393 0805 0E       		.uleb128 0xe
 2394 0806 01       		.uleb128 0x1
 2395 0807 50       		.byte	0x50
 2396 0808 01       		.uleb128 0x1
 2397 0809 30       		.byte	0x30
 2398 080a 00       		.byte	0
 2399 080b 10       		.uleb128 0x10
 2400 080c 2C000000 		.4byte	.LVL88
 2401 0810 BE070000 		.4byte	0x7be
 2402 0814 1E080000 		.4byte	0x81e
 2403 0818 0E       		.uleb128 0xe
 2404 0819 01       		.uleb128 0x1
 2405 081a 50       		.byte	0x50
 2406 081b 01       		.uleb128 0x1
 2407 081c 30       		.byte	0x30
 2408 081d 00       		.byte	0
 2409 081e 10       		.uleb128 0x10
 2410 081f 38000000 		.4byte	.LVL89
 2411 0823 E5030000 		.4byte	0x3e5
 2412 0827 33080000 		.4byte	0x833
 2413 082b 0E       		.uleb128 0xe
 2414 082c 01       		.uleb128 0x1
 2415 082d 50       		.byte	0x50
 2416 082e 03       		.uleb128 0x3
 2417 082f 0A       		.byte	0xa
 2418 0830 E216     		.2byte	0x16e2
 2419 0832 00       		.byte	0
 2420 0833 0D       		.uleb128 0xd
 2421 0834 3E000000 		.4byte	.LVL90
 2422 0838 F1040000 		.4byte	0x4f1
 2423 083c 0E       		.uleb128 0xe
 2424 083d 01       		.uleb128 0x1
 2425 083e 50       		.byte	0x50
 2426 083f 03       		.uleb128 0x3
 2427 0840 0A       		.byte	0xa
 2428 0841 710B     		.2byte	0xb71
 2429 0843 00       		.byte	0
 2430 0844 00       		.byte	0
 2431 0845 0B       		.uleb128 0xb
 2432 0846 A4030000 		.4byte	.LASF72
 2433 084a 01       		.byte	0x1
 2434 084b E6       		.byte	0xe6
 2435 084c 00000000 		.4byte	.LFB2
 2436 0850 20000000 		.4byte	.LFE2-.LFB2
 2437 0854 01       		.uleb128 0x1
 2438 0855 9C       		.byte	0x9c
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 69


 2439 0856 6D080000 		.4byte	0x86d
 2440 085a 08       		.uleb128 0x8
 2441 085b 0E000000 		.4byte	.LVL91
 2442 085f E3070000 		.4byte	0x7e3
 2443 0863 08       		.uleb128 0x8
 2444 0864 18000000 		.4byte	.LVL92
 2445 0868 5D070000 		.4byte	0x75d
 2446 086c 00       		.byte	0
 2447 086d 0A       		.uleb128 0xa
 2448 086e 21040000 		.4byte	.LASF73
 2449 0872 01       		.byte	0x1
 2450 0873 3E05     		.2byte	0x53e
 2451 0875 77000000 		.4byte	0x77
 2452 0879 00000000 		.4byte	.LFB36
 2453 087d 0C000000 		.4byte	.LFE36-.LFB36
 2454 0881 01       		.uleb128 0x1
 2455 0882 9C       		.byte	0x9c
 2456 0883 0A       		.uleb128 0xa
 2457 0884 2B050000 		.4byte	.LASF74
 2458 0888 01       		.byte	0x1
 2459 0889 5505     		.2byte	0x555
 2460 088b 77000000 		.4byte	0x77
 2461 088f 00000000 		.4byte	.LFB37
 2462 0893 0C000000 		.4byte	.LFE37-.LFB37
 2463 0897 01       		.uleb128 0x1
 2464 0898 9C       		.byte	0x9c
 2465 0899 06       		.uleb128 0x6
 2466 089a 81010000 		.4byte	.LASF75
 2467 089e 01       		.byte	0x1
 2468 089f 6C05     		.2byte	0x56c
 2469 08a1 00000000 		.4byte	.LFB38
 2470 08a5 0C000000 		.4byte	.LFE38-.LFB38
 2471 08a9 01       		.uleb128 0x1
 2472 08aa 9C       		.byte	0x9c
 2473 08ab BE080000 		.4byte	0x8be
 2474 08af 0F       		.uleb128 0xf
 2475 08b0 3E040000 		.4byte	.LASF70
 2476 08b4 01       		.byte	0x1
 2477 08b5 6C05     		.2byte	0x56c
 2478 08b7 77000000 		.4byte	0x77
 2479 08bb 01       		.uleb128 0x1
 2480 08bc 50       		.byte	0x50
 2481 08bd 00       		.byte	0
 2482 08be 06       		.uleb128 0x6
 2483 08bf 77040000 		.4byte	.LASF76
 2484 08c3 01       		.byte	0x1
 2485 08c4 8305     		.2byte	0x583
 2486 08c6 00000000 		.4byte	.LFB39
 2487 08ca 0C000000 		.4byte	.LFE39-.LFB39
 2488 08ce 01       		.uleb128 0x1
 2489 08cf 9C       		.byte	0x9c
 2490 08d0 E3080000 		.4byte	0x8e3
 2491 08d4 0F       		.uleb128 0xf
 2492 08d5 3E040000 		.4byte	.LASF70
 2493 08d9 01       		.byte	0x1
 2494 08da 8305     		.2byte	0x583
 2495 08dc 77000000 		.4byte	0x77
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 70


 2496 08e0 01       		.uleb128 0x1
 2497 08e1 50       		.byte	0x50
 2498 08e2 00       		.byte	0
 2499 08e3 11       		.uleb128 0x11
 2500 08e4 4B030000 		.4byte	.LASF82
 2501 08e8 01       		.byte	0x1
 2502 08e9 15       		.byte	0x15
 2503 08ea 6B000000 		.4byte	0x6b
 2504 08ee 05       		.uleb128 0x5
 2505 08ef 03       		.byte	0x3
 2506 08f0 00000000 		.4byte	PWM_initVar
 2507 08f4 12       		.uleb128 0x12
 2508 08f5 C8020000 		.4byte	.LASF77
 2509 08f9 C8020000 		.4byte	.LASF77
 2510 08fd 03       		.byte	0x3
 2511 08fe E3       		.byte	0xe3
 2512 08ff 12       		.uleb128 0x12
 2513 0900 11000000 		.4byte	.LASF78
 2514 0904 11000000 		.4byte	.LASF78
 2515 0908 03       		.byte	0x3
 2516 0909 E4       		.byte	0xe4
 2517 090a 00       		.byte	0
 2518              		.section	.debug_abbrev,"",%progbits
 2519              	.Ldebug_abbrev0:
 2520 0000 01       		.uleb128 0x1
 2521 0001 11       		.uleb128 0x11
 2522 0002 01       		.byte	0x1
 2523 0003 25       		.uleb128 0x25
 2524 0004 0E       		.uleb128 0xe
 2525 0005 13       		.uleb128 0x13
 2526 0006 0B       		.uleb128 0xb
 2527 0007 03       		.uleb128 0x3
 2528 0008 0E       		.uleb128 0xe
 2529 0009 1B       		.uleb128 0x1b
 2530 000a 0E       		.uleb128 0xe
 2531 000b 55       		.uleb128 0x55
 2532 000c 17       		.uleb128 0x17
 2533 000d 11       		.uleb128 0x11
 2534 000e 01       		.uleb128 0x1
 2535 000f 10       		.uleb128 0x10
 2536 0010 17       		.uleb128 0x17
 2537 0011 00       		.byte	0
 2538 0012 00       		.byte	0
 2539 0013 02       		.uleb128 0x2
 2540 0014 24       		.uleb128 0x24
 2541 0015 00       		.byte	0
 2542 0016 0B       		.uleb128 0xb
 2543 0017 0B       		.uleb128 0xb
 2544 0018 3E       		.uleb128 0x3e
 2545 0019 0B       		.uleb128 0xb
 2546 001a 03       		.uleb128 0x3
 2547 001b 0E       		.uleb128 0xe
 2548 001c 00       		.byte	0
 2549 001d 00       		.byte	0
 2550 001e 03       		.uleb128 0x3
 2551 001f 24       		.uleb128 0x24
 2552 0020 00       		.byte	0
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 71


 2553 0021 0B       		.uleb128 0xb
 2554 0022 0B       		.uleb128 0xb
 2555 0023 3E       		.uleb128 0x3e
 2556 0024 0B       		.uleb128 0xb
 2557 0025 03       		.uleb128 0x3
 2558 0026 08       		.uleb128 0x8
 2559 0027 00       		.byte	0
 2560 0028 00       		.byte	0
 2561 0029 04       		.uleb128 0x4
 2562 002a 16       		.uleb128 0x16
 2563 002b 00       		.byte	0
 2564 002c 03       		.uleb128 0x3
 2565 002d 0E       		.uleb128 0xe
 2566 002e 3A       		.uleb128 0x3a
 2567 002f 0B       		.uleb128 0xb
 2568 0030 3B       		.uleb128 0x3b
 2569 0031 05       		.uleb128 0x5
 2570 0032 49       		.uleb128 0x49
 2571 0033 13       		.uleb128 0x13
 2572 0034 00       		.byte	0
 2573 0035 00       		.byte	0
 2574 0036 05       		.uleb128 0x5
 2575 0037 35       		.uleb128 0x35
 2576 0038 00       		.byte	0
 2577 0039 49       		.uleb128 0x49
 2578 003a 13       		.uleb128 0x13
 2579 003b 00       		.byte	0
 2580 003c 00       		.byte	0
 2581 003d 06       		.uleb128 0x6
 2582 003e 2E       		.uleb128 0x2e
 2583 003f 01       		.byte	0x1
 2584 0040 3F       		.uleb128 0x3f
 2585 0041 19       		.uleb128 0x19
 2586 0042 03       		.uleb128 0x3
 2587 0043 0E       		.uleb128 0xe
 2588 0044 3A       		.uleb128 0x3a
 2589 0045 0B       		.uleb128 0xb
 2590 0046 3B       		.uleb128 0x3b
 2591 0047 05       		.uleb128 0x5
 2592 0048 27       		.uleb128 0x27
 2593 0049 19       		.uleb128 0x19
 2594 004a 11       		.uleb128 0x11
 2595 004b 01       		.uleb128 0x1
 2596 004c 12       		.uleb128 0x12
 2597 004d 06       		.uleb128 0x6
 2598 004e 40       		.uleb128 0x40
 2599 004f 18       		.uleb128 0x18
 2600 0050 9742     		.uleb128 0x2117
 2601 0052 19       		.uleb128 0x19
 2602 0053 01       		.uleb128 0x1
 2603 0054 13       		.uleb128 0x13
 2604 0055 00       		.byte	0
 2605 0056 00       		.byte	0
 2606 0057 07       		.uleb128 0x7
 2607 0058 34       		.uleb128 0x34
 2608 0059 00       		.byte	0
 2609 005a 03       		.uleb128 0x3
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 72


 2610 005b 0E       		.uleb128 0xe
 2611 005c 3A       		.uleb128 0x3a
 2612 005d 0B       		.uleb128 0xb
 2613 005e 3B       		.uleb128 0x3b
 2614 005f 05       		.uleb128 0x5
 2615 0060 49       		.uleb128 0x49
 2616 0061 13       		.uleb128 0x13
 2617 0062 02       		.uleb128 0x2
 2618 0063 17       		.uleb128 0x17
 2619 0064 00       		.byte	0
 2620 0065 00       		.byte	0
 2621 0066 08       		.uleb128 0x8
 2622 0067 898201   		.uleb128 0x4109
 2623 006a 00       		.byte	0
 2624 006b 11       		.uleb128 0x11
 2625 006c 01       		.uleb128 0x1
 2626 006d 31       		.uleb128 0x31
 2627 006e 13       		.uleb128 0x13
 2628 006f 00       		.byte	0
 2629 0070 00       		.byte	0
 2630 0071 09       		.uleb128 0x9
 2631 0072 05       		.uleb128 0x5
 2632 0073 00       		.byte	0
 2633 0074 03       		.uleb128 0x3
 2634 0075 0E       		.uleb128 0xe
 2635 0076 3A       		.uleb128 0x3a
 2636 0077 0B       		.uleb128 0xb
 2637 0078 3B       		.uleb128 0x3b
 2638 0079 05       		.uleb128 0x5
 2639 007a 49       		.uleb128 0x49
 2640 007b 13       		.uleb128 0x13
 2641 007c 02       		.uleb128 0x2
 2642 007d 17       		.uleb128 0x17
 2643 007e 00       		.byte	0
 2644 007f 00       		.byte	0
 2645 0080 0A       		.uleb128 0xa
 2646 0081 2E       		.uleb128 0x2e
 2647 0082 00       		.byte	0
 2648 0083 3F       		.uleb128 0x3f
 2649 0084 19       		.uleb128 0x19
 2650 0085 03       		.uleb128 0x3
 2651 0086 0E       		.uleb128 0xe
 2652 0087 3A       		.uleb128 0x3a
 2653 0088 0B       		.uleb128 0xb
 2654 0089 3B       		.uleb128 0x3b
 2655 008a 05       		.uleb128 0x5
 2656 008b 27       		.uleb128 0x27
 2657 008c 19       		.uleb128 0x19
 2658 008d 49       		.uleb128 0x49
 2659 008e 13       		.uleb128 0x13
 2660 008f 11       		.uleb128 0x11
 2661 0090 01       		.uleb128 0x1
 2662 0091 12       		.uleb128 0x12
 2663 0092 06       		.uleb128 0x6
 2664 0093 40       		.uleb128 0x40
 2665 0094 18       		.uleb128 0x18
 2666 0095 9742     		.uleb128 0x2117
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 73


 2667 0097 19       		.uleb128 0x19
 2668 0098 00       		.byte	0
 2669 0099 00       		.byte	0
 2670 009a 0B       		.uleb128 0xb
 2671 009b 2E       		.uleb128 0x2e
 2672 009c 01       		.byte	0x1
 2673 009d 3F       		.uleb128 0x3f
 2674 009e 19       		.uleb128 0x19
 2675 009f 03       		.uleb128 0x3
 2676 00a0 0E       		.uleb128 0xe
 2677 00a1 3A       		.uleb128 0x3a
 2678 00a2 0B       		.uleb128 0xb
 2679 00a3 3B       		.uleb128 0x3b
 2680 00a4 0B       		.uleb128 0xb
 2681 00a5 27       		.uleb128 0x27
 2682 00a6 19       		.uleb128 0x19
 2683 00a7 11       		.uleb128 0x11
 2684 00a8 01       		.uleb128 0x1
 2685 00a9 12       		.uleb128 0x12
 2686 00aa 06       		.uleb128 0x6
 2687 00ab 40       		.uleb128 0x40
 2688 00ac 18       		.uleb128 0x18
 2689 00ad 9742     		.uleb128 0x2117
 2690 00af 19       		.uleb128 0x19
 2691 00b0 01       		.uleb128 0x1
 2692 00b1 13       		.uleb128 0x13
 2693 00b2 00       		.byte	0
 2694 00b3 00       		.byte	0
 2695 00b4 0C       		.uleb128 0xc
 2696 00b5 34       		.uleb128 0x34
 2697 00b6 00       		.byte	0
 2698 00b7 03       		.uleb128 0x3
 2699 00b8 0E       		.uleb128 0xe
 2700 00b9 3A       		.uleb128 0x3a
 2701 00ba 0B       		.uleb128 0xb
 2702 00bb 3B       		.uleb128 0x3b
 2703 00bc 0B       		.uleb128 0xb
 2704 00bd 49       		.uleb128 0x49
 2705 00be 13       		.uleb128 0x13
 2706 00bf 02       		.uleb128 0x2
 2707 00c0 17       		.uleb128 0x17
 2708 00c1 00       		.byte	0
 2709 00c2 00       		.byte	0
 2710 00c3 0D       		.uleb128 0xd
 2711 00c4 898201   		.uleb128 0x4109
 2712 00c7 01       		.byte	0x1
 2713 00c8 11       		.uleb128 0x11
 2714 00c9 01       		.uleb128 0x1
 2715 00ca 31       		.uleb128 0x31
 2716 00cb 13       		.uleb128 0x13
 2717 00cc 00       		.byte	0
 2718 00cd 00       		.byte	0
 2719 00ce 0E       		.uleb128 0xe
 2720 00cf 8A8201   		.uleb128 0x410a
 2721 00d2 00       		.byte	0
 2722 00d3 02       		.uleb128 0x2
 2723 00d4 18       		.uleb128 0x18
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 74


 2724 00d5 9142     		.uleb128 0x2111
 2725 00d7 18       		.uleb128 0x18
 2726 00d8 00       		.byte	0
 2727 00d9 00       		.byte	0
 2728 00da 0F       		.uleb128 0xf
 2729 00db 05       		.uleb128 0x5
 2730 00dc 00       		.byte	0
 2731 00dd 03       		.uleb128 0x3
 2732 00de 0E       		.uleb128 0xe
 2733 00df 3A       		.uleb128 0x3a
 2734 00e0 0B       		.uleb128 0xb
 2735 00e1 3B       		.uleb128 0x3b
 2736 00e2 05       		.uleb128 0x5
 2737 00e3 49       		.uleb128 0x49
 2738 00e4 13       		.uleb128 0x13
 2739 00e5 02       		.uleb128 0x2
 2740 00e6 18       		.uleb128 0x18
 2741 00e7 00       		.byte	0
 2742 00e8 00       		.byte	0
 2743 00e9 10       		.uleb128 0x10
 2744 00ea 898201   		.uleb128 0x4109
 2745 00ed 01       		.byte	0x1
 2746 00ee 11       		.uleb128 0x11
 2747 00ef 01       		.uleb128 0x1
 2748 00f0 31       		.uleb128 0x31
 2749 00f1 13       		.uleb128 0x13
 2750 00f2 01       		.uleb128 0x1
 2751 00f3 13       		.uleb128 0x13
 2752 00f4 00       		.byte	0
 2753 00f5 00       		.byte	0
 2754 00f6 11       		.uleb128 0x11
 2755 00f7 34       		.uleb128 0x34
 2756 00f8 00       		.byte	0
 2757 00f9 03       		.uleb128 0x3
 2758 00fa 0E       		.uleb128 0xe
 2759 00fb 3A       		.uleb128 0x3a
 2760 00fc 0B       		.uleb128 0xb
 2761 00fd 3B       		.uleb128 0x3b
 2762 00fe 0B       		.uleb128 0xb
 2763 00ff 49       		.uleb128 0x49
 2764 0100 13       		.uleb128 0x13
 2765 0101 3F       		.uleb128 0x3f
 2766 0102 19       		.uleb128 0x19
 2767 0103 02       		.uleb128 0x2
 2768 0104 18       		.uleb128 0x18
 2769 0105 00       		.byte	0
 2770 0106 00       		.byte	0
 2771 0107 12       		.uleb128 0x12
 2772 0108 2E       		.uleb128 0x2e
 2773 0109 00       		.byte	0
 2774 010a 3F       		.uleb128 0x3f
 2775 010b 19       		.uleb128 0x19
 2776 010c 3C       		.uleb128 0x3c
 2777 010d 19       		.uleb128 0x19
 2778 010e 6E       		.uleb128 0x6e
 2779 010f 0E       		.uleb128 0xe
 2780 0110 03       		.uleb128 0x3
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 75


 2781 0111 0E       		.uleb128 0xe
 2782 0112 3A       		.uleb128 0x3a
 2783 0113 0B       		.uleb128 0xb
 2784 0114 3B       		.uleb128 0x3b
 2785 0115 0B       		.uleb128 0xb
 2786 0116 00       		.byte	0
 2787 0117 00       		.byte	0
 2788 0118 00       		.byte	0
 2789              		.section	.debug_loc,"",%progbits
 2790              	.Ldebug_loc0:
 2791              	.LLST0:
 2792 0000 06000000 		.4byte	.LVL0
 2793 0004 13000000 		.4byte	.LVL1-1
 2794 0008 0100     		.2byte	0x1
 2795 000a 50       		.byte	0x50
 2796 000b 00000000 		.4byte	0
 2797 000f 00000000 		.4byte	0
 2798              	.LLST1:
 2799 0013 00000000 		.4byte	.LVL2
 2800 0017 07000000 		.4byte	.LVL3-1
 2801 001b 0100     		.2byte	0x1
 2802 001d 50       		.byte	0x50
 2803 001e 07000000 		.4byte	.LVL3-1
 2804 0022 16000000 		.4byte	.LVL4
 2805 0026 0100     		.2byte	0x1
 2806 0028 54       		.byte	0x54
 2807 0029 16000000 		.4byte	.LVL4
 2808 002d 28000000 		.4byte	.LFE4
 2809 0031 0400     		.2byte	0x4
 2810 0033 F3       		.byte	0xf3
 2811 0034 01       		.uleb128 0x1
 2812 0035 50       		.byte	0x50
 2813 0036 9F       		.byte	0x9f
 2814 0037 00000000 		.4byte	0
 2815 003b 00000000 		.4byte	0
 2816              	.LLST2:
 2817 003f 08000000 		.4byte	.LVL3
 2818 0043 1B000000 		.4byte	.LVL5-1
 2819 0047 0100     		.2byte	0x1
 2820 0049 50       		.byte	0x50
 2821 004a 00000000 		.4byte	0
 2822 004e 00000000 		.4byte	0
 2823              	.LLST3:
 2824 0052 00000000 		.4byte	.LVL6
 2825 0056 07000000 		.4byte	.LVL7-1
 2826 005a 0100     		.2byte	0x1
 2827 005c 50       		.byte	0x50
 2828 005d 07000000 		.4byte	.LVL7-1
 2829 0061 16000000 		.4byte	.LVL8
 2830 0065 0100     		.2byte	0x1
 2831 0067 54       		.byte	0x54
 2832 0068 16000000 		.4byte	.LVL8
 2833 006c 28000000 		.4byte	.LFE5
 2834 0070 0400     		.2byte	0x4
 2835 0072 F3       		.byte	0xf3
 2836 0073 01       		.uleb128 0x1
 2837 0074 50       		.byte	0x50
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 76


 2838 0075 9F       		.byte	0x9f
 2839 0076 00000000 		.4byte	0
 2840 007a 00000000 		.4byte	0
 2841              	.LLST4:
 2842 007e 08000000 		.4byte	.LVL7
 2843 0082 1B000000 		.4byte	.LVL9-1
 2844 0086 0100     		.2byte	0x1
 2845 0088 50       		.byte	0x50
 2846 0089 00000000 		.4byte	0
 2847 008d 00000000 		.4byte	0
 2848              	.LLST5:
 2849 0091 00000000 		.4byte	.LVL10
 2850 0095 07000000 		.4byte	.LVL11-1
 2851 0099 0100     		.2byte	0x1
 2852 009b 50       		.byte	0x50
 2853 009c 07000000 		.4byte	.LVL11-1
 2854 00a0 16000000 		.4byte	.LVL12
 2855 00a4 0100     		.2byte	0x1
 2856 00a6 54       		.byte	0x54
 2857 00a7 16000000 		.4byte	.LVL12
 2858 00ab 28000000 		.4byte	.LFE6
 2859 00af 0400     		.2byte	0x4
 2860 00b1 F3       		.byte	0xf3
 2861 00b2 01       		.uleb128 0x1
 2862 00b3 50       		.byte	0x50
 2863 00b4 9F       		.byte	0x9f
 2864 00b5 00000000 		.4byte	0
 2865 00b9 00000000 		.4byte	0
 2866              	.LLST6:
 2867 00bd 08000000 		.4byte	.LVL11
 2868 00c1 1B000000 		.4byte	.LVL13-1
 2869 00c5 0100     		.2byte	0x1
 2870 00c7 50       		.byte	0x50
 2871 00c8 00000000 		.4byte	0
 2872 00cc 00000000 		.4byte	0
 2873              	.LLST7:
 2874 00d0 00000000 		.4byte	.LVL14
 2875 00d4 07000000 		.4byte	.LVL15-1
 2876 00d8 0100     		.2byte	0x1
 2877 00da 50       		.byte	0x50
 2878 00db 07000000 		.4byte	.LVL15-1
 2879 00df 24000000 		.4byte	.LVL17
 2880 00e3 0100     		.2byte	0x1
 2881 00e5 54       		.byte	0x54
 2882 00e6 24000000 		.4byte	.LVL17
 2883 00ea 30000000 		.4byte	.LFE7
 2884 00ee 0400     		.2byte	0x4
 2885 00f0 F3       		.byte	0xf3
 2886 00f1 01       		.uleb128 0x1
 2887 00f2 50       		.byte	0x50
 2888 00f3 9F       		.byte	0x9f
 2889 00f4 00000000 		.4byte	0
 2890 00f8 00000000 		.4byte	0
 2891              	.LLST8:
 2892 00fc 08000000 		.4byte	.LVL15
 2893 0100 23000000 		.4byte	.LVL16-1
 2894 0104 0100     		.2byte	0x1
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 77


 2895 0106 50       		.byte	0x50
 2896 0107 00000000 		.4byte	0
 2897 010b 00000000 		.4byte	0
 2898              	.LLST9:
 2899 010f 00000000 		.4byte	.LVL18
 2900 0113 04000000 		.4byte	.LVL19
 2901 0117 0100     		.2byte	0x1
 2902 0119 50       		.byte	0x50
 2903 011a 04000000 		.4byte	.LVL19
 2904 011e 10000000 		.4byte	.LFE8
 2905 0122 0400     		.2byte	0x4
 2906 0124 F3       		.byte	0xf3
 2907 0125 01       		.uleb128 0x1
 2908 0126 50       		.byte	0x50
 2909 0127 9F       		.byte	0x9f
 2910 0128 00000000 		.4byte	0
 2911 012c 00000000 		.4byte	0
 2912              	.LLST10:
 2913 0130 00000000 		.4byte	.LVL20
 2914 0134 07000000 		.4byte	.LVL21-1
 2915 0138 0100     		.2byte	0x1
 2916 013a 50       		.byte	0x50
 2917 013b 07000000 		.4byte	.LVL21-1
 2918 013f 1A000000 		.4byte	.LVL22
 2919 0143 0100     		.2byte	0x1
 2920 0145 54       		.byte	0x54
 2921 0146 1A000000 		.4byte	.LVL22
 2922 014a 28000000 		.4byte	.LFE9
 2923 014e 0400     		.2byte	0x4
 2924 0150 F3       		.byte	0xf3
 2925 0151 01       		.uleb128 0x1
 2926 0152 50       		.byte	0x50
 2927 0153 9F       		.byte	0x9f
 2928 0154 00000000 		.4byte	0
 2929 0158 00000000 		.4byte	0
 2930              	.LLST11:
 2931 015c 08000000 		.4byte	.LVL21
 2932 0160 21000000 		.4byte	.LVL23-1
 2933 0164 0100     		.2byte	0x1
 2934 0166 50       		.byte	0x50
 2935 0167 00000000 		.4byte	0
 2936 016b 00000000 		.4byte	0
 2937              	.LLST12:
 2938 016f 00000000 		.4byte	.LVL24
 2939 0173 07000000 		.4byte	.LVL25-1
 2940 0177 0100     		.2byte	0x1
 2941 0179 50       		.byte	0x50
 2942 017a 07000000 		.4byte	.LVL25-1
 2943 017e 1A000000 		.4byte	.LVL26
 2944 0182 0100     		.2byte	0x1
 2945 0184 54       		.byte	0x54
 2946 0185 1A000000 		.4byte	.LVL26
 2947 0189 28000000 		.4byte	.LFE10
 2948 018d 0400     		.2byte	0x4
 2949 018f F3       		.byte	0xf3
 2950 0190 01       		.uleb128 0x1
 2951 0191 50       		.byte	0x50
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 78


 2952 0192 9F       		.byte	0x9f
 2953 0193 00000000 		.4byte	0
 2954 0197 00000000 		.4byte	0
 2955              	.LLST13:
 2956 019b 08000000 		.4byte	.LVL25
 2957 019f 21000000 		.4byte	.LVL27-1
 2958 01a3 0100     		.2byte	0x1
 2959 01a5 50       		.byte	0x50
 2960 01a6 00000000 		.4byte	0
 2961 01aa 00000000 		.4byte	0
 2962              	.LLST14:
 2963 01ae 00000000 		.4byte	.LVL28
 2964 01b2 07000000 		.4byte	.LVL29-1
 2965 01b6 0100     		.2byte	0x1
 2966 01b8 50       		.byte	0x50
 2967 01b9 07000000 		.4byte	.LVL29-1
 2968 01bd 16000000 		.4byte	.LVL30
 2969 01c1 0100     		.2byte	0x1
 2970 01c3 54       		.byte	0x54
 2971 01c4 16000000 		.4byte	.LVL30
 2972 01c8 2C000000 		.4byte	.LFE11
 2973 01cc 0400     		.2byte	0x4
 2974 01ce F3       		.byte	0xf3
 2975 01cf 01       		.uleb128 0x1
 2976 01d0 50       		.byte	0x50
 2977 01d1 9F       		.byte	0x9f
 2978 01d2 00000000 		.4byte	0
 2979 01d6 00000000 		.4byte	0
 2980              	.LLST15:
 2981 01da 08000000 		.4byte	.LVL29
 2982 01de 1F000000 		.4byte	.LVL31-1
 2983 01e2 0100     		.2byte	0x1
 2984 01e4 50       		.byte	0x50
 2985 01e5 00000000 		.4byte	0
 2986 01e9 00000000 		.4byte	0
 2987              	.LLST16:
 2988 01ed 00000000 		.4byte	.LVL32
 2989 01f1 07000000 		.4byte	.LVL33-1
 2990 01f5 0100     		.2byte	0x1
 2991 01f7 50       		.byte	0x50
 2992 01f8 07000000 		.4byte	.LVL33-1
 2993 01fc 16000000 		.4byte	.LVL34
 2994 0200 0100     		.2byte	0x1
 2995 0202 54       		.byte	0x54
 2996 0203 16000000 		.4byte	.LVL34
 2997 0207 28000000 		.4byte	.LFE12
 2998 020b 0400     		.2byte	0x4
 2999 020d F3       		.byte	0xf3
 3000 020e 01       		.uleb128 0x1
 3001 020f 50       		.byte	0x50
 3002 0210 9F       		.byte	0x9f
 3003 0211 00000000 		.4byte	0
 3004 0215 00000000 		.4byte	0
 3005              	.LLST17:
 3006 0219 08000000 		.4byte	.LVL33
 3007 021d 1B000000 		.4byte	.LVL35-1
 3008 0221 0100     		.2byte	0x1
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 79


 3009 0223 50       		.byte	0x50
 3010 0224 00000000 		.4byte	0
 3011 0228 00000000 		.4byte	0
 3012              	.LLST18:
 3013 022c 00000000 		.4byte	.LVL36
 3014 0230 02000000 		.4byte	.LVL37
 3015 0234 0100     		.2byte	0x1
 3016 0236 50       		.byte	0x50
 3017 0237 02000000 		.4byte	.LVL37
 3018 023b 10000000 		.4byte	.LFE13
 3019 023f 0400     		.2byte	0x4
 3020 0241 F3       		.byte	0xf3
 3021 0242 01       		.uleb128 0x1
 3022 0243 50       		.byte	0x50
 3023 0244 9F       		.byte	0x9f
 3024 0245 00000000 		.4byte	0
 3025 0249 00000000 		.4byte	0
 3026              	.LLST19:
 3027 024d 00000000 		.4byte	.LVL38
 3028 0251 07000000 		.4byte	.LVL39-1
 3029 0255 0100     		.2byte	0x1
 3030 0257 50       		.byte	0x50
 3031 0258 07000000 		.4byte	.LVL39-1
 3032 025c 16000000 		.4byte	.LVL40
 3033 0260 0100     		.2byte	0x1
 3034 0262 54       		.byte	0x54
 3035 0263 16000000 		.4byte	.LVL40
 3036 0267 28000000 		.4byte	.LFE15
 3037 026b 0400     		.2byte	0x4
 3038 026d F3       		.byte	0xf3
 3039 026e 01       		.uleb128 0x1
 3040 026f 50       		.byte	0x50
 3041 0270 9F       		.byte	0x9f
 3042 0271 00000000 		.4byte	0
 3043 0275 00000000 		.4byte	0
 3044              	.LLST20:
 3045 0279 08000000 		.4byte	.LVL39
 3046 027d 1B000000 		.4byte	.LVL41-1
 3047 0281 0100     		.2byte	0x1
 3048 0283 50       		.byte	0x50
 3049 0284 00000000 		.4byte	0
 3050 0288 00000000 		.4byte	0
 3051              	.LLST21:
 3052 028c 00000000 		.4byte	.LVL42
 3053 0290 02000000 		.4byte	.LVL43
 3054 0294 0100     		.2byte	0x1
 3055 0296 50       		.byte	0x50
 3056 0297 02000000 		.4byte	.LVL43
 3057 029b 10000000 		.4byte	.LFE16
 3058 029f 0400     		.2byte	0x4
 3059 02a1 F3       		.byte	0xf3
 3060 02a2 01       		.uleb128 0x1
 3061 02a3 50       		.byte	0x50
 3062 02a4 9F       		.byte	0x9f
 3063 02a5 00000000 		.4byte	0
 3064 02a9 00000000 		.4byte	0
 3065              	.LLST22:
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 80


 3066 02ad 00000000 		.4byte	.LVL44
 3067 02b1 07000000 		.4byte	.LVL45-1
 3068 02b5 0100     		.2byte	0x1
 3069 02b7 50       		.byte	0x50
 3070 02b8 07000000 		.4byte	.LVL45-1
 3071 02bc 16000000 		.4byte	.LVL46
 3072 02c0 0100     		.2byte	0x1
 3073 02c2 54       		.byte	0x54
 3074 02c3 16000000 		.4byte	.LVL46
 3075 02c7 24000000 		.4byte	.LFE18
 3076 02cb 0400     		.2byte	0x4
 3077 02cd F3       		.byte	0xf3
 3078 02ce 01       		.uleb128 0x1
 3079 02cf 50       		.byte	0x50
 3080 02d0 9F       		.byte	0x9f
 3081 02d1 00000000 		.4byte	0
 3082 02d5 00000000 		.4byte	0
 3083              	.LLST23:
 3084 02d9 08000000 		.4byte	.LVL45
 3085 02dd 1D000000 		.4byte	.LVL47-1
 3086 02e1 0100     		.2byte	0x1
 3087 02e3 50       		.byte	0x50
 3088 02e4 00000000 		.4byte	0
 3089 02e8 00000000 		.4byte	0
 3090              	.LLST24:
 3091 02ec 00000000 		.4byte	.LVL48
 3092 02f0 02000000 		.4byte	.LVL49
 3093 02f4 0100     		.2byte	0x1
 3094 02f6 50       		.byte	0x50
 3095 02f7 02000000 		.4byte	.LVL49
 3096 02fb 10000000 		.4byte	.LFE19
 3097 02ff 0400     		.2byte	0x4
 3098 0301 F3       		.byte	0xf3
 3099 0302 01       		.uleb128 0x1
 3100 0303 50       		.byte	0x50
 3101 0304 9F       		.byte	0x9f
 3102 0305 00000000 		.4byte	0
 3103 0309 00000000 		.4byte	0
 3104              	.LLST25:
 3105 030d 00000000 		.4byte	.LVL50
 3106 0311 07000000 		.4byte	.LVL51-1
 3107 0315 0100     		.2byte	0x1
 3108 0317 50       		.byte	0x50
 3109 0318 07000000 		.4byte	.LVL51-1
 3110 031c 1A000000 		.4byte	.LVL52
 3111 0320 0100     		.2byte	0x1
 3112 0322 54       		.byte	0x54
 3113 0323 1A000000 		.4byte	.LVL52
 3114 0327 28000000 		.4byte	.LFE21
 3115 032b 0400     		.2byte	0x4
 3116 032d F3       		.byte	0xf3
 3117 032e 01       		.uleb128 0x1
 3118 032f 50       		.byte	0x50
 3119 0330 9F       		.byte	0x9f
 3120 0331 00000000 		.4byte	0
 3121 0335 00000000 		.4byte	0
 3122              	.LLST26:
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 81


 3123 0339 08000000 		.4byte	.LVL51
 3124 033d 21000000 		.4byte	.LVL53-1
 3125 0341 0100     		.2byte	0x1
 3126 0343 50       		.byte	0x50
 3127 0344 00000000 		.4byte	0
 3128 0348 00000000 		.4byte	0
 3129              	.LLST27:
 3130 034c 00000000 		.4byte	.LVL54
 3131 0350 02000000 		.4byte	.LVL55
 3132 0354 0100     		.2byte	0x1
 3133 0356 50       		.byte	0x50
 3134 0357 02000000 		.4byte	.LVL55
 3135 035b 10000000 		.4byte	.LFE22
 3136 035f 0400     		.2byte	0x4
 3137 0361 F3       		.byte	0xf3
 3138 0362 01       		.uleb128 0x1
 3139 0363 50       		.byte	0x50
 3140 0364 9F       		.byte	0x9f
 3141 0365 00000000 		.4byte	0
 3142 0369 00000000 		.4byte	0
 3143              	.LLST28:
 3144 036d 00000000 		.4byte	.LVL56
 3145 0371 02000000 		.4byte	.LVL57
 3146 0375 0100     		.2byte	0x1
 3147 0377 50       		.byte	0x50
 3148 0378 02000000 		.4byte	.LVL57
 3149 037c 10000000 		.4byte	.LFE24
 3150 0380 0400     		.2byte	0x4
 3151 0382 F3       		.byte	0xf3
 3152 0383 01       		.uleb128 0x1
 3153 0384 50       		.byte	0x50
 3154 0385 9F       		.byte	0x9f
 3155 0386 00000000 		.4byte	0
 3156 038a 00000000 		.4byte	0
 3157              	.LLST29:
 3158 038e 00000000 		.4byte	.LVL58
 3159 0392 07000000 		.4byte	.LVL59-1
 3160 0396 0100     		.2byte	0x1
 3161 0398 50       		.byte	0x50
 3162 0399 07000000 		.4byte	.LVL59-1
 3163 039d 16000000 		.4byte	.LVL60
 3164 03a1 0100     		.2byte	0x1
 3165 03a3 54       		.byte	0x54
 3166 03a4 16000000 		.4byte	.LVL60
 3167 03a8 24000000 		.4byte	.LFE28
 3168 03ac 0400     		.2byte	0x4
 3169 03ae F3       		.byte	0xf3
 3170 03af 01       		.uleb128 0x1
 3171 03b0 50       		.byte	0x50
 3172 03b1 9F       		.byte	0x9f
 3173 03b2 00000000 		.4byte	0
 3174 03b6 00000000 		.4byte	0
 3175              	.LLST30:
 3176 03ba 08000000 		.4byte	.LVL59
 3177 03be 1B000000 		.4byte	.LVL61-1
 3178 03c2 0100     		.2byte	0x1
 3179 03c4 50       		.byte	0x50
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 82


 3180 03c5 00000000 		.4byte	0
 3181 03c9 00000000 		.4byte	0
 3182              	.LLST31:
 3183 03cd 00000000 		.4byte	.LVL62
 3184 03d1 07000000 		.4byte	.LVL63-1
 3185 03d5 0100     		.2byte	0x1
 3186 03d7 50       		.byte	0x50
 3187 03d8 07000000 		.4byte	.LVL63-1
 3188 03dc 16000000 		.4byte	.LVL64
 3189 03e0 0100     		.2byte	0x1
 3190 03e2 54       		.byte	0x54
 3191 03e3 16000000 		.4byte	.LVL64
 3192 03e7 24000000 		.4byte	.LFE29
 3193 03eb 0400     		.2byte	0x4
 3194 03ed F3       		.byte	0xf3
 3195 03ee 01       		.uleb128 0x1
 3196 03ef 50       		.byte	0x50
 3197 03f0 9F       		.byte	0x9f
 3198 03f1 00000000 		.4byte	0
 3199 03f5 00000000 		.4byte	0
 3200              	.LLST32:
 3201 03f9 08000000 		.4byte	.LVL63
 3202 03fd 1D000000 		.4byte	.LVL65-1
 3203 0401 0100     		.2byte	0x1
 3204 0403 50       		.byte	0x50
 3205 0404 00000000 		.4byte	0
 3206 0408 00000000 		.4byte	0
 3207              	.LLST33:
 3208 040c 00000000 		.4byte	.LVL66
 3209 0410 07000000 		.4byte	.LVL67-1
 3210 0414 0100     		.2byte	0x1
 3211 0416 50       		.byte	0x50
 3212 0417 07000000 		.4byte	.LVL67-1
 3213 041b 16000000 		.4byte	.LVL68
 3214 041f 0100     		.2byte	0x1
 3215 0421 54       		.byte	0x54
 3216 0422 16000000 		.4byte	.LVL68
 3217 0426 28000000 		.4byte	.LFE30
 3218 042a 0400     		.2byte	0x4
 3219 042c F3       		.byte	0xf3
 3220 042d 01       		.uleb128 0x1
 3221 042e 50       		.byte	0x50
 3222 042f 9F       		.byte	0x9f
 3223 0430 00000000 		.4byte	0
 3224 0434 00000000 		.4byte	0
 3225              	.LLST34:
 3226 0438 08000000 		.4byte	.LVL67
 3227 043c 1D000000 		.4byte	.LVL69-1
 3228 0440 0100     		.2byte	0x1
 3229 0442 50       		.byte	0x50
 3230 0443 00000000 		.4byte	0
 3231 0447 00000000 		.4byte	0
 3232              	.LLST35:
 3233 044b 00000000 		.4byte	.LVL70
 3234 044f 07000000 		.4byte	.LVL71-1
 3235 0453 0100     		.2byte	0x1
 3236 0455 50       		.byte	0x50
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 83


 3237 0456 07000000 		.4byte	.LVL71-1
 3238 045a 16000000 		.4byte	.LVL72
 3239 045e 0100     		.2byte	0x1
 3240 0460 54       		.byte	0x54
 3241 0461 16000000 		.4byte	.LVL72
 3242 0465 24000000 		.4byte	.LFE31
 3243 0469 0400     		.2byte	0x4
 3244 046b F3       		.byte	0xf3
 3245 046c 01       		.uleb128 0x1
 3246 046d 50       		.byte	0x50
 3247 046e 9F       		.byte	0x9f
 3248 046f 00000000 		.4byte	0
 3249 0473 00000000 		.4byte	0
 3250              	.LLST36:
 3251 0477 08000000 		.4byte	.LVL71
 3252 047b 1D000000 		.4byte	.LVL73-1
 3253 047f 0100     		.2byte	0x1
 3254 0481 50       		.byte	0x50
 3255 0482 00000000 		.4byte	0
 3256 0486 00000000 		.4byte	0
 3257              	.LLST37:
 3258 048a 00000000 		.4byte	.LVL74
 3259 048e 07000000 		.4byte	.LVL75-1
 3260 0492 0100     		.2byte	0x1
 3261 0494 50       		.byte	0x50
 3262 0495 07000000 		.4byte	.LVL75-1
 3263 0499 16000000 		.4byte	.LVL76
 3264 049d 0100     		.2byte	0x1
 3265 049f 54       		.byte	0x54
 3266 04a0 16000000 		.4byte	.LVL76
 3267 04a4 24000000 		.4byte	.LFE32
 3268 04a8 0400     		.2byte	0x4
 3269 04aa F3       		.byte	0xf3
 3270 04ab 01       		.uleb128 0x1
 3271 04ac 50       		.byte	0x50
 3272 04ad 9F       		.byte	0x9f
 3273 04ae 00000000 		.4byte	0
 3274 04b2 00000000 		.4byte	0
 3275              	.LLST38:
 3276 04b6 08000000 		.4byte	.LVL75
 3277 04ba 1D000000 		.4byte	.LVL77-1
 3278 04be 0100     		.2byte	0x1
 3279 04c0 50       		.byte	0x50
 3280 04c1 00000000 		.4byte	0
 3281 04c5 00000000 		.4byte	0
 3282              	.LLST39:
 3283 04c9 00000000 		.4byte	.LVL78
 3284 04cd 09000000 		.4byte	.LVL79-1
 3285 04d1 0100     		.2byte	0x1
 3286 04d3 50       		.byte	0x50
 3287 04d4 09000000 		.4byte	.LVL79-1
 3288 04d8 0C000000 		.4byte	.LVL80
 3289 04dc 0100     		.2byte	0x1
 3290 04de 54       		.byte	0x54
 3291 04df 0C000000 		.4byte	.LVL80
 3292 04e3 1C000000 		.4byte	.LFE33
 3293 04e7 0400     		.2byte	0x4
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 84


 3294 04e9 F3       		.byte	0xf3
 3295 04ea 01       		.uleb128 0x1
 3296 04eb 50       		.byte	0x50
 3297 04ec 9F       		.byte	0x9f
 3298 04ed 00000000 		.4byte	0
 3299 04f1 00000000 		.4byte	0
 3300              	.LLST40:
 3301 04f5 00000000 		.4byte	.LVL78
 3302 04f9 09000000 		.4byte	.LVL79-1
 3303 04fd 0100     		.2byte	0x1
 3304 04ff 51       		.byte	0x51
 3305 0500 09000000 		.4byte	.LVL79-1
 3306 0504 14000000 		.4byte	.LVL82
 3307 0508 0100     		.2byte	0x1
 3308 050a 55       		.byte	0x55
 3309 050b 14000000 		.4byte	.LVL82
 3310 050f 1C000000 		.4byte	.LFE33
 3311 0513 0400     		.2byte	0x4
 3312 0515 F3       		.byte	0xf3
 3313 0516 01       		.uleb128 0x1
 3314 0517 51       		.byte	0x51
 3315 0518 9F       		.byte	0x9f
 3316 0519 00000000 		.4byte	0
 3317 051d 00000000 		.4byte	0
 3318              	.LLST41:
 3319 0521 0A000000 		.4byte	.LVL79
 3320 0525 13000000 		.4byte	.LVL81-1
 3321 0529 0100     		.2byte	0x1
 3322 052b 50       		.byte	0x50
 3323 052c 00000000 		.4byte	0
 3324 0530 00000000 		.4byte	0
 3325              	.LLST42:
 3326 0534 06000000 		.4byte	.LVL83
 3327 0538 13000000 		.4byte	.LVL84-1
 3328 053c 0100     		.2byte	0x1
 3329 053e 50       		.byte	0x50
 3330 053f 00000000 		.4byte	0
 3331 0543 00000000 		.4byte	0
 3332              		.section	.debug_aranges,"",%progbits
 3333 0000 54010000 		.4byte	0x154
 3334 0004 0200     		.2byte	0x2
 3335 0006 00000000 		.4byte	.Ldebug_info0
 3336 000a 04       		.byte	0x4
 3337 000b 00       		.byte	0
 3338 000c 0000     		.2byte	0
 3339 000e 0000     		.2byte	0
 3340 0010 00000000 		.4byte	.LFB3
 3341 0014 1C000000 		.4byte	.LFE3-.LFB3
 3342 0018 00000000 		.4byte	.LFB4
 3343 001c 28000000 		.4byte	.LFE4-.LFB4
 3344 0020 00000000 		.4byte	.LFB5
 3345 0024 28000000 		.4byte	.LFE5-.LFB5
 3346 0028 00000000 		.4byte	.LFB6
 3347 002c 28000000 		.4byte	.LFE6-.LFB6
 3348 0030 00000000 		.4byte	.LFB7
 3349 0034 30000000 		.4byte	.LFE7-.LFB7
 3350 0038 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 85


 3351 003c 10000000 		.4byte	.LFE8-.LFB8
 3352 0040 00000000 		.4byte	.LFB9
 3353 0044 28000000 		.4byte	.LFE9-.LFB9
 3354 0048 00000000 		.4byte	.LFB10
 3355 004c 28000000 		.4byte	.LFE10-.LFB10
 3356 0050 00000000 		.4byte	.LFB11
 3357 0054 2C000000 		.4byte	.LFE11-.LFB11
 3358 0058 00000000 		.4byte	.LFB12
 3359 005c 28000000 		.4byte	.LFE12-.LFB12
 3360 0060 00000000 		.4byte	.LFB13
 3361 0064 10000000 		.4byte	.LFE13-.LFB13
 3362 0068 00000000 		.4byte	.LFB14
 3363 006c 10000000 		.4byte	.LFE14-.LFB14
 3364 0070 00000000 		.4byte	.LFB15
 3365 0074 28000000 		.4byte	.LFE15-.LFB15
 3366 0078 00000000 		.4byte	.LFB16
 3367 007c 10000000 		.4byte	.LFE16-.LFB16
 3368 0080 00000000 		.4byte	.LFB17
 3369 0084 10000000 		.4byte	.LFE17-.LFB17
 3370 0088 00000000 		.4byte	.LFB18
 3371 008c 24000000 		.4byte	.LFE18-.LFB18
 3372 0090 00000000 		.4byte	.LFB19
 3373 0094 10000000 		.4byte	.LFE19-.LFB19
 3374 0098 00000000 		.4byte	.LFB20
 3375 009c 10000000 		.4byte	.LFE20-.LFB20
 3376 00a0 00000000 		.4byte	.LFB21
 3377 00a4 28000000 		.4byte	.LFE21-.LFB21
 3378 00a8 00000000 		.4byte	.LFB22
 3379 00ac 10000000 		.4byte	.LFE22-.LFB22
 3380 00b0 00000000 		.4byte	.LFB23
 3381 00b4 10000000 		.4byte	.LFE23-.LFB23
 3382 00b8 00000000 		.4byte	.LFB24
 3383 00bc 10000000 		.4byte	.LFE24-.LFB24
 3384 00c0 00000000 		.4byte	.LFB25
 3385 00c4 10000000 		.4byte	.LFE25-.LFB25
 3386 00c8 00000000 		.4byte	.LFB26
 3387 00cc 10000000 		.4byte	.LFE26-.LFB26
 3388 00d0 00000000 		.4byte	.LFB27
 3389 00d4 10000000 		.4byte	.LFE27-.LFB27
 3390 00d8 00000000 		.4byte	.LFB28
 3391 00dc 24000000 		.4byte	.LFE28-.LFB28
 3392 00e0 00000000 		.4byte	.LFB29
 3393 00e4 24000000 		.4byte	.LFE29-.LFB29
 3394 00e8 00000000 		.4byte	.LFB30
 3395 00ec 28000000 		.4byte	.LFE30-.LFB30
 3396 00f0 00000000 		.4byte	.LFB31
 3397 00f4 24000000 		.4byte	.LFE31-.LFB31
 3398 00f8 00000000 		.4byte	.LFB32
 3399 00fc 24000000 		.4byte	.LFE32-.LFB32
 3400 0100 00000000 		.4byte	.LFB33
 3401 0104 1C000000 		.4byte	.LFE33-.LFB33
 3402 0108 00000000 		.4byte	.LFB1
 3403 010c 24000000 		.4byte	.LFE1-.LFB1
 3404 0110 00000000 		.4byte	.LFB34
 3405 0114 14000000 		.4byte	.LFE34-.LFB34
 3406 0118 00000000 		.4byte	.LFB35
 3407 011c 0C000000 		.4byte	.LFE35-.LFB35
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 86


 3408 0120 00000000 		.4byte	.LFB0
 3409 0124 54000000 		.4byte	.LFE0-.LFB0
 3410 0128 00000000 		.4byte	.LFB2
 3411 012c 20000000 		.4byte	.LFE2-.LFB2
 3412 0130 00000000 		.4byte	.LFB36
 3413 0134 0C000000 		.4byte	.LFE36-.LFB36
 3414 0138 00000000 		.4byte	.LFB37
 3415 013c 0C000000 		.4byte	.LFE37-.LFB37
 3416 0140 00000000 		.4byte	.LFB38
 3417 0144 0C000000 		.4byte	.LFE38-.LFB38
 3418 0148 00000000 		.4byte	.LFB39
 3419 014c 0C000000 		.4byte	.LFE39-.LFB39
 3420 0150 00000000 		.4byte	0
 3421 0154 00000000 		.4byte	0
 3422              		.section	.debug_ranges,"",%progbits
 3423              	.Ldebug_ranges0:
 3424 0000 00000000 		.4byte	.LFB3
 3425 0004 1C000000 		.4byte	.LFE3
 3426 0008 00000000 		.4byte	.LFB4
 3427 000c 28000000 		.4byte	.LFE4
 3428 0010 00000000 		.4byte	.LFB5
 3429 0014 28000000 		.4byte	.LFE5
 3430 0018 00000000 		.4byte	.LFB6
 3431 001c 28000000 		.4byte	.LFE6
 3432 0020 00000000 		.4byte	.LFB7
 3433 0024 30000000 		.4byte	.LFE7
 3434 0028 00000000 		.4byte	.LFB8
 3435 002c 10000000 		.4byte	.LFE8
 3436 0030 00000000 		.4byte	.LFB9
 3437 0034 28000000 		.4byte	.LFE9
 3438 0038 00000000 		.4byte	.LFB10
 3439 003c 28000000 		.4byte	.LFE10
 3440 0040 00000000 		.4byte	.LFB11
 3441 0044 2C000000 		.4byte	.LFE11
 3442 0048 00000000 		.4byte	.LFB12
 3443 004c 28000000 		.4byte	.LFE12
 3444 0050 00000000 		.4byte	.LFB13
 3445 0054 10000000 		.4byte	.LFE13
 3446 0058 00000000 		.4byte	.LFB14
 3447 005c 10000000 		.4byte	.LFE14
 3448 0060 00000000 		.4byte	.LFB15
 3449 0064 28000000 		.4byte	.LFE15
 3450 0068 00000000 		.4byte	.LFB16
 3451 006c 10000000 		.4byte	.LFE16
 3452 0070 00000000 		.4byte	.LFB17
 3453 0074 10000000 		.4byte	.LFE17
 3454 0078 00000000 		.4byte	.LFB18
 3455 007c 24000000 		.4byte	.LFE18
 3456 0080 00000000 		.4byte	.LFB19
 3457 0084 10000000 		.4byte	.LFE19
 3458 0088 00000000 		.4byte	.LFB20
 3459 008c 10000000 		.4byte	.LFE20
 3460 0090 00000000 		.4byte	.LFB21
 3461 0094 28000000 		.4byte	.LFE21
 3462 0098 00000000 		.4byte	.LFB22
 3463 009c 10000000 		.4byte	.LFE22
 3464 00a0 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 87


 3465 00a4 10000000 		.4byte	.LFE23
 3466 00a8 00000000 		.4byte	.LFB24
 3467 00ac 10000000 		.4byte	.LFE24
 3468 00b0 00000000 		.4byte	.LFB25
 3469 00b4 10000000 		.4byte	.LFE25
 3470 00b8 00000000 		.4byte	.LFB26
 3471 00bc 10000000 		.4byte	.LFE26
 3472 00c0 00000000 		.4byte	.LFB27
 3473 00c4 10000000 		.4byte	.LFE27
 3474 00c8 00000000 		.4byte	.LFB28
 3475 00cc 24000000 		.4byte	.LFE28
 3476 00d0 00000000 		.4byte	.LFB29
 3477 00d4 24000000 		.4byte	.LFE29
 3478 00d8 00000000 		.4byte	.LFB30
 3479 00dc 28000000 		.4byte	.LFE30
 3480 00e0 00000000 		.4byte	.LFB31
 3481 00e4 24000000 		.4byte	.LFE31
 3482 00e8 00000000 		.4byte	.LFB32
 3483 00ec 24000000 		.4byte	.LFE32
 3484 00f0 00000000 		.4byte	.LFB33
 3485 00f4 1C000000 		.4byte	.LFE33
 3486 00f8 00000000 		.4byte	.LFB1
 3487 00fc 24000000 		.4byte	.LFE1
 3488 0100 00000000 		.4byte	.LFB34
 3489 0104 14000000 		.4byte	.LFE34
 3490 0108 00000000 		.4byte	.LFB35
 3491 010c 0C000000 		.4byte	.LFE35
 3492 0110 00000000 		.4byte	.LFB0
 3493 0114 54000000 		.4byte	.LFE0
 3494 0118 00000000 		.4byte	.LFB2
 3495 011c 20000000 		.4byte	.LFE2
 3496 0120 00000000 		.4byte	.LFB36
 3497 0124 0C000000 		.4byte	.LFE36
 3498 0128 00000000 		.4byte	.LFB37
 3499 012c 0C000000 		.4byte	.LFE37
 3500 0130 00000000 		.4byte	.LFB38
 3501 0134 0C000000 		.4byte	.LFE38
 3502 0138 00000000 		.4byte	.LFB39
 3503 013c 0C000000 		.4byte	.LFE39
 3504 0140 00000000 		.4byte	0
 3505 0144 00000000 		.4byte	0
 3506              		.section	.debug_line,"",%progbits
 3507              	.Ldebug_line0:
 3508 0000 78030000 		.section	.debug_str,"MS",%progbits,1
 3508      02004B00 
 3508      00000201 
 3508      FB0E0D00 
 3508      01010101 
 3509              	.LASF38:
 3510 0000 636F756E 		.ascii	"count\000"
 3510      7400
 3511              	.LASF67:
 3512 0006 50574D5F 		.ascii	"PWM_Enable\000"
 3512      456E6162 
 3512      6C6500
 3513              	.LASF78:
 3514 0011 43794578 		.ascii	"CyExitCriticalSection\000"
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 88


 3514      69744372 
 3514      69746963 
 3514      616C5365 
 3514      6374696F 
 3515              	.LASF29:
 3516 0027 50574D5F 		.ascii	"PWM_SetPWMSyncKill\000"
 3516      53657450 
 3516      574D5379 
 3516      6E634B69 
 3516      6C6C00
 3517              	.LASF79:
 3518 003a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3518      43313120 
 3518      352E342E 
 3518      31203230 
 3518      31363036 
 3519 006d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3519      20726576 
 3519      6973696F 
 3519      6E203233 
 3519      37373135 
 3520 00a0 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3520      66756E63 
 3520      74696F6E 
 3520      2D736563 
 3520      74696F6E 
 3521              	.LASF42:
 3522 00c8 70657269 		.ascii	"period\000"
 3522      6F6400
 3523              	.LASF7:
 3524 00cf 6C6F6E67 		.ascii	"long long unsigned int\000"
 3524      206C6F6E 
 3524      6720756E 
 3524      7369676E 
 3524      65642069 
 3525              	.LASF59:
 3526 00e6 50574D5F 		.ascii	"PWM_SetCaptureMode\000"
 3526      53657443 
 3526      61707475 
 3526      72654D6F 
 3526      646500
 3527              	.LASF22:
 3528 00f9 71644D6F 		.ascii	"qdMode\000"
 3528      646500
 3529              	.LASF37:
 3530 0100 50574D5F 		.ascii	"PWM_WriteCounter\000"
 3530      57726974 
 3530      65436F75 
 3530      6E746572 
 3530      00
 3531              	.LASF80:
 3532 0111 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM.c\000"
 3532      72617465 
 3532      645F536F 
 3532      75726365 
 3532      5C50536F 
 3533              	.LASF43:
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 89


 3534 012e 50574D5F 		.ascii	"PWM_ReadCounter\000"
 3534      52656164 
 3534      436F756E 
 3534      74657200 
 3535              	.LASF6:
 3536 013e 6C6F6E67 		.ascii	"long long int\000"
 3536      206C6F6E 
 3536      6720696E 
 3536      7400
 3537              	.LASF0:
 3538 014c 7369676E 		.ascii	"signed char\000"
 3538      65642063 
 3538      68617200 
 3539              	.LASF54:
 3540 0158 50574D5F 		.ascii	"PWM_WriteCompareBuf\000"
 3540      57726974 
 3540      65436F6D 
 3540      70617265 
 3540      42756600 
 3541              	.LASF69:
 3542 016c 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 3542      53657449 
 3542      6E746572 
 3542      72757074 
 3542      4D6F6465 
 3543              	.LASF75:
 3544 0181 50574D5F 		.ascii	"PWM_ClearInterrupt\000"
 3544      436C6561 
 3544      72496E74 
 3544      65727275 
 3544      707400
 3545              	.LASF4:
 3546 0194 6C6F6E67 		.ascii	"long int\000"
 3546      20696E74 
 3546      00
 3547              	.LASF9:
 3548 019d 75696E74 		.ascii	"uint8\000"
 3548      3800
 3549              	.LASF12:
 3550 01a3 646F7562 		.ascii	"double\000"
 3550      6C6500
 3551              	.LASF56:
 3552 01aa 50574D5F 		.ascii	"PWM_ReadCompareBuf\000"
 3552      52656164 
 3552      436F6D70 
 3552      61726542 
 3552      756600
 3553              	.LASF45:
 3554 01bd 50574D5F 		.ascii	"PWM_SetCompareSwap\000"
 3554      53657443 
 3554      6F6D7061 
 3554      72655377 
 3554      617000
 3555              	.LASF17:
 3556 01d0 50574D5F 		.ascii	"PWM_Stop\000"
 3556      53746F70 
 3556      00
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 90


 3557              	.LASF35:
 3558 01d9 50574D5F 		.ascii	"PWM_SetPWMInvert\000"
 3558      53657450 
 3558      574D496E 
 3558      76657274 
 3558      00
 3559              	.LASF10:
 3560 01ea 75696E74 		.ascii	"uint32\000"
 3560      333200
 3561              	.LASF62:
 3562 01f1 50574D5F 		.ascii	"PWM_SetStartMode\000"
 3562      53657453 
 3562      74617274 
 3562      4D6F6465 
 3562      00
 3563              	.LASF60:
 3564 0202 74726967 		.ascii	"triggerMode\000"
 3564      6765724D 
 3564      6F646500 
 3565              	.LASF36:
 3566 020e 6D61736B 		.ascii	"mask\000"
 3566      00
 3567              	.LASF68:
 3568 0213 50574D5F 		.ascii	"PWM_ReadStatus\000"
 3568      52656164 
 3568      53746174 
 3568      757300
 3569              	.LASF34:
 3570 0222 64656164 		.ascii	"deadTime\000"
 3570      54696D65 
 3570      00
 3571              	.LASF81:
 3572 022b 443A5C72 		.ascii	"D:\\repositories\\Tarocco\\Bootloader\\cncboot_no_o"
 3572      65706F73 
 3572      69746F72 
 3572      6965735C 
 3572      5461726F 
 3573 025a 7074696D 		.ascii	"ptimizations\\cncboot.cydsn\000"
 3573      697A6174 
 3573      696F6E73 
 3573      5C636E63 
 3573      626F6F74 
 3574              	.LASF63:
 3575 0275 50574D5F 		.ascii	"PWM_SetStopMode\000"
 3575      53657453 
 3575      746F704D 
 3575      6F646500 
 3576              	.LASF8:
 3577 0285 756E7369 		.ascii	"unsigned int\000"
 3577      676E6564 
 3577      20696E74 
 3577      00
 3578              	.LASF33:
 3579 0292 50574D5F 		.ascii	"PWM_SetPWMDeadTime\000"
 3579      53657450 
 3579      574D4465 
 3579      61645469 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 91


 3579      6D6500
 3580              	.LASF66:
 3581 02a5 636F6D6D 		.ascii	"command\000"
 3581      616E6400 
 3582              	.LASF5:
 3583 02ad 6C6F6E67 		.ascii	"long unsigned int\000"
 3583      20756E73 
 3583      69676E65 
 3583      6420696E 
 3583      7400
 3584              	.LASF28:
 3585 02bf 6D6F6465 		.ascii	"modeMask\000"
 3585      4D61736B 
 3585      00
 3586              	.LASF77:
 3587 02c8 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3587      74657243 
 3587      72697469 
 3587      63616C53 
 3587      65637469 
 3588              	.LASF3:
 3589 02df 73686F72 		.ascii	"short unsigned int\000"
 3589      7420756E 
 3589      7369676E 
 3589      65642069 
 3589      6E7400
 3590              	.LASF23:
 3591 02f2 50574D5F 		.ascii	"PWM_SetPrescaler\000"
 3591      53657450 
 3591      72657363 
 3591      616C6572 
 3591      00
 3592              	.LASF26:
 3593 0303 6F6E6553 		.ascii	"oneShotEnable\000"
 3593      686F7445 
 3593      6E61626C 
 3593      6500
 3594              	.LASF65:
 3595 0311 50574D5F 		.ascii	"PWM_TriggerCommand\000"
 3595      54726967 
 3595      67657243 
 3595      6F6D6D61 
 3595      6E6400
 3596              	.LASF51:
 3597 0324 50574D5F 		.ascii	"PWM_WriteCompare\000"
 3597      57726974 
 3597      65436F6D 
 3597      70617265 
 3597      00
 3598              	.LASF41:
 3599 0335 50574D5F 		.ascii	"PWM_WritePeriod\000"
 3599      57726974 
 3599      65506572 
 3599      696F6400 
 3600              	.LASF14:
 3601 0345 72656733 		.ascii	"reg32\000"
 3601      3200
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 92


 3602              	.LASF82:
 3603 034b 50574D5F 		.ascii	"PWM_initVar\000"
 3603      696E6974 
 3603      56617200 
 3604              	.LASF44:
 3605 0357 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 3605      52656164 
 3605      50657269 
 3605      6F6400
 3606              	.LASF16:
 3607 0366 73697A65 		.ascii	"sizetype\000"
 3607      74797065 
 3607      00
 3608              	.LASF15:
 3609 036f 6C6F6E67 		.ascii	"long double\000"
 3609      20646F75 
 3609      626C6500 
 3610              	.LASF52:
 3611 037b 636F6D70 		.ascii	"compare\000"
 3611      61726500 
 3612              	.LASF25:
 3613 0383 50574D5F 		.ascii	"PWM_SetOneShot\000"
 3613      5365744F 
 3613      6E655368 
 3613      6F7400
 3614              	.LASF49:
 3615 0392 50574D5F 		.ascii	"PWM_ReadPeriodBuf\000"
 3615      52656164 
 3615      50657269 
 3615      6F644275 
 3615      6600
 3616              	.LASF72:
 3617 03a4 50574D5F 		.ascii	"PWM_Start\000"
 3617      53746172 
 3617      7400
 3618              	.LASF11:
 3619 03ae 666C6F61 		.ascii	"float\000"
 3619      7400
 3620              	.LASF24:
 3621 03b4 70726573 		.ascii	"prescaler\000"
 3621      63616C65 
 3621      7200
 3622              	.LASF57:
 3623 03be 50574D5F 		.ascii	"PWM_ReadCapture\000"
 3623      52656164 
 3623      43617074 
 3623      75726500 
 3624              	.LASF50:
 3625 03ce 50574D5F 		.ascii	"PWM_SetPeriodSwap\000"
 3625      53657450 
 3625      6572696F 
 3625      64537761 
 3625      7000
 3626              	.LASF1:
 3627 03e0 756E7369 		.ascii	"unsigned char\000"
 3627      676E6564 
 3627      20636861 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 93


 3627      7200
 3628              	.LASF71:
 3629 03ee 50574D5F 		.ascii	"PWM_Init\000"
 3629      496E6974 
 3629      00
 3630              	.LASF32:
 3631 03f7 73746F70 		.ascii	"stopOnKillEnable\000"
 3631      4F6E4B69 
 3631      6C6C456E 
 3631      61626C65 
 3631      00
 3632              	.LASF27:
 3633 0408 50574D5F 		.ascii	"PWM_SetPWMMode\000"
 3633      53657450 
 3633      574D4D6F 
 3633      646500
 3634              	.LASF2:
 3635 0417 73686F72 		.ascii	"short int\000"
 3635      7420696E 
 3635      7400
 3636              	.LASF73:
 3637 0421 50574D5F 		.ascii	"PWM_GetInterruptSourceMasked\000"
 3637      47657449 
 3637      6E746572 
 3637      72757074 
 3637      536F7572 
 3638              	.LASF70:
 3639 043e 696E7465 		.ascii	"interruptMask\000"
 3639      72727570 
 3639      744D6173 
 3639      6B00
 3640              	.LASF47:
 3641 044c 50574D5F 		.ascii	"PWM_WritePeriodBuf\000"
 3641      57726974 
 3641      65506572 
 3641      696F6442 
 3641      756600
 3642              	.LASF20:
 3643 045f 50574D5F 		.ascii	"PWM_SetQDMode\000"
 3643      53657451 
 3643      444D6F64 
 3643      6500
 3644              	.LASF13:
 3645 046d 63686172 		.ascii	"char\000"
 3645      00
 3646              	.LASF21:
 3647 0472 6D6F6465 		.ascii	"mode\000"
 3647      00
 3648              	.LASF76:
 3649 0477 50574D5F 		.ascii	"PWM_SetInterrupt\000"
 3649      53657449 
 3649      6E746572 
 3649      72757074 
 3649      00
 3650              	.LASF61:
 3651 0488 50574D5F 		.ascii	"PWM_SetReloadMode\000"
 3651      53657452 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 94


 3651      656C6F61 
 3651      644D6F64 
 3651      6500
 3652              	.LASF40:
 3653 049a 636F756E 		.ascii	"counterMode\000"
 3653      7465724D 
 3653      6F646500 
 3654              	.LASF55:
 3655 04a6 636F6D70 		.ascii	"compareBuf\000"
 3655      61726542 
 3655      756600
 3656              	.LASF48:
 3657 04b1 70657269 		.ascii	"periodBuf\000"
 3657      6F644275 
 3657      6600
 3658              	.LASF58:
 3659 04bb 50574D5F 		.ascii	"PWM_ReadCaptureBuf\000"
 3659      52656164 
 3659      43617074 
 3659      75726542 
 3659      756600
 3660              	.LASF19:
 3661 04ce 656E6162 		.ascii	"enableInterrupts\000"
 3661      6C65496E 
 3661      74657272 
 3661      75707473 
 3661      00
 3662              	.LASF64:
 3663 04df 50574D5F 		.ascii	"PWM_SetCountMode\000"
 3663      53657443 
 3663      6F756E74 
 3663      4D6F6465 
 3663      00
 3664              	.LASF18:
 3665 04f0 50574D5F 		.ascii	"PWM_SetMode\000"
 3665      5365744D 
 3665      6F646500 
 3666              	.LASF31:
 3667 04fc 50574D5F 		.ascii	"PWM_SetPWMStopOnKill\000"
 3667      53657450 
 3667      574D5374 
 3667      6F704F6E 
 3667      4B696C6C 
 3668              	.LASF30:
 3669 0511 73796E63 		.ascii	"syncKillEnable\000"
 3669      4B696C6C 
 3669      456E6162 
 3669      6C6500
 3670              	.LASF46:
 3671 0520 73776170 		.ascii	"swapEnable\000"
 3671      456E6162 
 3671      6C6500
 3672              	.LASF74:
 3673 052b 50574D5F 		.ascii	"PWM_GetInterruptSource\000"
 3673      47657449 
 3673      6E746572 
 3673      72757074 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccabFKKI.s 			page 95


 3673      536F7572 
 3674              	.LASF39:
 3675 0542 50574D5F 		.ascii	"PWM_SetCounterMode\000"
 3675      53657443 
 3675      6F756E74 
 3675      65724D6F 
 3675      646500
 3676              	.LASF53:
 3677 0555 50574D5F 		.ascii	"PWM_ReadCompare\000"
 3677      52656164 
 3677      436F6D70 
 3677      61726500 
 3678              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
