ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.40
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  37:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  38:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  40:Generated_Source\PSoC4/CyLib.c **** 
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  43:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  44:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  45:Generated_Source\PSoC4/CyLib.c **** *
  46:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  47:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  48:Generated_Source\PSoC4/CyLib.c **** *
  49:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  50:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  51:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  52:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  53:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  54:Generated_Source\PSoC4/CyLib.c **** 
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  57:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  58:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  59:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  60:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  61:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  71:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  72:Generated_Source\PSoC4/CyLib.c **** 
  73:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  74:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  75:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  76:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  77:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  82:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  83:Generated_Source\PSoC4/CyLib.c **** 
  84:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  85:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  86:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  87:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** 
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  91:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  92:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  93:Generated_Source\PSoC4/CyLib.c **** *
  94:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  95:Generated_Source\PSoC4/CyLib.c **** *
  96:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
  97:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
  98:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
  99:Generated_Source\PSoC4/CyLib.c **** *
 100:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 101:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 104:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 105:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 105 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 106:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 106 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 107:Generated_Source\PSoC4/CyLib.c **** 
 108:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 109:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 110:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 111:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 112:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 113:Generated_Source\PSoC4/CyLib.c **** 
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 116:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 117:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 118:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 119:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 120:Generated_Source\PSoC4/CyLib.c **** 
 121:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 121 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 08010B40 		.word	1074462984
  47              		.cfi_endproc
  48              	.LFE0:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
  50              		.section	.text.CySysClkImoStop,"ax",%progbits
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 4


  51              		.align	2
  52              		.global	CySysClkImoStop
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoStop, %function
  56              	CySysClkImoStop:
  57              	.LFB1:
 122:Generated_Source\PSoC4/CyLib.c **** 
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 125:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 126:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 127:Generated_Source\PSoC4/CyLib.c **** *
 128:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 129:Generated_Source\PSoC4/CyLib.c **** *
 130:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 131:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 134:Generated_Source\PSoC4/CyLib.c **** *
 135:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 136:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 137:Generated_Source\PSoC4/CyLib.c **** {
  58              		.loc 1 137 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 138:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 139:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 140:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 141:Generated_Source\PSoC4/CyLib.c **** 
 142:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 143:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 144:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 145:Generated_Source\PSoC4/CyLib.c **** 
 146:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  63              		.loc 1 146 0
  64 0000 024A     		ldr	r2, .L5
  65 0002 1368     		ldr	r3, [r2]
  66 0004 5B00     		lsls	r3, r3, #1
  67 0006 5B08     		lsrs	r3, r3, #1
  68 0008 1360     		str	r3, [r2]
 147:Generated_Source\PSoC4/CyLib.c **** }
  69              		.loc 1 147 0
  70              		@ sp needed
  71 000a 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 000c 08010B40 		.word	1074462984
  76              		.cfi_endproc
  77              	.LFE1:
  78              		.size	CySysClkImoStop, .-CySysClkImoStop
  79              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  80              		.align	2
  81              		.global	CySysClkWriteHfclkDirect
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 5


  82              		.code	16
  83              		.thumb_func
  84              		.type	CySysClkWriteHfclkDirect, %function
  85              	CySysClkWriteHfclkDirect:
  86              	.LFB2:
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 150:Generated_Source\PSoC4/CyLib.c **** 
 151:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 152:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 153:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 154:Generated_Source\PSoC4/CyLib.c ****     *
 155:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 156:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 157:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 160:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 161:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 162:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 163:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 164:Generated_Source\PSoC4/CyLib.c ****     *
 165:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 166:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 169:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 172:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 173:Generated_Source\PSoC4/CyLib.c ****     {
 174:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 175:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 176:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 177:Generated_Source\PSoC4/CyLib.c **** 
 178:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 179:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 180:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 182:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 183:Generated_Source\PSoC4/CyLib.c **** 
 184:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 185:Generated_Source\PSoC4/CyLib.c ****         {
 186:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 187:Generated_Source\PSoC4/CyLib.c **** 
 188:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 189:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 190:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 191:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 192:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 193:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 194:Generated_Source\PSoC4/CyLib.c **** 
 195:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 196:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 197:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 198:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 199:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 6


 200:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 201:Generated_Source\PSoC4/CyLib.c ****                     {
 202:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 203:Generated_Source\PSoC4/CyLib.c ****                         break;
 204:Generated_Source\PSoC4/CyLib.c ****                     }
 205:Generated_Source\PSoC4/CyLib.c ****                 }
 206:Generated_Source\PSoC4/CyLib.c ****             #else
 207:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 208:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 209:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 210:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 211:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 212:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 213:Generated_Source\PSoC4/CyLib.c ****                 #else
 214:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 215:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 216:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 217:Generated_Source\PSoC4/CyLib.c **** 
 218:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 219:Generated_Source\PSoC4/CyLib.c **** 
 220:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 221:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 222:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 223:Generated_Source\PSoC4/CyLib.c ****                 {
 224:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 225:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 226:Generated_Source\PSoC4/CyLib.c ****                 }
 227:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 228:Generated_Source\PSoC4/CyLib.c **** 
 229:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 230:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 231:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 233:Generated_Source\PSoC4/CyLib.c **** 
 234:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 235:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 241:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 242:Generated_Source\PSoC4/CyLib.c ****             {
 243:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 244:Generated_Source\PSoC4/CyLib.c ****             }
 245:Generated_Source\PSoC4/CyLib.c ****             else
 246:Generated_Source\PSoC4/CyLib.c ****             {
 247:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 248:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 249:Generated_Source\PSoC4/CyLib.c **** 
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 251:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 254:Generated_Source\PSoC4/CyLib.c ****             }
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 7


 257:Generated_Source\PSoC4/CyLib.c **** 
 258:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 259:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 261:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 262:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 263:Generated_Source\PSoC4/CyLib.c **** 
 264:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 265:Generated_Source\PSoC4/CyLib.c ****         }
 266:Generated_Source\PSoC4/CyLib.c ****     }
 267:Generated_Source\PSoC4/CyLib.c **** 
 268:Generated_Source\PSoC4/CyLib.c **** 
 269:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 270:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 271:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 272:Generated_Source\PSoC4/CyLib.c ****     *
 273:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 274:Generated_Source\PSoC4/CyLib.c ****     *
 275:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 276:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 279:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 282:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 283:Generated_Source\PSoC4/CyLib.c ****     {
 284:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 285:Generated_Source\PSoC4/CyLib.c ****     }
 286:Generated_Source\PSoC4/CyLib.c **** 
 287:Generated_Source\PSoC4/CyLib.c **** 
 288:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 289:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 290:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 291:Generated_Source\PSoC4/CyLib.c ****     *
 292:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 293:Generated_Source\PSoC4/CyLib.c ****     *
 294:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 295:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 298:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 301:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 302:Generated_Source\PSoC4/CyLib.c ****     {
 303:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 304:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 305:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 306:Generated_Source\PSoC4/CyLib.c ****     }
 307:Generated_Source\PSoC4/CyLib.c **** 
 308:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 309:Generated_Source\PSoC4/CyLib.c **** 
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 8


 314:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 315:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 316:Generated_Source\PSoC4/CyLib.c ****     *
 317:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 318:Generated_Source\PSoC4/CyLib.c ****     *
 319:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 320:Generated_Source\PSoC4/CyLib.c ****     *
 321:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 322:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 325:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 328:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 329:Generated_Source\PSoC4/CyLib.c ****     {
 330:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 331:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 332:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 333:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 334:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 335:Generated_Source\PSoC4/CyLib.c **** 
 336:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 337:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 338:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 339:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 340:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 341:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 342:Generated_Source\PSoC4/CyLib.c **** 
 343:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 344:Generated_Source\PSoC4/CyLib.c ****     }
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c **** 
 347:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 348:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 349:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 350:Generated_Source\PSoC4/CyLib.c ****     *
 351:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 352:Generated_Source\PSoC4/CyLib.c ****     *
 353:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 354:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 357:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 361:Generated_Source\PSoC4/CyLib.c ****     {
 362:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 363:Generated_Source\PSoC4/CyLib.c **** 
 364:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 365:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 366:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 367:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 368:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 369:Generated_Source\PSoC4/CyLib.c ****     }
 370:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 9


 371:Generated_Source\PSoC4/CyLib.c **** 
 372:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 373:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 374:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 375:Generated_Source\PSoC4/CyLib.c ****     *
 376:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 377:Generated_Source\PSoC4/CyLib.c ****     *
 378:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 379:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 382:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 385:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 386:Generated_Source\PSoC4/CyLib.c ****     {
 387:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 388:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 389:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 390:Generated_Source\PSoC4/CyLib.c ****     }
 391:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 392:Generated_Source\PSoC4/CyLib.c **** 
 393:Generated_Source\PSoC4/CyLib.c **** 
 394:Generated_Source\PSoC4/CyLib.c **** 
 395:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 396:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 397:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 398:Generated_Source\PSoC4/CyLib.c **** *
 399:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 400:Generated_Source\PSoC4/CyLib.c **** *
 401:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 402:Generated_Source\PSoC4/CyLib.c **** *
 403:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 404:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 405:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 406:Generated_Source\PSoC4/CyLib.c **** *
 407:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 408:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 409:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 410:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 412:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 413:Generated_Source\PSoC4/CyLib.c **** *
 414:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 415:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 418:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 419:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 420:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 421:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 424:Generated_Source\PSoC4/CyLib.c **** *
 425:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 426:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 427:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 10


  87              		.loc 1 427 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL0:
  92 0000 10B5     		push	{r4, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
  96 0002 0400     		movs	r4, r0
 428:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 429:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 430:Generated_Source\PSoC4/CyLib.c **** 
 431:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  97              		.loc 1 431 0
  98 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  99              	.LVL1:
 432:Generated_Source\PSoC4/CyLib.c **** 
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 100              		.loc 1 434 0
 101 0008 044A     		ldr	r2, .L8
 102 000a 1368     		ldr	r3, [r2]
 103 000c 0721     		movs	r1, #7
 104 000e 8B43     		bics	r3, r1
 105              	.LVL2:
 435:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 438:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 439:Generated_Source\PSoC4/CyLib.c ****     {
 440:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 441:Generated_Source\PSoC4/CyLib.c ****     }
 442:Generated_Source\PSoC4/CyLib.c ****     else
 443:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 444:Generated_Source\PSoC4/CyLib.c ****     {
 445:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 106              		.loc 1 445 0
 107 0010 0C40     		ands	r4, r1
 108              	.LVL3:
 109 0012 1C43     		orrs	r4, r3
 110              	.LVL4:
 446:Generated_Source\PSoC4/CyLib.c ****     }
 447:Generated_Source\PSoC4/CyLib.c **** 
 448:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 111              		.loc 1 448 0
 112 0014 1460     		str	r4, [r2]
 449:Generated_Source\PSoC4/CyLib.c **** 
 450:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 113              		.loc 1 450 0
 114 0016 FFF7FEFF 		bl	CyExitCriticalSection
 115              	.LVL5:
 451:Generated_Source\PSoC4/CyLib.c **** }
 116              		.loc 1 451 0
 117              		@ sp needed
 118              	.LVL6:
 119 001a 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 11


 120              	.L9:
 121              		.align	2
 122              	.L8:
 123 001c 00010B40 		.word	1074462976
 124              		.cfi_endproc
 125              	.LFE2:
 126              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 127              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 128              		.align	2
 129              		.global	CySysClkGetSysclkSource
 130              		.code	16
 131              		.thumb_func
 132              		.type	CySysClkGetSysclkSource, %function
 133              	CySysClkGetSysclkSource:
 134              	.LFB3:
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c **** 
 454:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 455:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 456:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 457:Generated_Source\PSoC4/CyLib.c **** *
 458:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 459:Generated_Source\PSoC4/CyLib.c **** *
 460:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 461:Generated_Source\PSoC4/CyLib.c **** *
 462:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 463:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 464:Generated_Source\PSoC4/CyLib.c **** {
 135              		.loc 1 464 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139 0000 10B5     		push	{r4, lr}
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 4, -8
 142              		.cfi_offset 14, -4
 465:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 466:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 467:Generated_Source\PSoC4/CyLib.c **** 
 468:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 143              		.loc 1 468 0
 144 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 145              	.LVL7:
 469:Generated_Source\PSoC4/CyLib.c **** 
 470:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 471:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 472:Generated_Source\PSoC4/CyLib.c ****     {
 473:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 474:Generated_Source\PSoC4/CyLib.c ****     }
 475:Generated_Source\PSoC4/CyLib.c ****     else
 476:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 477:Generated_Source\PSoC4/CyLib.c ****     {
 478:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 146              		.loc 1 478 0
 147 0006 044B     		ldr	r3, .L11
 148 0008 1B68     		ldr	r3, [r3]
 149 000a 0724     		movs	r4, #7
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 12


 150 000c 1C40     		ands	r4, r3
 151              	.LVL8:
 479:Generated_Source\PSoC4/CyLib.c ****     }
 480:Generated_Source\PSoC4/CyLib.c **** 
 481:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 152              		.loc 1 481 0
 153 000e FFF7FEFF 		bl	CyExitCriticalSection
 154              	.LVL9:
 482:Generated_Source\PSoC4/CyLib.c **** 
 483:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 484:Generated_Source\PSoC4/CyLib.c **** }
 155              		.loc 1 484 0
 156 0012 2000     		movs	r0, r4
 157              		@ sp needed
 158              	.LVL10:
 159 0014 10BD     		pop	{r4, pc}
 160              	.L12:
 161 0016 C046     		.align	2
 162              	.L11:
 163 0018 00010B40 		.word	1074462976
 164              		.cfi_endproc
 165              	.LFE3:
 166              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 167              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 168              		.align	2
 169              		.global	CySysClkWriteSysclkDiv
 170              		.code	16
 171              		.thumb_func
 172              		.type	CySysClkWriteSysclkDiv, %function
 173              	CySysClkWriteSysclkDiv:
 174              	.LFB4:
 485:Generated_Source\PSoC4/CyLib.c **** 
 486:Generated_Source\PSoC4/CyLib.c **** 
 487:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 488:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 489:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CyLib.c **** *
 491:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 492:Generated_Source\PSoC4/CyLib.c **** *
 493:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 494:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 495:Generated_Source\PSoC4/CyLib.c **** *
 496:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 497:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 498:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 499:Generated_Source\PSoC4/CyLib.c **** *
 500:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 501:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 502:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 503:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 504:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 505:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 508:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 509:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 510:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 13


 511:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 512:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 513:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 514:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 515:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 516:Generated_Source\PSoC4/CyLib.c **** *
 517:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 518:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 519:Generated_Source\PSoC4/CyLib.c **** {
 175              		.loc 1 519 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              	.LVL11:
 180 0000 10B5     		push	{r4, lr}
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 4, -8
 183              		.cfi_offset 14, -4
 184 0002 0400     		movs	r4, r0
 520:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 185              		.loc 1 522 0
 186 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 187              	.LVL12:
 523:Generated_Source\PSoC4/CyLib.c **** 
 524:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 188              		.loc 1 524 0
 189 0008 E304     		lsls	r3, r4, #19
 190 000a E022     		movs	r2, #224
 191 000c 9203     		lsls	r2, r2, #14
 192 000e 1340     		ands	r3, r2
 193 0010 1900     		movs	r1, r3
 525:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 526:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 194              		.loc 1 526 0
 195 0012 054C     		ldr	r4, .L14
 196              	.LVL13:
 197 0014 2368     		ldr	r3, [r4]
 198 0016 054A     		ldr	r2, .L14+4
 199 0018 1A40     		ands	r2, r3
 525:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 200              		.loc 1 525 0
 201 001a 0B00     		movs	r3, r1
 202 001c 1343     		orrs	r3, r2
 524:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 203              		.loc 1 524 0
 204 001e 2360     		str	r3, [r4]
 527:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 528:Generated_Source\PSoC4/CyLib.c **** 
 529:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 205              		.loc 1 529 0
 206 0020 FFF7FEFF 		bl	CyExitCriticalSection
 207              	.LVL14:
 530:Generated_Source\PSoC4/CyLib.c **** }
 208              		.loc 1 530 0
 209              		@ sp needed
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 14


 210 0024 10BD     		pop	{r4, pc}
 211              	.L15:
 212 0026 C046     		.align	2
 213              	.L14:
 214 0028 00010B40 		.word	1074462976
 215 002c FFFFC7FF 		.word	-3670017
 216              		.cfi_endproc
 217              	.LFE4:
 218              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 219              		.section	.text.CySysLvdDisable,"ax",%progbits
 220              		.align	2
 221              		.global	CySysLvdDisable
 222              		.code	16
 223              		.thumb_func
 224              		.type	CySysLvdDisable, %function
 225              	CySysLvdDisable:
 226              	.LFB7:
 531:Generated_Source\PSoC4/CyLib.c **** 
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 535:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 536:Generated_Source\PSoC4/CyLib.c **** *
 537:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 538:Generated_Source\PSoC4/CyLib.c **** *
 539:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 540:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 541:Generated_Source\PSoC4/CyLib.c **** *
 542:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 543:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 544:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 545:Generated_Source\PSoC4/CyLib.c **** *
 546:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 547:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 548:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 549:Generated_Source\PSoC4/CyLib.c **** *
 550:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 551:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 552:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 553:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 554:Generated_Source\PSoC4/CyLib.c **** *
 555:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 556:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 557:Generated_Source\PSoC4/CyLib.c **** *
 558:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 559:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 560:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 561:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 562:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 563:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 564:Generated_Source\PSoC4/CyLib.c **** *
 565:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 566:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 567:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 568:Generated_Source\PSoC4/CyLib.c **** *
 569:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 570:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 15


 571:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 572:Generated_Source\PSoC4/CyLib.c **** * 4.
 573:Generated_Source\PSoC4/CyLib.c **** *
 574:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 575:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 576:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 577:Generated_Source\PSoC4/CyLib.c ****     {
 578:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 579:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 580:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 581:Generated_Source\PSoC4/CyLib.c ****         #else
 582:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 583:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 584:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 585:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 586:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 587:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 588:Generated_Source\PSoC4/CyLib.c **** 
 589:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 590:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 591:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 592:Generated_Source\PSoC4/CyLib.c **** 
 593:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 594:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 595:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 596:Generated_Source\PSoC4/CyLib.c **** 
 597:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 598:Generated_Source\PSoC4/CyLib.c **** 
 599:Generated_Source\PSoC4/CyLib.c **** 
 600:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 601:Generated_Source\PSoC4/CyLib.c **** 
 602:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 603:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 604:Generated_Source\PSoC4/CyLib.c ****             {
 605:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 606:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 607:Generated_Source\PSoC4/CyLib.c ****             }
 608:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 609:Generated_Source\PSoC4/CyLib.c **** 
 610:Generated_Source\PSoC4/CyLib.c **** 
 611:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 612:Generated_Source\PSoC4/CyLib.c **** 
 613:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 614:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 615:Generated_Source\PSoC4/CyLib.c ****                 {
 616:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 617:Generated_Source\PSoC4/CyLib.c **** 
 618:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 619:Generated_Source\PSoC4/CyLib.c ****                 {
 620:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 621:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 622:Generated_Source\PSoC4/CyLib.c ****                 }
 623:Generated_Source\PSoC4/CyLib.c **** 
 624:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 625:Generated_Source\PSoC4/CyLib.c ****                 }
 626:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 627:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 16


 628:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 629:Generated_Source\PSoC4/CyLib.c **** 
 630:Generated_Source\PSoC4/CyLib.c **** 
 631:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 632:Generated_Source\PSoC4/CyLib.c **** 
 633:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 634:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 635:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 636:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 637:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 640:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 641:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 642:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 645:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 646:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 647:Generated_Source\PSoC4/CyLib.c **** 
 648:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 649:Generated_Source\PSoC4/CyLib.c **** 
 650:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 651:Generated_Source\PSoC4/CyLib.c ****         {
 652:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 653:Generated_Source\PSoC4/CyLib.c ****             {
 654:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 655:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 656:Generated_Source\PSoC4/CyLib.c ****             }
 657:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 658:Generated_Source\PSoC4/CyLib.c ****             {
 659:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 660:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 661:Generated_Source\PSoC4/CyLib.c ****             }
 662:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 663:Generated_Source\PSoC4/CyLib.c ****             {
 664:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 665:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 666:Generated_Source\PSoC4/CyLib.c ****             }
 667:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 668:Generated_Source\PSoC4/CyLib.c ****             {
 669:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 670:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 671:Generated_Source\PSoC4/CyLib.c ****             }
 672:Generated_Source\PSoC4/CyLib.c ****             else
 673:Generated_Source\PSoC4/CyLib.c ****             {
 674:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 675:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 676:Generated_Source\PSoC4/CyLib.c ****             }
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 679:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 680:Generated_Source\PSoC4/CyLib.c **** 
 681:Generated_Source\PSoC4/CyLib.c **** 
 682:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 683:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 684:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 17


 685:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 686:Generated_Source\PSoC4/CyLib.c ****             *
 687:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 688:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 689:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 690:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 691:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 692:Generated_Source\PSoC4/CyLib.c ****             {
 693:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 694:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 695:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 698:Generated_Source\PSoC4/CyLib.c **** 
 699:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 700:Generated_Source\PSoC4/CyLib.c ****             }
 701:Generated_Source\PSoC4/CyLib.c ****             else
 702:Generated_Source\PSoC4/CyLib.c ****             {
 703:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 704:Generated_Source\PSoC4/CyLib.c ****             }
 705:Generated_Source\PSoC4/CyLib.c **** 
 706:Generated_Source\PSoC4/CyLib.c **** 
 707:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 708:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 709:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 710:Generated_Source\PSoC4/CyLib.c ****             *
 711:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 712:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 713:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 714:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 715:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 716:Generated_Source\PSoC4/CyLib.c ****             {
 717:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 718:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 719:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 720:Generated_Source\PSoC4/CyLib.c ****             }
 721:Generated_Source\PSoC4/CyLib.c **** 
 722:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 725:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 726:Generated_Source\PSoC4/CyLib.c ****                 {
 727:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 728:Generated_Source\PSoC4/CyLib.c ****                 }
 729:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 730:Generated_Source\PSoC4/CyLib.c ****                 {
 731:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 732:Generated_Source\PSoC4/CyLib.c ****                 }
 733:Generated_Source\PSoC4/CyLib.c ****                 else
 734:Generated_Source\PSoC4/CyLib.c ****                 {
 735:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 736:Generated_Source\PSoC4/CyLib.c ****                 }
 737:Generated_Source\PSoC4/CyLib.c ****             #else
 738:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 739:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 740:Generated_Source\PSoC4/CyLib.c **** 
 741:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 18


 742:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 743:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 744:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 745:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 746:Generated_Source\PSoC4/CyLib.c **** 
 747:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 748:Generated_Source\PSoC4/CyLib.c ****             {
 749:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 750:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 751:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 752:Generated_Source\PSoC4/CyLib.c ****             }
 753:Generated_Source\PSoC4/CyLib.c ****         }
 754:Generated_Source\PSoC4/CyLib.c ****         else
 755:Generated_Source\PSoC4/CyLib.c ****         {
 756:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 757:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 758:Generated_Source\PSoC4/CyLib.c ****         }
 759:Generated_Source\PSoC4/CyLib.c **** 
 760:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 761:Generated_Source\PSoC4/CyLib.c **** 
 762:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 763:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 764:Generated_Source\PSoC4/CyLib.c ****             {
 765:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 766:Generated_Source\PSoC4/CyLib.c ****             }
 767:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 770:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 771:Generated_Source\PSoC4/CyLib.c ****             {
 772:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 773:Generated_Source\PSoC4/CyLib.c ****             }
 774:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 775:Generated_Source\PSoC4/CyLib.c **** 
 776:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 777:Generated_Source\PSoC4/CyLib.c ****     }
 778:Generated_Source\PSoC4/CyLib.c **** 
 779:Generated_Source\PSoC4/CyLib.c **** #else
 780:Generated_Source\PSoC4/CyLib.c **** 
 781:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 782:Generated_Source\PSoC4/CyLib.c ****     {
 783:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 784:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 785:Generated_Source\PSoC4/CyLib.c **** 
 786:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 787:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 788:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 789:Generated_Source\PSoC4/CyLib.c ****         
 790:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 791:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 792:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 795:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 796:Generated_Source\PSoC4/CyLib.c ****         #else
 797:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 798:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 19


 799:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 800:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 801:Generated_Source\PSoC4/CyLib.c ****         {
 802:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 803:Generated_Source\PSoC4/CyLib.c **** 
 804:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 805:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 806:Generated_Source\PSoC4/CyLib.c ****                 {
 807:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 808:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 809:Generated_Source\PSoC4/CyLib.c ****                 }
 810:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 811:Generated_Source\PSoC4/CyLib.c **** 
 812:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 813:Generated_Source\PSoC4/CyLib.c **** 
 814:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 815:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 816:Generated_Source\PSoC4/CyLib.c ****                     {
 817:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 818:Generated_Source\PSoC4/CyLib.c **** 
 819:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 820:Generated_Source\PSoC4/CyLib.c ****                     {
 821:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 822:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 823:Generated_Source\PSoC4/CyLib.c ****                     }
 824:Generated_Source\PSoC4/CyLib.c **** 
 825:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 826:Generated_Source\PSoC4/CyLib.c ****                     }
 827:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 830:Generated_Source\PSoC4/CyLib.c **** 
 831:Generated_Source\PSoC4/CyLib.c **** 
 832:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 833:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 834:Generated_Source\PSoC4/CyLib.c **** 
 835:Generated_Source\PSoC4/CyLib.c **** 
 836:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 837:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 839:Generated_Source\PSoC4/CyLib.c ****                 {
 840:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 841:Generated_Source\PSoC4/CyLib.c ****                 }
 842:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 843:Generated_Source\PSoC4/CyLib.c ****                 {
 844:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 845:Generated_Source\PSoC4/CyLib.c ****                 }
 846:Generated_Source\PSoC4/CyLib.c ****                 else
 847:Generated_Source\PSoC4/CyLib.c ****                 {
 848:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 849:Generated_Source\PSoC4/CyLib.c ****                 }
 850:Generated_Source\PSoC4/CyLib.c ****             #else
 851:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 852:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 853:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 854:Generated_Source\PSoC4/CyLib.c **** 
 855:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 20


 856:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 857:Generated_Source\PSoC4/CyLib.c **** 
 858:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 859:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 860:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 861:Generated_Source\PSoC4/CyLib.c **** 
 862:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 863:Generated_Source\PSoC4/CyLib.c **** 
 864:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 865:Generated_Source\PSoC4/CyLib.c ****             {
 866:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 867:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 868:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 871:Generated_Source\PSoC4/CyLib.c **** 
 872:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 873:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 874:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 875:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 876:Generated_Source\PSoC4/CyLib.c ****             }
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 879:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 880:Generated_Source\PSoC4/CyLib.c ****                 {
 881:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 882:Generated_Source\PSoC4/CyLib.c ****                 }
 883:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 884:Generated_Source\PSoC4/CyLib.c ****         
 885:Generated_Source\PSoC4/CyLib.c ****         
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 892:Generated_Source\PSoC4/CyLib.c **** 
 893:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 894:Generated_Source\PSoC4/CyLib.c ****         }
 895:Generated_Source\PSoC4/CyLib.c ****         else
 896:Generated_Source\PSoC4/CyLib.c ****         {
 897:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 898:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 899:Generated_Source\PSoC4/CyLib.c ****         }
 900:Generated_Source\PSoC4/CyLib.c ****     }
 901:Generated_Source\PSoC4/CyLib.c **** 
 902:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c **** 
 905:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 909:Generated_Source\PSoC4/CyLib.c ****     *
 910:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 911:Generated_Source\PSoC4/CyLib.c ****     *
 912:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 21


 913:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 914:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 915:Generated_Source\PSoC4/CyLib.c ****     *
 916:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 917:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 918:Generated_Source\PSoC4/CyLib.c ****     *
 919:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 920:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 921:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 922:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 923:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 924:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 925:Generated_Source\PSoC4/CyLib.c ****     *
 926:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 927:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 928:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 929:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 930:Generated_Source\PSoC4/CyLib.c ****     *
 931:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 932:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 933:Generated_Source\PSoC4/CyLib.c ****     {
 934:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 935:Generated_Source\PSoC4/CyLib.c **** 
 936:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 937:Generated_Source\PSoC4/CyLib.c **** 
 938:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 939:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 940:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****     }
 944:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 945:Generated_Source\PSoC4/CyLib.c **** 
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 948:Generated_Source\PSoC4/CyLib.c **** 
 949:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 950:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 951:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 952:Generated_Source\PSoC4/CyLib.c ****     *
 953:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 954:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
 955:Generated_Source\PSoC4/CyLib.c ****     *
 956:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
 957:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
 958:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
 959:Generated_Source\PSoC4/CyLib.c ****     * called.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
 962:Generated_Source\PSoC4/CyLib.c ****     *
 963:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
 966:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
 969:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 22


 970:Generated_Source\PSoC4/CyLib.c ****     *
 971:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
 972:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
 973:Generated_Source\PSoC4/CyLib.c ****     * is returned.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
 976:Generated_Source\PSoC4/CyLib.c ****     *
 977:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 978:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 979:Generated_Source\PSoC4/CyLib.c ****     {
 980:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 981:Generated_Source\PSoC4/CyLib.c **** 
 982:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
 983:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
 984:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 985:Generated_Source\PSoC4/CyLib.c **** 
 986:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
 987:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 988:Generated_Source\PSoC4/CyLib.c **** 
 989:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
 990:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 991:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 992:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 993:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 994:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 995:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
 996:Generated_Source\PSoC4/CyLib.c **** 
 997:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 998:Generated_Source\PSoC4/CyLib.c ****         {
 999:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1000:Generated_Source\PSoC4/CyLib.c **** 
1001:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1002:Generated_Source\PSoC4/CyLib.c ****             {
1003:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1006:Generated_Source\PSoC4/CyLib.c ****                 {
1007:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1008:Generated_Source\PSoC4/CyLib.c ****                     break;
1009:Generated_Source\PSoC4/CyLib.c ****                 }
1010:Generated_Source\PSoC4/CyLib.c ****             }
1011:Generated_Source\PSoC4/CyLib.c **** 
1012:Generated_Source\PSoC4/CyLib.c ****         }
1013:Generated_Source\PSoC4/CyLib.c **** 
1014:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1015:Generated_Source\PSoC4/CyLib.c ****     }
1016:Generated_Source\PSoC4/CyLib.c **** 
1017:Generated_Source\PSoC4/CyLib.c **** 
1018:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1019:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1020:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1021:Generated_Source\PSoC4/CyLib.c ****     *
1022:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1025:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1026:Generated_Source\PSoC4/CyLib.c ****     * functioning.
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 23


1027:Generated_Source\PSoC4/CyLib.c ****     *
1028:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1029:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1030:Generated_Source\PSoC4/CyLib.c ****     {
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1037:Generated_Source\PSoC4/CyLib.c ****         #else
1038:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1039:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1040:Generated_Source\PSoC4/CyLib.c ****     }
1041:Generated_Source\PSoC4/CyLib.c **** 
1042:Generated_Source\PSoC4/CyLib.c **** 
1043:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1044:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1045:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1046:Generated_Source\PSoC4/CyLib.c ****     *
1047:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1048:Generated_Source\PSoC4/CyLib.c ****     *
1049:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1050:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1051:Generated_Source\PSoC4/CyLib.c ****     *
1052:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1053:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1054:Generated_Source\PSoC4/CyLib.c ****     *
1055:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1056:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1057:Generated_Source\PSoC4/CyLib.c ****     *
1058:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1059:Generated_Source\PSoC4/CyLib.c ****     *
1060:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1061:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1062:Generated_Source\PSoC4/CyLib.c ****     {
1063:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1064:Generated_Source\PSoC4/CyLib.c **** 
1065:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1066:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1067:Generated_Source\PSoC4/CyLib.c ****         #else
1068:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1069:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1070:Generated_Source\PSoC4/CyLib.c **** 
1071:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1072:Generated_Source\PSoC4/CyLib.c ****     }
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS)
1075:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1076:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1077:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1078:Generated_Source\PSoC4/CyLib.c ****         *
1079:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1080:Generated_Source\PSoC4/CyLib.c ****         *
1081:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1082:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1083:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 24


1084:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1085:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1086:Generated_Source\PSoC4/CyLib.c ****         *
1087:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1088:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1089:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1090:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1091:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1092:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1093:Generated_Source\PSoC4/CyLib.c ****         *
1094:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1095:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1096:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1097:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1098:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1099:Generated_Source\PSoC4/CyLib.c ****         *
1100:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1101:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1102:Generated_Source\PSoC4/CyLib.c ****         {
1103:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1104:Generated_Source\PSoC4/CyLib.c **** 
1105:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1106:Generated_Source\PSoC4/CyLib.c ****             {
1107:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1110:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1111:Generated_Source\PSoC4/CyLib.c **** 
1112:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1113:Generated_Source\PSoC4/CyLib.c ****             }
1114:Generated_Source\PSoC4/CyLib.c ****             else
1115:Generated_Source\PSoC4/CyLib.c ****             {
1116:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1117:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1118:Generated_Source\PSoC4/CyLib.c ****             }
1119:Generated_Source\PSoC4/CyLib.c ****         }
1120:Generated_Source\PSoC4/CyLib.c **** 
1121:Generated_Source\PSoC4/CyLib.c ****     #else
1122:Generated_Source\PSoC4/CyLib.c **** 
1123:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1124:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1125:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1126:Generated_Source\PSoC4/CyLib.c ****         *
1127:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1128:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1129:Generated_Source\PSoC4/CyLib.c ****         *
1130:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1131:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1132:Generated_Source\PSoC4/CyLib.c ****         *
1133:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1134:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1135:Generated_Source\PSoC4/CyLib.c ****         *
1136:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1137:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1138:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1139:Generated_Source\PSoC4/CyLib.c ****         *
1140:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 25


1141:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1142:Generated_Source\PSoC4/CyLib.c ****         *
1143:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1144:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1145:Generated_Source\PSoC4/CyLib.c ****         *
1146:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1147:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1148:Generated_Source\PSoC4/CyLib.c ****         *
1149:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1150:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1151:Generated_Source\PSoC4/CyLib.c ****         *
1152:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1153:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1154:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1155:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1156:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1157:Generated_Source\PSoC4/CyLib.c ****         *
1158:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1159:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1160:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1161:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1162:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1163:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1164:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1165:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1166:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1167:Generated_Source\PSoC4/CyLib.c ****         *
1168:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1169:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1170:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1171:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1172:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1173:Generated_Source\PSoC4/CyLib.c ****         *
1174:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1175:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1176:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1177:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1178:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1179:Generated_Source\PSoC4/CyLib.c ****         *
1180:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1181:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1182:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1183:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1184:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1185:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1186:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1187:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1188:Generated_Source\PSoC4/CyLib.c ****         *
1189:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1190:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1191:Generated_Source\PSoC4/CyLib.c ****         {
1192:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1193:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1194:Generated_Source\PSoC4/CyLib.c **** 
1195:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1196:Generated_Source\PSoC4/CyLib.c **** 
1197:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 26


1198:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1199:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1200:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1201:Generated_Source\PSoC4/CyLib.c **** 
1202:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1203:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1204:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1205:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1206:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1207:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1208:Generated_Source\PSoC4/CyLib.c **** 
1209:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1210:Generated_Source\PSoC4/CyLib.c **** 
1211:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1212:Generated_Source\PSoC4/CyLib.c ****         }
1213:Generated_Source\PSoC4/CyLib.c **** 
1214:Generated_Source\PSoC4/CyLib.c **** 
1215:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1216:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1217:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1218:Generated_Source\PSoC4/CyLib.c ****         *
1219:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1220:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1221:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1222:Generated_Source\PSoC4/CyLib.c ****         *
1223:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1224:Generated_Source\PSoC4/CyLib.c ****         *
1225:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1226:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1227:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1228:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1229:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1230:Generated_Source\PSoC4/CyLib.c ****         *
1231:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1232:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1233:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1234:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1235:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1236:Generated_Source\PSoC4/CyLib.c ****         *
1237:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1238:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1239:Generated_Source\PSoC4/CyLib.c ****         *
1240:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1241:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1242:Generated_Source\PSoC4/CyLib.c ****         {
1243:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1244:Generated_Source\PSoC4/CyLib.c **** 
1245:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1246:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1247:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1248:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1249:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1250:Generated_Source\PSoC4/CyLib.c **** 
1251:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1252:Generated_Source\PSoC4/CyLib.c **** 
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 27


1255:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1256:Generated_Source\PSoC4/CyLib.c ****             {
1257:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1258:Generated_Source\PSoC4/CyLib.c ****             }
1259:Generated_Source\PSoC4/CyLib.c ****             else
1260:Generated_Source\PSoC4/CyLib.c ****             {
1261:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1262:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1263:Generated_Source\PSoC4/CyLib.c **** 
1264:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1265:Generated_Source\PSoC4/CyLib.c ****                 {
1266:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1267:Generated_Source\PSoC4/CyLib.c ****                 }
1268:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1269:Generated_Source\PSoC4/CyLib.c ****                 {
1270:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1271:Generated_Source\PSoC4/CyLib.c ****                 }
1272:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1273:Generated_Source\PSoC4/CyLib.c ****                 {
1274:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1275:Generated_Source\PSoC4/CyLib.c ****                 }
1276:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1277:Generated_Source\PSoC4/CyLib.c ****                 {
1278:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1279:Generated_Source\PSoC4/CyLib.c ****                 }
1280:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1281:Generated_Source\PSoC4/CyLib.c ****                 {
1282:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1283:Generated_Source\PSoC4/CyLib.c ****                 }
1284:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1285:Generated_Source\PSoC4/CyLib.c ****                 {
1286:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1287:Generated_Source\PSoC4/CyLib.c ****                 }
1288:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1289:Generated_Source\PSoC4/CyLib.c ****                 {
1290:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1291:Generated_Source\PSoC4/CyLib.c ****                 }
1292:Generated_Source\PSoC4/CyLib.c ****                 else
1293:Generated_Source\PSoC4/CyLib.c ****                 {
1294:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1295:Generated_Source\PSoC4/CyLib.c ****                 }
1296:Generated_Source\PSoC4/CyLib.c **** 
1297:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1298:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1299:Generated_Source\PSoC4/CyLib.c **** 
1300:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1301:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1302:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1303:Generated_Source\PSoC4/CyLib.c ****                 {
1304:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1305:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1306:Generated_Source\PSoC4/CyLib.c ****                 }
1307:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1308:Generated_Source\PSoC4/CyLib.c ****                 {
1309:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1310:Generated_Source\PSoC4/CyLib.c ****                 }
1311:Generated_Source\PSoC4/CyLib.c ****                 else
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 28


1312:Generated_Source\PSoC4/CyLib.c ****                 {
1313:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1314:Generated_Source\PSoC4/CyLib.c ****                 }
1315:Generated_Source\PSoC4/CyLib.c **** 
1316:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1317:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1318:Generated_Source\PSoC4/CyLib.c ****                 {
1319:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1320:Generated_Source\PSoC4/CyLib.c ****                 }
1321:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1322:Generated_Source\PSoC4/CyLib.c ****                 {
1323:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1324:Generated_Source\PSoC4/CyLib.c ****                 }
1325:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1326:Generated_Source\PSoC4/CyLib.c ****                 {
1327:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1328:Generated_Source\PSoC4/CyLib.c ****                 }
1329:Generated_Source\PSoC4/CyLib.c ****                 else
1330:Generated_Source\PSoC4/CyLib.c ****                 {
1331:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1332:Generated_Source\PSoC4/CyLib.c ****                 }
1333:Generated_Source\PSoC4/CyLib.c **** 
1334:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1335:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1336:Generated_Source\PSoC4/CyLib.c **** 
1337:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1338:Generated_Source\PSoC4/CyLib.c **** 
1339:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1340:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1341:Generated_Source\PSoC4/CyLib.c ****                 {
1342:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1343:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1344:Generated_Source\PSoC4/CyLib.c ****                 }
1345:Generated_Source\PSoC4/CyLib.c ****                 else
1346:Generated_Source\PSoC4/CyLib.c ****                 {
1347:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1348:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1349:Generated_Source\PSoC4/CyLib.c ****                     */
1350:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1351:Generated_Source\PSoC4/CyLib.c ****                 }
1352:Generated_Source\PSoC4/CyLib.c ****             }
1353:Generated_Source\PSoC4/CyLib.c **** 
1354:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1355:Generated_Source\PSoC4/CyLib.c ****         }
1356:Generated_Source\PSoC4/CyLib.c **** 
1357:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1358:Generated_Source\PSoC4/CyLib.c **** 
1359:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1360:Generated_Source\PSoC4/CyLib.c **** 
1361:Generated_Source\PSoC4/CyLib.c **** 
1362:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1363:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1364:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1365:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1366:Generated_Source\PSoC4/CyLib.c ****     *
1367:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1368:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 29


1369:Generated_Source\PSoC4/CyLib.c ****     *
1370:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1371:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1372:Generated_Source\PSoC4/CyLib.c ****     *
1373:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1374:Generated_Source\PSoC4/CyLib.c ****     *
1375:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1376:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1377:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1378:Generated_Source\PSoC4/CyLib.c ****     *
1379:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1380:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1381:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1382:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1383:Generated_Source\PSoC4/CyLib.c ****     *
1384:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1385:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1386:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1387:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1388:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1389:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1390:Generated_Source\PSoC4/CyLib.c ****     *
1391:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1392:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1393:Generated_Source\PSoC4/CyLib.c ****     {
1394:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1395:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1396:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1397:Generated_Source\PSoC4/CyLib.c **** 
1398:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1399:Generated_Source\PSoC4/CyLib.c ****         {
1400:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1403:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1404:Generated_Source\PSoC4/CyLib.c **** 
1405:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1406:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1407:Generated_Source\PSoC4/CyLib.c **** 
1408:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1409:Generated_Source\PSoC4/CyLib.c **** 
1410:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1411:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1412:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1413:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1414:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1415:Generated_Source\PSoC4/CyLib.c **** 
1416:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1417:Generated_Source\PSoC4/CyLib.c ****             {
1418:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1419:Generated_Source\PSoC4/CyLib.c **** 
1420:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1421:Generated_Source\PSoC4/CyLib.c ****                 {
1422:Generated_Source\PSoC4/CyLib.c **** 
1423:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1424:Generated_Source\PSoC4/CyLib.c ****                     {
1425:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 30


1426:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1427:Generated_Source\PSoC4/CyLib.c ****                         break;
1428:Generated_Source\PSoC4/CyLib.c ****                     }
1429:Generated_Source\PSoC4/CyLib.c **** 
1430:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1431:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****             }
1434:Generated_Source\PSoC4/CyLib.c ****         }
1435:Generated_Source\PSoC4/CyLib.c ****         else
1436:Generated_Source\PSoC4/CyLib.c ****         {
1437:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1438:Generated_Source\PSoC4/CyLib.c ****         }
1439:Generated_Source\PSoC4/CyLib.c **** 
1440:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1441:Generated_Source\PSoC4/CyLib.c ****     }
1442:Generated_Source\PSoC4/CyLib.c **** 
1443:Generated_Source\PSoC4/CyLib.c **** 
1444:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1445:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1446:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1447:Generated_Source\PSoC4/CyLib.c ****     *
1448:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1449:Generated_Source\PSoC4/CyLib.c ****     *
1450:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1451:Generated_Source\PSoC4/CyLib.c ****     *
1452:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1453:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1454:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1455:Generated_Source\PSoC4/CyLib.c ****     *
1456:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1457:Generated_Source\PSoC4/CyLib.c ****     *
1458:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1459:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1460:Generated_Source\PSoC4/CyLib.c ****     {
1461:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1462:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1463:Generated_Source\PSoC4/CyLib.c **** 
1464:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1465:Generated_Source\PSoC4/CyLib.c **** 
1466:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1467:Generated_Source\PSoC4/CyLib.c **** 
1468:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1469:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1470:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1471:Generated_Source\PSoC4/CyLib.c ****         {
1472:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1473:Generated_Source\PSoC4/CyLib.c ****         }
1474:Generated_Source\PSoC4/CyLib.c **** 
1475:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1476:Generated_Source\PSoC4/CyLib.c **** 
1477:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1478:Generated_Source\PSoC4/CyLib.c ****     }
1479:Generated_Source\PSoC4/CyLib.c **** 
1480:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1481:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1482:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 31


1483:Generated_Source\PSoC4/CyLib.c ****     *
1484:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1485:Generated_Source\PSoC4/CyLib.c ****     *
1486:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1487:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1488:Generated_Source\PSoC4/CyLib.c ****     *
1489:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1490:Generated_Source\PSoC4/CyLib.c ****     *
1491:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1492:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1493:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1494:Generated_Source\PSoC4/CyLib.c ****     *
1495:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1496:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1497:Generated_Source\PSoC4/CyLib.c ****     {
1498:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1499:Generated_Source\PSoC4/CyLib.c **** 
1500:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1501:Generated_Source\PSoC4/CyLib.c ****         {
1502:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1503:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1504:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1505:Generated_Source\PSoC4/CyLib.c ****         }
1506:Generated_Source\PSoC4/CyLib.c ****     }
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** 
1509:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1510:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1511:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1512:Generated_Source\PSoC4/CyLib.c ****     *
1513:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1514:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1515:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1516:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1517:Generated_Source\PSoC4/CyLib.c ****     *
1518:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1519:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1520:Generated_Source\PSoC4/CyLib.c ****     *
1521:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1522:Generated_Source\PSoC4/CyLib.c ****     *
1523:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1524:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1525:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1526:Generated_Source\PSoC4/CyLib.c ****     *
1527:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1528:Generated_Source\PSoC4/CyLib.c ****     * divider.
1529:Generated_Source\PSoC4/CyLib.c ****     *
1530:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1531:Generated_Source\PSoC4/CyLib.c ****     *
1532:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1533:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1534:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1535:Generated_Source\PSoC4/CyLib.c ****     *
1536:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1537:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1538:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1539:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 32


1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1544:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1545:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1546:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1547:Generated_Source\PSoC4/CyLib.c **** 
1548:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1549:Generated_Source\PSoC4/CyLib.c **** 
1550:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1551:Generated_Source\PSoC4/CyLib.c **** 
1552:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1553:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1554:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1555:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1556:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1557:Generated_Source\PSoC4/CyLib.c ****         {
1558:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1559:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1560:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1561:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1562:Generated_Source\PSoC4/CyLib.c **** 
1563:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1564:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1565:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1566:Generated_Source\PSoC4/CyLib.c **** 
1567:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1570:Generated_Source\PSoC4/CyLib.c ****         }
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1573:Generated_Source\PSoC4/CyLib.c **** 
1574:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1575:Generated_Source\PSoC4/CyLib.c ****     }
1576:Generated_Source\PSoC4/CyLib.c **** 
1577:Generated_Source\PSoC4/CyLib.c **** 
1578:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1579:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1580:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1581:Generated_Source\PSoC4/CyLib.c ****     *
1582:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1583:Generated_Source\PSoC4/CyLib.c ****     *
1584:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1585:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1586:Generated_Source\PSoC4/CyLib.c ****     *
1587:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1588:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1589:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1590:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1591:Generated_Source\PSoC4/CyLib.c ****     *
1592:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1593:Generated_Source\PSoC4/CyLib.c ****     *
1594:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1595:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1596:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 33


1597:Generated_Source\PSoC4/CyLib.c ****     *
1598:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1599:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1600:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1601:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1602:Generated_Source\PSoC4/CyLib.c ****     *
1603:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1604:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1605:Generated_Source\PSoC4/CyLib.c ****     *
1606:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1607:Generated_Source\PSoC4/CyLib.c ****     *
1608:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1609:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1610:Generated_Source\PSoC4/CyLib.c ****     {
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1612:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1613:Generated_Source\PSoC4/CyLib.c **** 
1614:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1615:Generated_Source\PSoC4/CyLib.c **** 
1616:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1617:Generated_Source\PSoC4/CyLib.c ****         {
1618:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1619:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1620:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1621:Generated_Source\PSoC4/CyLib.c ****         }
1622:Generated_Source\PSoC4/CyLib.c **** 
1623:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1624:Generated_Source\PSoC4/CyLib.c ****     }
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c **** 
1627:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1628:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1629:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1630:Generated_Source\PSoC4/CyLib.c ****     *
1631:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1632:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1633:Generated_Source\PSoC4/CyLib.c ****     *
1634:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1635:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1636:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1639:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1640:Generated_Source\PSoC4/CyLib.c ****     *
1641:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1642:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1643:Generated_Source\PSoC4/CyLib.c ****     {
1644:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1645:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1646:Generated_Source\PSoC4/CyLib.c **** 
1647:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1650:Generated_Source\PSoC4/CyLib.c **** 
1651:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1652:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1653:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 34


1654:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1655:Generated_Source\PSoC4/CyLib.c **** 
1656:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1657:Generated_Source\PSoC4/CyLib.c ****     }
1658:Generated_Source\PSoC4/CyLib.c **** 
1659:Generated_Source\PSoC4/CyLib.c **** 
1660:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1661:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1662:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1663:Generated_Source\PSoC4/CyLib.c ****     *
1664:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1665:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1668:Generated_Source\PSoC4/CyLib.c ****     *
1669:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1670:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1671:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1672:Generated_Source\PSoC4/CyLib.c ****     *
1673:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1674:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1677:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1678:Generated_Source\PSoC4/CyLib.c ****     {
1679:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1680:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1681:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1682:Generated_Source\PSoC4/CyLib.c **** 
1683:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1684:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1685:Generated_Source\PSoC4/CyLib.c **** 
1686:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1687:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1688:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1689:Generated_Source\PSoC4/CyLib.c ****         {
1690:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1691:Generated_Source\PSoC4/CyLib.c ****         }
1692:Generated_Source\PSoC4/CyLib.c **** 
1693:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1694:Generated_Source\PSoC4/CyLib.c ****     }
1695:Generated_Source\PSoC4/CyLib.c **** 
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1698:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1699:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1700:Generated_Source\PSoC4/CyLib.c ****     *
1701:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1702:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1703:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1704:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1705:Generated_Source\PSoC4/CyLib.c ****     *
1706:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1707:Generated_Source\PSoC4/CyLib.c ****     *
1708:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1709:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1710:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 35


1711:Generated_Source\PSoC4/CyLib.c ****     *
1712:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1713:Generated_Source\PSoC4/CyLib.c ****     *
1714:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1715:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1716:Generated_Source\PSoC4/CyLib.c ****     {
1717:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1718:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1719:Generated_Source\PSoC4/CyLib.c **** 
1720:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1721:Generated_Source\PSoC4/CyLib.c **** 
1722:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1723:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1724:Generated_Source\PSoC4/CyLib.c **** 
1725:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1728:Generated_Source\PSoC4/CyLib.c ****     }
1729:Generated_Source\PSoC4/CyLib.c **** 
1730:Generated_Source\PSoC4/CyLib.c **** 
1731:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1732:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1733:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1734:Generated_Source\PSoC4/CyLib.c ****     *
1735:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1736:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1737:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1738:Generated_Source\PSoC4/CyLib.c ****     *
1739:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1740:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1741:Generated_Source\PSoC4/CyLib.c ****     *
1742:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1743:Generated_Source\PSoC4/CyLib.c ****     *
1744:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1745:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1746:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1747:Generated_Source\PSoC4/CyLib.c ****     *
1748:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1749:Generated_Source\PSoC4/CyLib.c ****     *
1750:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1753:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1754:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1756:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1757:Generated_Source\PSoC4/CyLib.c ****     *
1758:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1759:Generated_Source\PSoC4/CyLib.c ****     *
1760:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1761:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1762:Generated_Source\PSoC4/CyLib.c ****     *
1763:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1764:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1765:Generated_Source\PSoC4/CyLib.c ****     *
1766:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1767:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 36


1768:Generated_Source\PSoC4/CyLib.c ****     {
1769:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1770:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1773:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1776:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1777:Generated_Source\PSoC4/CyLib.c **** 
1778:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1779:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1780:Generated_Source\PSoC4/CyLib.c **** 
1781:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1782:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1783:Generated_Source\PSoC4/CyLib.c **** 
1784:Generated_Source\PSoC4/CyLib.c **** 
1785:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1786:Generated_Source\PSoC4/CyLib.c **** 
1787:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1788:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1789:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1790:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1791:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1792:Generated_Source\PSoC4/CyLib.c ****         {
1793:Generated_Source\PSoC4/CyLib.c **** 
1794:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1795:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1796:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1799:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1800:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1801:Generated_Source\PSoC4/CyLib.c **** 
1802:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1803:Generated_Source\PSoC4/CyLib.c ****             {
1804:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1805:Generated_Source\PSoC4/CyLib.c ****                 {
1806:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1809:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1810:Generated_Source\PSoC4/CyLib.c **** 
1811:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1812:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1813:Generated_Source\PSoC4/CyLib.c **** 
1814:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1815:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1816:Generated_Source\PSoC4/CyLib.c **** 
1817:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1818:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1819:Generated_Source\PSoC4/CyLib.c ****                     {
1820:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1821:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1822:Generated_Source\PSoC4/CyLib.c ****                         break;
1823:Generated_Source\PSoC4/CyLib.c ****                     }
1824:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 37


1825:Generated_Source\PSoC4/CyLib.c **** 
1826:Generated_Source\PSoC4/CyLib.c **** 
1827:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1828:Generated_Source\PSoC4/CyLib.c ****                 {
1829:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1830:Generated_Source\PSoC4/CyLib.c ****                     {
1831:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1832:Generated_Source\PSoC4/CyLib.c ****                     }
1833:Generated_Source\PSoC4/CyLib.c ****                 }
1834:Generated_Source\PSoC4/CyLib.c ****             }
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c ****         }
1837:Generated_Source\PSoC4/CyLib.c **** 
1838:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1839:Generated_Source\PSoC4/CyLib.c ****     }
1840:Generated_Source\PSoC4/CyLib.c **** 
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1843:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1844:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1845:Generated_Source\PSoC4/CyLib.c ****     *
1846:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1847:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1848:Generated_Source\PSoC4/CyLib.c ****     *
1849:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1850:Generated_Source\PSoC4/CyLib.c ****     *
1851:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1852:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * \param source:
1856:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
1857:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
1858:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
1859:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
1860:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
1861:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
1862:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
1863:Generated_Source\PSoC4/CyLib.c ****     *
1864:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1865:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
1866:Generated_Source\PSoC4/CyLib.c ****     {
1867:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1868:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1869:Generated_Source\PSoC4/CyLib.c **** 
1870:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1871:Generated_Source\PSoC4/CyLib.c **** 
1872:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1873:Generated_Source\PSoC4/CyLib.c ****         {
1874:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
1875:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
1876:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
1877:Generated_Source\PSoC4/CyLib.c ****         }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1880:Generated_Source\PSoC4/CyLib.c ****     }
1881:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 38


1882:Generated_Source\PSoC4/CyLib.c **** 
1883:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1884:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
1885:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1886:Generated_Source\PSoC4/CyLib.c ****     *
1887:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
1888:Generated_Source\PSoC4/CyLib.c ****     *
1889:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
1890:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1891:Generated_Source\PSoC4/CyLib.c ****     *
1892:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1893:Generated_Source\PSoC4/CyLib.c ****     *
1894:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1895:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1896:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1897:Generated_Source\PSoC4/CyLib.c ****     *
1898:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
1899:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
1900:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1901:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1902:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1903:Generated_Source\PSoC4/CyLib.c ****     *
1904:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
1905:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
1906:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
1907:Generated_Source\PSoC4/CyLib.c ****     *
1908:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1909:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
1910:Generated_Source\PSoC4/CyLib.c ****     {
1911:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
1912:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1913:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1914:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1915:Generated_Source\PSoC4/CyLib.c **** 
1916:Generated_Source\PSoC4/CyLib.c **** 
1917:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1918:Generated_Source\PSoC4/CyLib.c **** 
1919:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
1922:Generated_Source\PSoC4/CyLib.c ****         {
1923:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
1924:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
1925:Generated_Source\PSoC4/CyLib.c **** 
1926:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
1927:Generated_Source\PSoC4/CyLib.c **** 
1928:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1929:Generated_Source\PSoC4/CyLib.c ****         }
1930:Generated_Source\PSoC4/CyLib.c **** 
1931:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1934:Generated_Source\PSoC4/CyLib.c ****     }
1935:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
1936:Generated_Source\PSoC4/CyLib.c **** 
1937:Generated_Source\PSoC4/CyLib.c **** 
1938:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 39


1939:Generated_Source\PSoC4/CyLib.c **** 
1940:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1941:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
1942:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1943:Generated_Source\PSoC4/CyLib.c ****     *
1944:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
1945:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
1946:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
1947:Generated_Source\PSoC4/CyLib.c ****     *
1948:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
1949:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
1950:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
1951:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
1952:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
1953:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
1954:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
1955:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
1956:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
1957:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
1958:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
1959:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
1960:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
1961:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
1962:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
1963:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
1964:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
1965:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
1966:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
1967:Generated_Source\PSoC4/CyLib.c ****     *
1968:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
1970:Generated_Source\PSoC4/CyLib.c ****     {
1971:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
1972:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
1973:Generated_Source\PSoC4/CyLib.c **** 
1974:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
1975:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
1976:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
1977:Generated_Source\PSoC4/CyLib.c **** 
1978:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
1979:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
1980:Generated_Source\PSoC4/CyLib.c **** 
1981:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
1982:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
1983:Generated_Source\PSoC4/CyLib.c **** 
1984:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
1985:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
1988:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
1989:Generated_Source\PSoC4/CyLib.c ****     }
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c **** 
1992:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1993:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
1994:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1995:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 40


1996:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1999:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2000:Generated_Source\PSoC4/CyLib.c ****     {
 227              		.loc 1 2000 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
2001:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 232              		.loc 1 2001 0
 233 0000 054A     		ldr	r2, .L17
 234 0002 1368     		ldr	r3, [r2]
 235 0004 0221     		movs	r1, #2
 236 0006 8B43     		bics	r3, r1
 237 0008 1360     		str	r3, [r2]
2002:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 238              		.loc 1 2002 0
 239 000a 044A     		ldr	r2, .L17+4
 240 000c 1368     		ldr	r3, [r2]
 241 000e 0139     		subs	r1, r1, #1
 242 0010 8B43     		bics	r3, r1
 243 0012 1360     		str	r3, [r2]
2003:Generated_Source\PSoC4/CyLib.c ****     }
 244              		.loc 1 2003 0
 245              		@ sp needed
 246 0014 7047     		bx	lr
 247              	.L18:
 248 0016 C046     		.align	2
 249              	.L17:
 250 0018 08000B40 		.word	1074462728
 251 001c 18000B40 		.word	1074462744
 252              		.cfi_endproc
 253              	.LFE7:
 254              		.size	CySysLvdDisable, .-CySysLvdDisable
 255              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 256              		.align	2
 257              		.global	CySysLvdGetInterruptSource
 258              		.code	16
 259              		.thumb_func
 260              		.type	CySysLvdGetInterruptSource, %function
 261              	CySysLvdGetInterruptSource:
 262              	.LFB8:
2004:Generated_Source\PSoC4/CyLib.c **** 
2005:Generated_Source\PSoC4/CyLib.c **** 
2006:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2007:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2008:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2009:Generated_Source\PSoC4/CyLib.c ****     *
2010:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2011:Generated_Source\PSoC4/CyLib.c ****     *
2012:Generated_Source\PSoC4/CyLib.c ****     * \return
2013:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2014:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2015:Generated_Source\PSoC4/CyLib.c ****     *
2016:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 41


2017:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2018:Generated_Source\PSoC4/CyLib.c ****     {
 263              		.loc 1 2018 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
2019:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 268              		.loc 1 2019 0
 269 0000 024B     		ldr	r3, .L20
 270 0002 1B68     		ldr	r3, [r3]
 271 0004 0220     		movs	r0, #2
 272 0006 1840     		ands	r0, r3
2020:Generated_Source\PSoC4/CyLib.c ****     }
 273              		.loc 1 2020 0
 274              		@ sp needed
 275 0008 7047     		bx	lr
 276              	.L21:
 277 000a C046     		.align	2
 278              	.L20:
 279 000c 04000B40 		.word	1074462724
 280              		.cfi_endproc
 281              	.LFE8:
 282              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 283              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 284              		.align	2
 285              		.global	CySysLvdClearInterrupt
 286              		.code	16
 287              		.thumb_func
 288              		.type	CySysLvdClearInterrupt, %function
 289              	CySysLvdClearInterrupt:
 290              	.LFB9:
2021:Generated_Source\PSoC4/CyLib.c **** 
2022:Generated_Source\PSoC4/CyLib.c **** 
2023:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2024:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2025:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2026:Generated_Source\PSoC4/CyLib.c ****     *
2027:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2028:Generated_Source\PSoC4/CyLib.c ****     *
2029:Generated_Source\PSoC4/CyLib.c ****     * \return
2030:Generated_Source\PSoC4/CyLib.c ****     *  None
2031:Generated_Source\PSoC4/CyLib.c ****     *
2032:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2033:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2034:Generated_Source\PSoC4/CyLib.c ****     {
 291              		.loc 1 2034 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
2035:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 296              		.loc 1 2035 0
 297 0000 0222     		movs	r2, #2
 298 0002 014B     		ldr	r3, .L23
 299 0004 1A60     		str	r2, [r3]
2036:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 42


 300              		.loc 1 2036 0
 301              		@ sp needed
 302 0006 7047     		bx	lr
 303              	.L24:
 304              		.align	2
 305              	.L23:
 306 0008 04000B40 		.word	1074462724
 307              		.cfi_endproc
 308              	.LFE9:
 309              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 310              		.section	.text.CySysGetResetReason,"ax",%progbits
 311              		.align	2
 312              		.global	CySysGetResetReason
 313              		.code	16
 314              		.thumb_func
 315              		.type	CySysGetResetReason, %function
 316              	CySysGetResetReason:
 317              	.LFB10:
2037:Generated_Source\PSoC4/CyLib.c **** 
2038:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2039:Generated_Source\PSoC4/CyLib.c **** 
2040:Generated_Source\PSoC4/CyLib.c **** 
2041:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2042:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2043:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2044:Generated_Source\PSoC4/CyLib.c **** *
2045:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2046:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2047:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2048:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2049:Generated_Source\PSoC4/CyLib.c **** *
2050:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2051:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2052:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2053:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2054:Generated_Source\PSoC4/CyLib.c **** *
2055:Generated_Source\PSoC4/CyLib.c **** * \return
2056:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2057:Generated_Source\PSoC4/CyLib.c **** *
2058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2059:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2060:Generated_Source\PSoC4/CyLib.c **** {
 318              		.loc 1 2060 0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322              		@ link register save eliminated.
 323              	.LVL15:
 324 0000 0200     		movs	r2, r0
2061:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 325              		.loc 1 2063 0
 326 0002 1920     		movs	r0, #25
 327              	.LVL16:
 328 0004 0240     		ands	r2, r0
 329              	.LVL17:
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 43


2064:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 330              		.loc 1 2064 0
 331 0006 0249     		ldr	r1, .L26
 332 0008 0B68     		ldr	r3, [r1]
 333 000a 1840     		ands	r0, r3
 334              	.LVL18:
2065:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2066:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 335              		.loc 1 2066 0
 336 000c 0A60     		str	r2, [r1]
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2069:Generated_Source\PSoC4/CyLib.c **** }
 337              		.loc 1 2069 0
 338              		@ sp needed
 339 000e 7047     		bx	lr
 340              	.L27:
 341              		.align	2
 342              	.L26:
 343 0010 00030B40 		.word	1074463488
 344              		.cfi_endproc
 345              	.LFE10:
 346              		.size	CySysGetResetReason, .-CySysGetResetReason
 347              		.section	.text.CyDisableInts,"ax",%progbits
 348              		.align	2
 349              		.global	CyDisableInts
 350              		.code	16
 351              		.thumb_func
 352              		.type	CyDisableInts, %function
 353              	CyDisableInts:
 354              	.LFB11:
2070:Generated_Source\PSoC4/CyLib.c **** 
2071:Generated_Source\PSoC4/CyLib.c **** 
2072:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2073:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2074:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2075:Generated_Source\PSoC4/CyLib.c **** *
2076:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2077:Generated_Source\PSoC4/CyLib.c **** *
2078:Generated_Source\PSoC4/CyLib.c **** * \return
2079:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2080:Generated_Source\PSoC4/CyLib.c **** *
2081:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2082:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2083:Generated_Source\PSoC4/CyLib.c **** {
 355              		.loc 1 2083 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              		@ link register save eliminated.
2084:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2087:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 360              		.loc 1 2087 0
 361 0000 024B     		ldr	r3, .L29
 362 0002 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 44


 363              	.LVL19:
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2090:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 364              		.loc 1 2090 0
 365 0004 0122     		movs	r2, #1
 366 0006 5242     		rsbs	r2, r2, #0
 367 0008 1A60     		str	r2, [r3]
2091:Generated_Source\PSoC4/CyLib.c **** 
2092:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2093:Generated_Source\PSoC4/CyLib.c **** }
 368              		.loc 1 2093 0
 369              		@ sp needed
 370 000a 7047     		bx	lr
 371              	.L30:
 372              		.align	2
 373              	.L29:
 374 000c 80E100E0 		.word	-536813184
 375              		.cfi_endproc
 376              	.LFE11:
 377              		.size	CyDisableInts, .-CyDisableInts
 378              		.section	.text.CyEnableInts,"ax",%progbits
 379              		.align	2
 380              		.global	CyEnableInts
 381              		.code	16
 382              		.thumb_func
 383              		.type	CyEnableInts, %function
 384              	CyEnableInts:
 385              	.LFB12:
2094:Generated_Source\PSoC4/CyLib.c **** 
2095:Generated_Source\PSoC4/CyLib.c **** 
2096:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2097:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2098:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2099:Generated_Source\PSoC4/CyLib.c **** *
2100:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2101:Generated_Source\PSoC4/CyLib.c **** *
2102:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2103:Generated_Source\PSoC4/CyLib.c **** *
2104:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2105:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2106:Generated_Source\PSoC4/CyLib.c **** {
 386              		.loc 1 2106 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390              		@ link register save eliminated.
 391              	.LVL20:
2107:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 392              		.loc 1 2107 0
 393 0000 014B     		ldr	r3, .L32
 394 0002 1860     		str	r0, [r3]
2108:Generated_Source\PSoC4/CyLib.c **** }
 395              		.loc 1 2108 0
 396              		@ sp needed
 397 0004 7047     		bx	lr
 398              	.L33:
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 45


 399 0006 C046     		.align	2
 400              	.L32:
 401 0008 00E100E0 		.word	-536813312
 402              		.cfi_endproc
 403              	.LFE12:
 404              		.size	CyEnableInts, .-CyEnableInts
 405              		.section	.text.CyIntEnable,"ax",%progbits
 406              		.align	2
 407              		.global	CyIntEnable
 408              		.code	16
 409              		.thumb_func
 410              		.type	CyIntEnable, %function
 411              	CyIntEnable:
 412              	.LFB19:
2109:Generated_Source\PSoC4/CyLib.c **** 
2110:Generated_Source\PSoC4/CyLib.c **** 
2111:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2112:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2113:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2114:Generated_Source\PSoC4/CyLib.c **** *
2115:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2116:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2117:Generated_Source\PSoC4/CyLib.c **** *
2118:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2119:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2120:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2121:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2122:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2123:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2124:Generated_Source\PSoC4/CyLib.c **** *
2125:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2126:Generated_Source\PSoC4/CyLib.c **** *
2127:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2128:Generated_Source\PSoC4/CyLib.c **** *
2129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2130:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2131:Generated_Source\PSoC4/CyLib.c **** {
2132:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2133:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2134:Generated_Source\PSoC4/CyLib.c **** 
2135:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2136:Generated_Source\PSoC4/CyLib.c **** 
2137:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2138:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2141:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2142:Generated_Source\PSoC4/CyLib.c **** 
2143:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2144:Generated_Source\PSoC4/CyLib.c **** }
2145:Generated_Source\PSoC4/CyLib.c **** 
2146:Generated_Source\PSoC4/CyLib.c **** 
2147:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2148:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2149:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2150:Generated_Source\PSoC4/CyLib.c **** *
2151:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 46


2152:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2153:Generated_Source\PSoC4/CyLib.c **** *
2154:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2155:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2156:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2157:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2158:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2159:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2160:Generated_Source\PSoC4/CyLib.c **** *
2161:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2162:Generated_Source\PSoC4/CyLib.c **** *
2163:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2164:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2165:Generated_Source\PSoC4/CyLib.c **** {
2166:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2167:Generated_Source\PSoC4/CyLib.c **** 
2168:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2169:Generated_Source\PSoC4/CyLib.c **** 
2170:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2171:Generated_Source\PSoC4/CyLib.c **** }
2172:Generated_Source\PSoC4/CyLib.c **** 
2173:Generated_Source\PSoC4/CyLib.c **** 
2174:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2175:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2176:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2177:Generated_Source\PSoC4/CyLib.c **** *
2178:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2179:Generated_Source\PSoC4/CyLib.c **** *
2180:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2181:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2182:Generated_Source\PSoC4/CyLib.c **** *
2183:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2184:Generated_Source\PSoC4/CyLib.c **** *
2185:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2186:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2187:Generated_Source\PSoC4/CyLib.c **** {
2188:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2189:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2190:Generated_Source\PSoC4/CyLib.c **** 
2191:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2192:Generated_Source\PSoC4/CyLib.c **** 
2193:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2194:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2195:Generated_Source\PSoC4/CyLib.c **** 
2196:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2197:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2198:Generated_Source\PSoC4/CyLib.c **** 
2199:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2200:Generated_Source\PSoC4/CyLib.c **** }
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c **** 
2203:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2204:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2205:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2208:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 47


2209:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2210:Generated_Source\PSoC4/CyLib.c **** *
2211:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2212:Generated_Source\PSoC4/CyLib.c **** *
2213:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2214:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2215:Generated_Source\PSoC4/CyLib.c **** {
2216:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2217:Generated_Source\PSoC4/CyLib.c **** 
2218:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2221:Generated_Source\PSoC4/CyLib.c **** }
2222:Generated_Source\PSoC4/CyLib.c **** 
2223:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2224:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2225:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2228:Generated_Source\PSoC4/CyLib.c **** *
2229:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2230:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2231:Generated_Source\PSoC4/CyLib.c **** *
2232:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2233:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2234:Generated_Source\PSoC4/CyLib.c **** {
2235:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2236:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2237:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2238:Generated_Source\PSoC4/CyLib.c **** 
2239:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2240:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2241:Generated_Source\PSoC4/CyLib.c **** 
2242:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2245:Generated_Source\PSoC4/CyLib.c **** 
2246:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2247:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2248:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2249:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2250:Generated_Source\PSoC4/CyLib.c **** 
2251:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2252:Generated_Source\PSoC4/CyLib.c **** }
2253:Generated_Source\PSoC4/CyLib.c **** 
2254:Generated_Source\PSoC4/CyLib.c **** 
2255:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2256:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2257:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2258:Generated_Source\PSoC4/CyLib.c **** *
2259:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2260:Generated_Source\PSoC4/CyLib.c **** *
2261:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2262:Generated_Source\PSoC4/CyLib.c **** *
2263:Generated_Source\PSoC4/CyLib.c **** * \return
2264:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2265:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 48


2266:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2267:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2268:Generated_Source\PSoC4/CyLib.c **** {
2269:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2270:Generated_Source\PSoC4/CyLib.c **** 
2271:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2272:Generated_Source\PSoC4/CyLib.c **** 
2273:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2274:Generated_Source\PSoC4/CyLib.c **** 
2275:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2276:Generated_Source\PSoC4/CyLib.c **** }
2277:Generated_Source\PSoC4/CyLib.c **** 
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2280:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2281:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2282:Generated_Source\PSoC4/CyLib.c **** *
2283:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2284:Generated_Source\PSoC4/CyLib.c **** *
2285:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2286:Generated_Source\PSoC4/CyLib.c **** *
2287:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2288:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2289:Generated_Source\PSoC4/CyLib.c **** {
 413              		.loc 1 2289 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 418              	.LVL21:
2290:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 419              		.loc 1 2290 0
 420 0000 1F23     		movs	r3, #31
 421 0002 1840     		ands	r0, r3
 422              	.LVL22:
 423 0004 1E3B     		subs	r3, r3, #30
 424 0006 8340     		lsls	r3, r3, r0
 425 0008 014A     		ldr	r2, .L35
 426 000a 1360     		str	r3, [r2]
2291:Generated_Source\PSoC4/CyLib.c **** }
 427              		.loc 1 2291 0
 428              		@ sp needed
 429 000c 7047     		bx	lr
 430              	.L36:
 431 000e C046     		.align	2
 432              	.L35:
 433 0010 00E100E0 		.word	-536813312
 434              		.cfi_endproc
 435              	.LFE19:
 436              		.size	CyIntEnable, .-CyIntEnable
 437              		.section	.text.CyIntGetState,"ax",%progbits
 438              		.align	2
 439              		.global	CyIntGetState
 440              		.code	16
 441              		.thumb_func
 442              		.type	CyIntGetState, %function
 443              	CyIntGetState:
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 49


 444              	.LFB20:
2292:Generated_Source\PSoC4/CyLib.c **** 
2293:Generated_Source\PSoC4/CyLib.c **** 
2294:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2295:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2296:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2297:Generated_Source\PSoC4/CyLib.c **** *
2298:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2301:Generated_Source\PSoC4/CyLib.c **** *
2302:Generated_Source\PSoC4/CyLib.c **** * \return
2303:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2304:Generated_Source\PSoC4/CyLib.c **** *
2305:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2306:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2307:Generated_Source\PSoC4/CyLib.c **** {
 445              		.loc 1 2307 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              		@ link register save eliminated.
 450              	.LVL23:
2308:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2309:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 451              		.loc 1 2309 0
 452 0000 044B     		ldr	r3, .L38
 453 0002 1B68     		ldr	r3, [r3]
 454 0004 1F22     		movs	r2, #31
 455 0006 1040     		ands	r0, r2
 456              	.LVL24:
 457 0008 C340     		lsrs	r3, r3, r0
 458 000a 1800     		movs	r0, r3
 459 000c 0123     		movs	r3, #1
 460 000e 1840     		ands	r0, r3
2310:Generated_Source\PSoC4/CyLib.c **** }
 461              		.loc 1 2310 0
 462              		@ sp needed
 463 0010 7047     		bx	lr
 464              	.L39:
 465 0012 C046     		.align	2
 466              	.L38:
 467 0014 00E100E0 		.word	-536813312
 468              		.cfi_endproc
 469              	.LFE20:
 470              		.size	CyIntGetState, .-CyIntGetState
 471              		.section	.text.CyIntDisable,"ax",%progbits
 472              		.align	2
 473              		.global	CyIntDisable
 474              		.code	16
 475              		.thumb_func
 476              		.type	CyIntDisable, %function
 477              	CyIntDisable:
 478              	.LFB21:
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** 
2313:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 50


2314:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2315:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2316:Generated_Source\PSoC4/CyLib.c **** *
2317:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2318:Generated_Source\PSoC4/CyLib.c **** *
2319:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2320:Generated_Source\PSoC4/CyLib.c **** *
2321:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2322:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2323:Generated_Source\PSoC4/CyLib.c **** {
 479              		.loc 1 2323 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              		@ link register save eliminated.
 484              	.LVL25:
2324:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 485              		.loc 1 2324 0
 486 0000 1F23     		movs	r3, #31
 487 0002 1840     		ands	r0, r3
 488              	.LVL26:
 489 0004 1E3B     		subs	r3, r3, #30
 490 0006 8340     		lsls	r3, r3, r0
 491 0008 014A     		ldr	r2, .L41
 492 000a 1360     		str	r3, [r2]
2325:Generated_Source\PSoC4/CyLib.c **** }
 493              		.loc 1 2325 0
 494              		@ sp needed
 495 000c 7047     		bx	lr
 496              	.L42:
 497 000e C046     		.align	2
 498              	.L41:
 499 0010 80E100E0 		.word	-536813184
 500              		.cfi_endproc
 501              	.LFE21:
 502              		.size	CyIntDisable, .-CyIntDisable
 503              		.section	.text.CyIntSetPending,"ax",%progbits
 504              		.align	2
 505              		.global	CyIntSetPending
 506              		.code	16
 507              		.thumb_func
 508              		.type	CyIntSetPending, %function
 509              	CyIntSetPending:
 510              	.LFB22:
2326:Generated_Source\PSoC4/CyLib.c **** 
2327:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2328:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2329:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2330:Generated_Source\PSoC4/CyLib.c **** *
2331:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2332:Generated_Source\PSoC4/CyLib.c **** *
2333:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2334:Generated_Source\PSoC4/CyLib.c **** *
2335:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2336:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2337:Generated_Source\PSoC4/CyLib.c **** {
 511              		.loc 1 2337 0
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 51


 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515              		@ link register save eliminated.
 516              	.LVL27:
2338:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 517              		.loc 1 2338 0
 518 0000 1F23     		movs	r3, #31
 519 0002 1840     		ands	r0, r3
 520              	.LVL28:
 521 0004 1E3B     		subs	r3, r3, #30
 522 0006 8340     		lsls	r3, r3, r0
 523 0008 014A     		ldr	r2, .L44
 524 000a 1360     		str	r3, [r2]
2339:Generated_Source\PSoC4/CyLib.c **** }
 525              		.loc 1 2339 0
 526              		@ sp needed
 527 000c 7047     		bx	lr
 528              	.L45:
 529 000e C046     		.align	2
 530              	.L44:
 531 0010 00E200E0 		.word	-536813056
 532              		.cfi_endproc
 533              	.LFE22:
 534              		.size	CyIntSetPending, .-CyIntSetPending
 535              		.section	.text.CyIntClearPending,"ax",%progbits
 536              		.align	2
 537              		.global	CyIntClearPending
 538              		.code	16
 539              		.thumb_func
 540              		.type	CyIntClearPending, %function
 541              	CyIntClearPending:
 542              	.LFB23:
2340:Generated_Source\PSoC4/CyLib.c **** 
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2343:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2344:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2345:Generated_Source\PSoC4/CyLib.c **** *
2346:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2347:Generated_Source\PSoC4/CyLib.c **** *
2348:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2349:Generated_Source\PSoC4/CyLib.c **** *
2350:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2351:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2352:Generated_Source\PSoC4/CyLib.c **** {
 543              		.loc 1 2352 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547              		@ link register save eliminated.
 548              	.LVL29:
2353:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 549              		.loc 1 2353 0
 550 0000 1F23     		movs	r3, #31
 551 0002 1840     		ands	r0, r3
 552              	.LVL30:
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 52


 553 0004 1E3B     		subs	r3, r3, #30
 554 0006 8340     		lsls	r3, r3, r0
 555 0008 014A     		ldr	r2, .L47
 556 000a 1360     		str	r3, [r2]
2354:Generated_Source\PSoC4/CyLib.c **** }
 557              		.loc 1 2354 0
 558              		@ sp needed
 559 000c 7047     		bx	lr
 560              	.L48:
 561 000e C046     		.align	2
 562              	.L47:
 563 0010 80E200E0 		.word	-536812928
 564              		.cfi_endproc
 565              	.LFE23:
 566              		.size	CyIntClearPending, .-CyIntClearPending
 567              		.section	.text.CyHalt,"ax",%progbits
 568              		.align	2
 569              		.global	CyHalt
 570              		.code	16
 571              		.thumb_func
 572              		.type	CyHalt, %function
 573              	CyHalt:
 574              	.LFB24:
2355:Generated_Source\PSoC4/CyLib.c **** 
2356:Generated_Source\PSoC4/CyLib.c **** 
2357:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2358:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2359:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2360:Generated_Source\PSoC4/CyLib.c **** *
2361:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2362:Generated_Source\PSoC4/CyLib.c **** *
2363:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2364:Generated_Source\PSoC4/CyLib.c **** *
2365:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2366:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2367:Generated_Source\PSoC4/CyLib.c **** {
 575              		.loc 1 2367 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              		@ link register save eliminated.
 580              	.LVL31:
2368:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2369:Generated_Source\PSoC4/CyLib.c ****     {
2370:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2371:Generated_Source\PSoC4/CyLib.c ****     }
2372:Generated_Source\PSoC4/CyLib.c **** 
2373:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2374:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2375:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2376:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 581              		.loc 1 2376 0
 582              		.syntax divided
 583              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 584 0000 01BE     		    bkpt    1
 585              	@ 0 "" 2
2377:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 53


2378:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2379:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2380:Generated_Source\PSoC4/CyLib.c **** }
 586              		.loc 1 2380 0
 587              		.thumb
 588              		.syntax unified
 589              		@ sp needed
 590 0002 7047     		bx	lr
 591              		.cfi_endproc
 592              	.LFE24:
 593              		.size	CyHalt, .-CyHalt
 594              		.section	.text.CyIntSetSysVector,"ax",%progbits
 595              		.align	2
 596              		.global	CyIntSetSysVector
 597              		.code	16
 598              		.thumb_func
 599              		.type	CyIntSetSysVector, %function
 600              	CyIntSetSysVector:
 601              	.LFB13:
2131:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 602              		.loc 1 2131 0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 0
 605              		@ frame_needed = 0, uses_anonymous_args = 0
 606              	.LVL32:
 607 0000 70B5     		push	{r4, r5, r6, lr}
 608              		.cfi_def_cfa_offset 16
 609              		.cfi_offset 4, -16
 610              		.cfi_offset 5, -12
 611              		.cfi_offset 6, -8
 612              		.cfi_offset 14, -4
 613 0002 0400     		movs	r4, r0
 614 0004 0D00     		movs	r5, r1
 615              	.LVL33:
2135:Generated_Source\PSoC4/CyLib.c **** 
 616              		.loc 1 2135 0
 617 0006 0F28     		cmp	r0, #15
 618 0008 02D9     		bls	.L51
2135:Generated_Source\PSoC4/CyLib.c **** 
 619              		.loc 1 2135 0 is_stmt 0 discriminator 1
 620 000a 0020     		movs	r0, #0
 621              	.LVL34:
 622 000c FFF7FEFF 		bl	CyHalt
 623              	.LVL35:
 624              	.L51:
2138:Generated_Source\PSoC4/CyLib.c **** 
 625              		.loc 1 2138 0 is_stmt 1
 626 0010 A400     		lsls	r4, r4, #2
 627 0012 8023     		movs	r3, #128
 628 0014 9B05     		lsls	r3, r3, #22
 629 0016 9C46     		mov	ip, r3
 630 0018 6444     		add	r4, r4, ip
 631 001a 2068     		ldr	r0, [r4]
 632              	.LVL36:
2141:Generated_Source\PSoC4/CyLib.c **** 
 633              		.loc 1 2141 0
 634 001c 2560     		str	r5, [r4]
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 54


2144:Generated_Source\PSoC4/CyLib.c **** 
 635              		.loc 1 2144 0
 636              		@ sp needed
 637              	.LVL37:
 638 001e 70BD     		pop	{r4, r5, r6, pc}
 639              		.cfi_endproc
 640              	.LFE13:
 641              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 642              		.section	.text.CyIntGetSysVector,"ax",%progbits
 643              		.align	2
 644              		.global	CyIntGetSysVector
 645              		.code	16
 646              		.thumb_func
 647              		.type	CyIntGetSysVector, %function
 648              	CyIntGetSysVector:
 649              	.LFB14:
2165:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 650              		.loc 1 2165 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              	.LVL38:
 655 0000 10B5     		push	{r4, lr}
 656              		.cfi_def_cfa_offset 8
 657              		.cfi_offset 4, -8
 658              		.cfi_offset 14, -4
 659 0002 0400     		movs	r4, r0
 660              	.LVL39:
2168:Generated_Source\PSoC4/CyLib.c **** 
 661              		.loc 1 2168 0
 662 0004 0F28     		cmp	r0, #15
 663 0006 02D9     		bls	.L53
2168:Generated_Source\PSoC4/CyLib.c **** 
 664              		.loc 1 2168 0 is_stmt 0 discriminator 1
 665 0008 0020     		movs	r0, #0
 666              	.LVL40:
 667 000a FFF7FEFF 		bl	CyHalt
 668              	.LVL41:
 669              	.L53:
2170:Generated_Source\PSoC4/CyLib.c **** }
 670              		.loc 1 2170 0 is_stmt 1
 671 000e A400     		lsls	r4, r4, #2
 672 0010 8023     		movs	r3, #128
 673 0012 9B05     		lsls	r3, r3, #22
 674 0014 9C46     		mov	ip, r3
 675 0016 6444     		add	r4, r4, ip
 676 0018 2068     		ldr	r0, [r4]
2171:Generated_Source\PSoC4/CyLib.c **** 
 677              		.loc 1 2171 0
 678              		@ sp needed
 679 001a 10BD     		pop	{r4, pc}
 680              		.cfi_endproc
 681              	.LFE14:
 682              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 683              		.section	.text.CyIntSetVector,"ax",%progbits
 684              		.align	2
 685              		.global	CyIntSetVector
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 55


 686              		.code	16
 687              		.thumb_func
 688              		.type	CyIntSetVector, %function
 689              	CyIntSetVector:
 690              	.LFB15:
2187:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 691              		.loc 1 2187 0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 0
 694              		@ frame_needed = 0, uses_anonymous_args = 0
 695              	.LVL42:
 696 0000 70B5     		push	{r4, r5, r6, lr}
 697              		.cfi_def_cfa_offset 16
 698              		.cfi_offset 4, -16
 699              		.cfi_offset 5, -12
 700              		.cfi_offset 6, -8
 701              		.cfi_offset 14, -4
 702 0002 0400     		movs	r4, r0
 703 0004 0D00     		movs	r5, r1
 704              	.LVL43:
2191:Generated_Source\PSoC4/CyLib.c **** 
 705              		.loc 1 2191 0
 706 0006 1F28     		cmp	r0, #31
 707 0008 02D9     		bls	.L55
2191:Generated_Source\PSoC4/CyLib.c **** 
 708              		.loc 1 2191 0 is_stmt 0 discriminator 1
 709 000a 0020     		movs	r0, #0
 710              	.LVL44:
 711 000c FFF7FEFF 		bl	CyHalt
 712              	.LVL45:
 713              	.L55:
2194:Generated_Source\PSoC4/CyLib.c **** 
 714              		.loc 1 2194 0 is_stmt 1
 715 0010 1034     		adds	r4, r4, #16
 716 0012 A400     		lsls	r4, r4, #2
 717 0014 8023     		movs	r3, #128
 718 0016 9B05     		lsls	r3, r3, #22
 719 0018 9C46     		mov	ip, r3
 720 001a 6444     		add	r4, r4, ip
 721 001c 2068     		ldr	r0, [r4]
 722              	.LVL46:
2197:Generated_Source\PSoC4/CyLib.c **** 
 723              		.loc 1 2197 0
 724 001e 2560     		str	r5, [r4]
2200:Generated_Source\PSoC4/CyLib.c **** 
 725              		.loc 1 2200 0
 726              		@ sp needed
 727              	.LVL47:
 728 0020 70BD     		pop	{r4, r5, r6, pc}
 729              		.cfi_endproc
 730              	.LFE15:
 731              		.size	CyIntSetVector, .-CyIntSetVector
 732 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 733              		.align	2
 734              		.global	CyIntGetVector
 735              		.code	16
 736              		.thumb_func
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 56


 737              		.type	CyIntGetVector, %function
 738              	CyIntGetVector:
 739              	.LFB16:
2215:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 740              		.loc 1 2215 0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 744              	.LVL48:
 745 0000 10B5     		push	{r4, lr}
 746              		.cfi_def_cfa_offset 8
 747              		.cfi_offset 4, -8
 748              		.cfi_offset 14, -4
 749 0002 0400     		movs	r4, r0
 750              	.LVL49:
2218:Generated_Source\PSoC4/CyLib.c **** 
 751              		.loc 1 2218 0
 752 0004 1F28     		cmp	r0, #31
 753 0006 02D9     		bls	.L57
2218:Generated_Source\PSoC4/CyLib.c **** 
 754              		.loc 1 2218 0 is_stmt 0 discriminator 1
 755 0008 0020     		movs	r0, #0
 756              	.LVL50:
 757 000a FFF7FEFF 		bl	CyHalt
 758              	.LVL51:
 759              	.L57:
2220:Generated_Source\PSoC4/CyLib.c **** }
 760              		.loc 1 2220 0 is_stmt 1
 761 000e 1034     		adds	r4, r4, #16
 762 0010 A400     		lsls	r4, r4, #2
 763 0012 8023     		movs	r3, #128
 764 0014 9B05     		lsls	r3, r3, #22
 765 0016 9C46     		mov	ip, r3
 766 0018 6444     		add	r4, r4, ip
 767 001a 2068     		ldr	r0, [r4]
2221:Generated_Source\PSoC4/CyLib.c **** 
 768              		.loc 1 2221 0
 769              		@ sp needed
 770 001c 10BD     		pop	{r4, pc}
 771              		.cfi_endproc
 772              	.LFE16:
 773              		.size	CyIntGetVector, .-CyIntGetVector
 774 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 775              		.align	2
 776              		.global	CyIntSetPriority
 777              		.code	16
 778              		.thumb_func
 779              		.type	CyIntSetPriority, %function
 780              	CyIntSetPriority:
 781              	.LFB17:
2234:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 782              		.loc 1 2234 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              	.LVL52:
 787 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 57


 788              		.cfi_def_cfa_offset 16
 789              		.cfi_offset 4, -16
 790              		.cfi_offset 5, -12
 791              		.cfi_offset 6, -8
 792              		.cfi_offset 14, -4
 793 0002 0400     		movs	r4, r0
 794 0004 0E00     		movs	r6, r1
2239:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 795              		.loc 1 2239 0
 796 0006 0329     		cmp	r1, #3
 797 0008 02D9     		bls	.L59
2239:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 798              		.loc 1 2239 0 is_stmt 0 discriminator 1
 799 000a 0020     		movs	r0, #0
 800              	.LVL53:
 801 000c FFF7FEFF 		bl	CyHalt
 802              	.LVL54:
 803              	.L59:
2240:Generated_Source\PSoC4/CyLib.c **** 
 804              		.loc 1 2240 0 is_stmt 1
 805 0010 1F2C     		cmp	r4, #31
 806 0012 02D9     		bls	.L60
2240:Generated_Source\PSoC4/CyLib.c **** 
 807              		.loc 1 2240 0 is_stmt 0 discriminator 1
 808 0014 0020     		movs	r0, #0
 809 0016 FFF7FEFF 		bl	CyHalt
 810              	.LVL55:
 811              	.L60:
2242:Generated_Source\PSoC4/CyLib.c **** 
 812              		.loc 1 2242 0 is_stmt 1
 813 001a 0325     		movs	r5, #3
 814 001c 2540     		ands	r5, r4
 815 001e ED00     		lsls	r5, r5, #3
 816 0020 0635     		adds	r5, r5, #6
 817              	.LVL56:
2244:Generated_Source\PSoC4/CyLib.c **** 
 818              		.loc 1 2244 0
 819 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 820              	.LVL57:
2246:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 821              		.loc 1 2246 0
 822 0026 A408     		lsrs	r4, r4, #2
 823 0028 A400     		lsls	r4, r4, #2
 824 002a 074B     		ldr	r3, .L61
 825 002c 9C46     		mov	ip, r3
 826 002e 6444     		add	r4, r4, ip
 827 0030 2168     		ldr	r1, [r4]
 828              	.LVL58:
2247:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 829              		.loc 1 2247 0
 830 0032 0323     		movs	r3, #3
 831 0034 AB40     		lsls	r3, r3, r5
 832 0036 9943     		bics	r1, r3
 833              	.LVL59:
 834 0038 0B00     		movs	r3, r1
 835              	.LVL60:
2248:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 58


 836              		.loc 1 2248 0
 837 003a 3100     		movs	r1, r6
 838              	.LVL61:
 839 003c A940     		lsls	r1, r1, r5
 840 003e 1943     		orrs	r1, r3
 841              	.LVL62:
2249:Generated_Source\PSoC4/CyLib.c **** 
 842              		.loc 1 2249 0
 843 0040 2160     		str	r1, [r4]
2251:Generated_Source\PSoC4/CyLib.c **** }
 844              		.loc 1 2251 0
 845 0042 FFF7FEFF 		bl	CyExitCriticalSection
 846              	.LVL63:
2252:Generated_Source\PSoC4/CyLib.c **** 
 847              		.loc 1 2252 0
 848              		@ sp needed
 849              	.LVL64:
 850 0046 70BD     		pop	{r4, r5, r6, pc}
 851              	.L62:
 852              		.align	2
 853              	.L61:
 854 0048 00E400E0 		.word	-536812544
 855              		.cfi_endproc
 856              	.LFE17:
 857              		.size	CyIntSetPriority, .-CyIntSetPriority
 858              		.section	.text.CyIntGetPriority,"ax",%progbits
 859              		.align	2
 860              		.global	CyIntGetPriority
 861              		.code	16
 862              		.thumb_func
 863              		.type	CyIntGetPriority, %function
 864              	CyIntGetPriority:
 865              	.LFB18:
2268:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 866              		.loc 1 2268 0
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 0
 869              		@ frame_needed = 0, uses_anonymous_args = 0
 870              	.LVL65:
 871 0000 10B5     		push	{r4, lr}
 872              		.cfi_def_cfa_offset 8
 873              		.cfi_offset 4, -8
 874              		.cfi_offset 14, -4
 875 0002 0400     		movs	r4, r0
2271:Generated_Source\PSoC4/CyLib.c **** 
 876              		.loc 1 2271 0
 877 0004 1F28     		cmp	r0, #31
 878 0006 02D9     		bls	.L64
2271:Generated_Source\PSoC4/CyLib.c **** 
 879              		.loc 1 2271 0 is_stmt 0 discriminator 1
 880 0008 0020     		movs	r0, #0
 881              	.LVL66:
 882 000a FFF7FEFF 		bl	CyHalt
 883              	.LVL67:
 884              	.L64:
2273:Generated_Source\PSoC4/CyLib.c **** 
 885              		.loc 1 2273 0 is_stmt 1
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 59


 886 000e A308     		lsrs	r3, r4, #2
 887 0010 9B00     		lsls	r3, r3, #2
 888 0012 054A     		ldr	r2, .L65
 889 0014 9446     		mov	ip, r2
 890 0016 6344     		add	r3, r3, ip
 891 0018 1868     		ldr	r0, [r3]
 892 001a 0323     		movs	r3, #3
 893 001c 1C40     		ands	r4, r3
 894 001e E400     		lsls	r4, r4, #3
 895 0020 0634     		adds	r4, r4, #6
 896 0022 E040     		lsrs	r0, r0, r4
 897              	.LVL68:
2275:Generated_Source\PSoC4/CyLib.c **** }
 898              		.loc 1 2275 0
 899 0024 1840     		ands	r0, r3
 900              	.LVL69:
2276:Generated_Source\PSoC4/CyLib.c **** 
 901              		.loc 1 2276 0
 902              		@ sp needed
 903 0026 10BD     		pop	{r4, pc}
 904              	.L66:
 905              		.align	2
 906              	.L65:
 907 0028 00E400E0 		.word	-536812544
 908              		.cfi_endproc
 909              	.LFE18:
 910              		.size	CyIntGetPriority, .-CyIntGetPriority
 911              		.section	.text.CySoftwareReset,"ax",%progbits
 912              		.align	2
 913              		.global	CySoftwareReset
 914              		.code	16
 915              		.thumb_func
 916              		.type	CySoftwareReset, %function
 917              	CySoftwareReset:
 918              	.LFB25:
2381:Generated_Source\PSoC4/CyLib.c **** 
2382:Generated_Source\PSoC4/CyLib.c **** 
2383:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2384:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2385:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2386:Generated_Source\PSoC4/CyLib.c **** *
2387:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2388:Generated_Source\PSoC4/CyLib.c **** *
2389:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2390:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2391:Generated_Source\PSoC4/CyLib.c **** {
 919              		.loc 1 2391 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 0
 922              		@ frame_needed = 0, uses_anonymous_args = 0
 923              		@ link register save eliminated.
2392:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2393:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2394:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2395:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2396:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 924              		.loc 1 2396 0
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 60


 925 0000 034A     		ldr	r2, .L68
 926 0002 1368     		ldr	r3, [r2]
 927 0004 1B04     		lsls	r3, r3, #16
 928 0006 1B0C     		lsrs	r3, r3, #16
2397:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 929              		.loc 1 2397 0
 930 0008 0249     		ldr	r1, .L68+4
 931 000a 0B43     		orrs	r3, r1
2396:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 932              		.loc 1 2396 0
 933 000c 1360     		str	r3, [r2]
2398:Generated_Source\PSoC4/CyLib.c **** }
 934              		.loc 1 2398 0
 935              		@ sp needed
 936 000e 7047     		bx	lr
 937              	.L69:
 938              		.align	2
 939              	.L68:
 940 0010 0CED00E0 		.word	-536810228
 941 0014 0400FA05 		.word	100270084
 942              		.cfi_endproc
 943              	.LFE25:
 944              		.size	CySoftwareReset, .-CySoftwareReset
 945              		.section	.text.CyDelay,"ax",%progbits
 946              		.align	2
 947              		.global	CyDelay
 948              		.code	16
 949              		.thumb_func
 950              		.type	CyDelay, %function
 951              	CyDelay:
 952              	.LFB26:
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c **** 
2401:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2402:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2403:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2404:Generated_Source\PSoC4/CyLib.c **** *
2405:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2406:Generated_Source\PSoC4/CyLib.c **** *
2407:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2408:Generated_Source\PSoC4/CyLib.c **** *
2409:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2410:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2411:Generated_Source\PSoC4/CyLib.c **** {
 953              		.loc 1 2411 0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957              	.LVL70:
 958 0000 10B5     		push	{r4, lr}
 959              		.cfi_def_cfa_offset 8
 960              		.cfi_offset 4, -8
 961              		.cfi_offset 14, -4
 962 0002 0400     		movs	r4, r0
2412:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 963              		.loc 1 2412 0
 964 0004 06E0     		b	.L71
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 61


 965              	.LVL71:
 966              	.L72:
2413:Generated_Source\PSoC4/CyLib.c ****     {
2414:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2415:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2416:Generated_Source\PSoC4/CyLib.c ****          */
2417:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 967              		.loc 1 2417 0
 968 0006 084B     		ldr	r3, .L73
 969 0008 1868     		ldr	r0, [r3]
 970 000a FFF7FEFF 		bl	CyDelayCycles
 971              	.LVL72:
2418:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 972              		.loc 1 2418 0
 973 000e 074B     		ldr	r3, .L73+4
 974 0010 9C46     		mov	ip, r3
 975 0012 6444     		add	r4, r4, ip
 976              	.LVL73:
 977              	.L71:
2412:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 978              		.loc 1 2412 0
 979 0014 8023     		movs	r3, #128
 980 0016 1B02     		lsls	r3, r3, #8
 981 0018 9C42     		cmp	r4, r3
 982 001a F4D8     		bhi	.L72
2419:Generated_Source\PSoC4/CyLib.c ****     }
2420:Generated_Source\PSoC4/CyLib.c **** 
2421:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 983              		.loc 1 2421 0
 984 001c 024B     		ldr	r3, .L73
 985 001e 5868     		ldr	r0, [r3, #4]
 986 0020 6043     		muls	r0, r4
 987 0022 FFF7FEFF 		bl	CyDelayCycles
 988              	.LVL74:
2422:Generated_Source\PSoC4/CyLib.c **** }
 989              		.loc 1 2422 0
 990              		@ sp needed
 991              	.LVL75:
 992 0026 10BD     		pop	{r4, pc}
 993              	.L74:
 994              		.align	2
 995              	.L73:
 996 0028 00000000 		.word	.LANCHOR0
 997 002c 0080FFFF 		.word	-32768
 998              		.cfi_endproc
 999              	.LFE26:
 1000              		.size	CyDelay, .-CyDelay
 1001              		.section	.text.CyDelayUs,"ax",%progbits
 1002              		.align	2
 1003              		.global	CyDelayUs
 1004              		.code	16
 1005              		.thumb_func
 1006              		.type	CyDelayUs, %function
 1007              	CyDelayUs:
 1008              	.LFB27:
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 62


2425:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2426:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2427:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2428:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2429:Generated_Source\PSoC4/CyLib.c **** *
2430:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2433:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2434:Generated_Source\PSoC4/CyLib.c **** {
 1009              		.loc 1 2434 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 0
 1012              		@ frame_needed = 0, uses_anonymous_args = 0
 1013              	.LVL76:
 1014 0000 10B5     		push	{r4, lr}
 1015              		.cfi_def_cfa_offset 8
 1016              		.cfi_offset 4, -8
 1017              		.cfi_offset 14, -4
2435:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1018              		.loc 1 2435 0
 1019 0002 034B     		ldr	r3, .L76
 1020 0004 1B7A     		ldrb	r3, [r3, #8]
 1021 0006 5843     		muls	r0, r3
 1022              	.LVL77:
 1023 0008 FFF7FEFF 		bl	CyDelayCycles
 1024              	.LVL78:
2436:Generated_Source\PSoC4/CyLib.c **** }
 1025              		.loc 1 2436 0
 1026              		@ sp needed
 1027 000c 10BD     		pop	{r4, pc}
 1028              	.L77:
 1029 000e C046     		.align	2
 1030              	.L76:
 1031 0010 00000000 		.word	.LANCHOR0
 1032              		.cfi_endproc
 1033              	.LFE27:
 1034              		.size	CyDelayUs, .-CyDelayUs
 1035              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1036              		.align	2
 1037              		.global	CySysClkWriteImoFreq
 1038              		.code	16
 1039              		.thumb_func
 1040              		.type	CySysClkWriteImoFreq, %function
 1041              	CySysClkWriteImoFreq:
 1042              	.LFB5:
 577:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1043              		.loc 1 577 0
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 8
 1046              		@ frame_needed = 0, uses_anonymous_args = 0
 1047              	.LVL79:
 1048 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1049              		.cfi_def_cfa_offset 20
 1050              		.cfi_offset 4, -20
 1051              		.cfi_offset 5, -16
 1052              		.cfi_offset 6, -12
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 63


 1053              		.cfi_offset 7, -8
 1054              		.cfi_offset 14, -4
 1055 0002 5746     		mov	r7, r10
 1056 0004 4E46     		mov	r6, r9
 1057 0006 C0B4     		push	{r6, r7}
 1058              		.cfi_def_cfa_offset 28
 1059              		.cfi_offset 9, -28
 1060              		.cfi_offset 10, -24
 1061 0008 83B0     		sub	sp, sp, #12
 1062              		.cfi_def_cfa_offset 40
 1063 000a 0400     		movs	r4, r0
 600:Generated_Source\PSoC4/CyLib.c **** 
 1064              		.loc 1 600 0
 1065 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1066              	.LVL80:
 1067 0010 0190     		str	r0, [sp, #4]
 1068              	.LVL81:
 650:Generated_Source\PSoC4/CyLib.c ****         {
 1069              		.loc 1 650 0
 1070 0012 E71E     		subs	r7, r4, #3
 1071 0014 2D2F     		cmp	r7, #45
 1072 0016 74D8     		bhi	.L79
 652:Generated_Source\PSoC4/CyLib.c ****             {
 1073              		.loc 1 652 0
 1074 0018 3F4B     		ldr	r3, .L89
 1075 001a 1B78     		ldrb	r3, [r3]
 1076 001c DBB2     		uxtb	r3, r3
 1077 001e 9C42     		cmp	r4, r3
 1078 0020 08D8     		bhi	.L80
 654:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1079              		.loc 1 654 0
 1080 0022 3E4B     		ldr	r3, .L89+4
 1081 0024 1B78     		ldrb	r3, [r3]
 1082 0026 DBB2     		uxtb	r3, r3
 1083 0028 9A46     		mov	r10, r3
 1084              	.LVL82:
 655:Generated_Source\PSoC4/CyLib.c ****             }
 1085              		.loc 1 655 0
 1086 002a 3D4B     		ldr	r3, .L89+8
 1087 002c 1B78     		ldrb	r3, [r3]
 1088 002e DBB2     		uxtb	r3, r3
 1089 0030 9946     		mov	r9, r3
 1090              	.LVL83:
 1091 0032 31E0     		b	.L81
 1092              	.LVL84:
 1093              	.L80:
 657:Generated_Source\PSoC4/CyLib.c ****             {
 1094              		.loc 1 657 0
 1095 0034 3B4B     		ldr	r3, .L89+12
 1096 0036 1B78     		ldrb	r3, [r3]
 1097 0038 DBB2     		uxtb	r3, r3
 1098 003a 9C42     		cmp	r4, r3
 1099 003c 08D8     		bhi	.L82
 659:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1100              		.loc 1 659 0
 1101 003e 3A4B     		ldr	r3, .L89+16
 1102 0040 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 64


 1103 0042 DBB2     		uxtb	r3, r3
 1104 0044 9A46     		mov	r10, r3
 1105              	.LVL85:
 660:Generated_Source\PSoC4/CyLib.c ****             }
 1106              		.loc 1 660 0
 1107 0046 394B     		ldr	r3, .L89+20
 1108 0048 1B78     		ldrb	r3, [r3]
 1109 004a DBB2     		uxtb	r3, r3
 1110 004c 9946     		mov	r9, r3
 1111              	.LVL86:
 1112 004e 23E0     		b	.L81
 1113              	.LVL87:
 1114              	.L82:
 662:Generated_Source\PSoC4/CyLib.c ****             {
 1115              		.loc 1 662 0
 1116 0050 374B     		ldr	r3, .L89+24
 1117 0052 1B78     		ldrb	r3, [r3]
 1118 0054 DBB2     		uxtb	r3, r3
 1119 0056 9C42     		cmp	r4, r3
 1120 0058 08D8     		bhi	.L83
 664:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1121              		.loc 1 664 0
 1122 005a 364B     		ldr	r3, .L89+28
 1123 005c 1B78     		ldrb	r3, [r3]
 1124 005e DBB2     		uxtb	r3, r3
 1125 0060 9A46     		mov	r10, r3
 1126              	.LVL88:
 665:Generated_Source\PSoC4/CyLib.c ****             }
 1127              		.loc 1 665 0
 1128 0062 354B     		ldr	r3, .L89+32
 1129 0064 1B78     		ldrb	r3, [r3]
 1130 0066 DBB2     		uxtb	r3, r3
 1131 0068 9946     		mov	r9, r3
 1132              	.LVL89:
 1133 006a 15E0     		b	.L81
 1134              	.LVL90:
 1135              	.L83:
 667:Generated_Source\PSoC4/CyLib.c ****             {
 1136              		.loc 1 667 0
 1137 006c 334B     		ldr	r3, .L89+36
 1138 006e 1B78     		ldrb	r3, [r3]
 1139 0070 DBB2     		uxtb	r3, r3
 1140 0072 9C42     		cmp	r4, r3
 1141 0074 08D8     		bhi	.L84
 669:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1142              		.loc 1 669 0
 1143 0076 324B     		ldr	r3, .L89+40
 1144 0078 1B78     		ldrb	r3, [r3]
 1145 007a DBB2     		uxtb	r3, r3
 1146 007c 9A46     		mov	r10, r3
 1147              	.LVL91:
 670:Generated_Source\PSoC4/CyLib.c ****             }
 1148              		.loc 1 670 0
 1149 007e 314B     		ldr	r3, .L89+44
 1150 0080 1B78     		ldrb	r3, [r3]
 1151 0082 DBB2     		uxtb	r3, r3
 1152 0084 9946     		mov	r9, r3
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 65


 1153              	.LVL92:
 1154 0086 07E0     		b	.L81
 1155              	.LVL93:
 1156              	.L84:
 674:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1157              		.loc 1 674 0
 1158 0088 2F4B     		ldr	r3, .L89+48
 1159 008a 1B78     		ldrb	r3, [r3]
 1160 008c DBB2     		uxtb	r3, r3
 1161 008e 9A46     		mov	r10, r3
 1162              	.LVL94:
 675:Generated_Source\PSoC4/CyLib.c ****             }
 1163              		.loc 1 675 0
 1164 0090 2E4B     		ldr	r3, .L89+52
 1165 0092 1B78     		ldrb	r3, [r3]
 1166 0094 DBB2     		uxtb	r3, r3
 1167 0096 9946     		mov	r9, r3
 1168              	.LVL95:
 1169              	.L81:
 679:Generated_Source\PSoC4/CyLib.c **** 
 1170              		.loc 1 679 0
 1171 0098 2D4B     		ldr	r3, .L89+56
 1172 009a DE5D     		ldrb	r6, [r3, r7]
 1173              	.LVL96:
 691:Generated_Source\PSoC4/CyLib.c ****             {
 1174              		.loc 1 691 0
 1175 009c 2F2E     		cmp	r6, #47
 1176 009e 09D9     		bls	.L85
 691:Generated_Source\PSoC4/CyLib.c ****             {
 1177              		.loc 1 691 0 is_stmt 0 discriminator 1
 1178 00a0 2A2C     		cmp	r4, #42
 1179 00a2 07D9     		bls	.L85
 694:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1180              		.loc 1 694 0 is_stmt 1
 1181 00a4 1922     		movs	r2, #25
 1182 00a6 2B4B     		ldr	r3, .L89+60
 1183 00a8 1A60     		str	r2, [r3]
 1184              	.LVL97:
 697:Generated_Source\PSoC4/CyLib.c **** 
 1185              		.loc 1 697 0
 1186 00aa 0520     		movs	r0, #5
 1187 00ac FFF7FEFF 		bl	CyDelayCycles
 1188              	.LVL98:
 699:Generated_Source\PSoC4/CyLib.c ****             }
 1189              		.loc 1 699 0
 1190 00b0 1925     		movs	r5, #25
 1191 00b2 03E0     		b	.L86
 1192              	.LVL99:
 1193              	.L85:
 703:Generated_Source\PSoC4/CyLib.c ****             }
 1194              		.loc 1 703 0
 1195 00b4 274B     		ldr	r3, .L89+60
 1196 00b6 1D68     		ldr	r5, [r3]
 1197 00b8 3F23     		movs	r3, #63
 1198 00ba 1D40     		ands	r5, r3
 1199              	.LVL100:
 1200              	.L86:
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 66


 715:Generated_Source\PSoC4/CyLib.c ****             {
 1201              		.loc 1 715 0
 1202 00bc B542     		cmp	r5, r6
 1203 00be 06D9     		bls	.L87
 718:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1204              		.loc 1 718 0
 1205 00c0 234B     		ldr	r3, .L89+56
 1206 00c2 DA5D     		ldrb	r2, [r3, r7]
 1207 00c4 234B     		ldr	r3, .L89+60
 1208 00c6 1A60     		str	r2, [r3]
 719:Generated_Source\PSoC4/CyLib.c ****             }
 1209              		.loc 1 719 0
 1210 00c8 0520     		movs	r0, #5
 1211 00ca FFF7FEFF 		bl	CyDelayCycles
 1212              	.LVL101:
 1213              	.L87:
 738:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1214              		.loc 1 738 0
 1215 00ce 1F4B     		ldr	r3, .L89+52
 1216 00d0 9C46     		mov	ip, r3
 1217 00d2 6444     		add	r4, r4, ip
 1218              	.LVL102:
 1219 00d4 2378     		ldrb	r3, [r4]
 1220 00d6 DBB2     		uxtb	r3, r3
 1221              	.LVL103:
 742:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1222              		.loc 1 742 0
 1223 00d8 1F4A     		ldr	r2, .L89+64
 1224 00da 1360     		str	r3, [r2]
 743:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1225              		.loc 1 743 0
 1226 00dc 1F4B     		ldr	r3, .L89+68
 1227              	.LVL104:
 1228 00de 5246     		mov	r2, r10
 1229              	.LVL105:
 1230 00e0 1A60     		str	r2, [r3]
 1231              	.LVL106:
 744:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1232              		.loc 1 744 0
 1233 00e2 1F4B     		ldr	r3, .L89+72
 1234 00e4 4A46     		mov	r2, r9
 1235 00e6 1A60     		str	r2, [r3]
 745:Generated_Source\PSoC4/CyLib.c **** 
 1236              		.loc 1 745 0
 1237 00e8 0520     		movs	r0, #5
 1238 00ea FFF7FEFF 		bl	CyDelayUs
 1239              	.LVL107:
 747:Generated_Source\PSoC4/CyLib.c ****             {
 1240              		.loc 1 747 0
 1241 00ee B542     		cmp	r5, r6
 1242 00f0 0AD2     		bcs	.L88
 750:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1243              		.loc 1 750 0
 1244 00f2 174B     		ldr	r3, .L89+56
 1245 00f4 DA5D     		ldrb	r2, [r3, r7]
 1246 00f6 174B     		ldr	r3, .L89+60
 1247 00f8 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 67


 751:Generated_Source\PSoC4/CyLib.c ****             }
 1248              		.loc 1 751 0
 1249 00fa 0520     		movs	r0, #5
 1250 00fc FFF7FEFF 		bl	CyDelayCycles
 1251              	.LVL108:
 1252 0100 02E0     		b	.L88
 1253              	.LVL109:
 1254              	.L79:
 757:Generated_Source\PSoC4/CyLib.c ****         }
 1255              		.loc 1 757 0 discriminator 1
 1256 0102 0020     		movs	r0, #0
 1257 0104 FFF7FEFF 		bl	CyHalt
 1258              	.LVL110:
 1259              	.L88:
 776:Generated_Source\PSoC4/CyLib.c ****     }
 1260              		.loc 1 776 0
 1261 0108 0198     		ldr	r0, [sp, #4]
 1262 010a FFF7FEFF 		bl	CyExitCriticalSection
 1263              	.LVL111:
 777:Generated_Source\PSoC4/CyLib.c **** 
 1264              		.loc 1 777 0
 1265 010e 03B0     		add	sp, sp, #12
 1266              		@ sp needed
 1267              	.LVL112:
 1268 0110 0CBC     		pop	{r2, r3}
 1269 0112 9146     		mov	r9, r2
 1270 0114 9A46     		mov	r10, r3
 1271 0116 F0BD     		pop	{r4, r5, r6, r7, pc}
 1272              	.L90:
 1273              		.align	2
 1274              	.L89:
 1275 0118 C0F1FF0F 		.word	268431808
 1276 011c C1F1FF0F 		.word	268431809
 1277 0120 C2F1FF0F 		.word	268431810
 1278 0124 C3F1FF0F 		.word	268431811
 1279 0128 C4F1FF0F 		.word	268431812
 1280 012c C5F1FF0F 		.word	268431813
 1281 0130 C6F1FF0F 		.word	268431814
 1282 0134 C7F1FF0F 		.word	268431815
 1283 0138 C8F1FF0F 		.word	268431816
 1284 013c C9F1FF0F 		.word	268431817
 1285 0140 CAF1FF0F 		.word	268431818
 1286 0144 CBF1FF0F 		.word	268431819
 1287 0148 CCF1FF0F 		.word	268431820
 1288 014c CDF1FF0F 		.word	268431821
 1289 0150 00000000 		.word	.LANCHOR1
 1290 0154 2CFF0B40 		.word	1074528044
 1291 0158 28FF0B40 		.word	1074528040
 1292 015c 1CFF0B40 		.word	1074528028
 1293 0160 20FF0B40 		.word	1074528032
 1294              		.cfi_endproc
 1295              	.LFE5:
 1296              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1297              		.section	.text.CySysLvdEnable,"ax",%progbits
 1298              		.align	2
 1299              		.global	CySysLvdEnable
 1300              		.code	16
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 68


 1301              		.thumb_func
 1302              		.type	CySysLvdEnable, %function
 1303              	CySysLvdEnable:
 1304              	.LFB6:
1970:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1305              		.loc 1 1970 0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 0
 1308              		@ frame_needed = 0, uses_anonymous_args = 0
 1309              	.LVL113:
 1310 0000 70B5     		push	{r4, r5, r6, lr}
 1311              		.cfi_def_cfa_offset 16
 1312              		.cfi_offset 4, -16
 1313              		.cfi_offset 5, -12
 1314              		.cfi_offset 6, -8
 1315              		.cfi_offset 14, -4
 1316 0002 0300     		movs	r3, r0
1972:Generated_Source\PSoC4/CyLib.c **** 
 1317              		.loc 1 1972 0
 1318 0004 0D4C     		ldr	r4, .L92
 1319 0006 2268     		ldr	r2, [r4]
 1320 0008 0225     		movs	r5, #2
 1321 000a AA43     		bics	r2, r5
 1322 000c 2260     		str	r2, [r4]
1975:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1323              		.loc 1 1975 0
 1324 000e 0C4A     		ldr	r2, .L92+4
 1325 0010 1168     		ldr	r1, [r2]
 1326 0012 1E20     		movs	r0, #30
 1327              	.LVL114:
 1328 0014 8143     		bics	r1, r0
1976:Generated_Source\PSoC4/CyLib.c **** 
 1329              		.loc 1 1976 0
 1330 0016 5B00     		lsls	r3, r3, #1
 1331              	.LVL115:
 1332 0018 1840     		ands	r0, r3
1975:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1333              		.loc 1 1975 0
 1334 001a 0843     		orrs	r0, r1
 1335 001c 1060     		str	r0, [r2]
1979:Generated_Source\PSoC4/CyLib.c **** 
 1336              		.loc 1 1979 0
 1337 001e 1168     		ldr	r1, [r2]
 1338 0020 0123     		movs	r3, #1
 1339 0022 0B43     		orrs	r3, r1
 1340 0024 1360     		str	r3, [r2]
1982:Generated_Source\PSoC4/CyLib.c **** 
 1341              		.loc 1 1982 0
 1342 0026 FA20     		movs	r0, #250
 1343 0028 8000     		lsls	r0, r0, #2
 1344 002a FFF7FEFF 		bl	CyDelayUs
 1345              	.LVL116:
1985:Generated_Source\PSoC4/CyLib.c **** 
 1346              		.loc 1 1985 0
 1347 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1348              	.LVL117:
1988:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 69


 1349              		.loc 1 1988 0
 1350 0032 2368     		ldr	r3, [r4]
 1351 0034 1D43     		orrs	r5, r3
 1352 0036 2560     		str	r5, [r4]
1989:Generated_Source\PSoC4/CyLib.c **** 
 1353              		.loc 1 1989 0
 1354              		@ sp needed
 1355 0038 70BD     		pop	{r4, r5, r6, pc}
 1356              	.L93:
 1357 003a C046     		.align	2
 1358              	.L92:
 1359 003c 08000B40 		.word	1074462728
 1360 0040 18000B40 		.word	1074462744
 1361              		.cfi_endproc
 1362              	.LFE6:
 1363              		.size	CySysLvdEnable, .-CySysLvdEnable
 1364              		.global	__aeabi_uidiv
 1365              		.section	.text.CyDelayFreq,"ax",%progbits
 1366              		.align	2
 1367              		.global	CyDelayFreq
 1368              		.code	16
 1369              		.thumb_func
 1370              		.type	CyDelayFreq, %function
 1371              	CyDelayFreq:
 1372              	.LFB28:
2437:Generated_Source\PSoC4/CyLib.c **** 
2438:Generated_Source\PSoC4/CyLib.c **** 
2439:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2440:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2441:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2442:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2443:Generated_Source\PSoC4/CyLib.c **** *
2444:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2445:Generated_Source\PSoC4/CyLib.c **** *
2446:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2447:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2448:Generated_Source\PSoC4/CyLib.c **** {
 1373              		.loc 1 2448 0
 1374              		.cfi_startproc
 1375              		@ args = 0, pretend = 0, frame = 0
 1376              		@ frame_needed = 0, uses_anonymous_args = 0
 1377              	.LVL118:
 1378 0000 70B5     		push	{r4, r5, r6, lr}
 1379              		.cfi_def_cfa_offset 16
 1380              		.cfi_offset 4, -16
 1381              		.cfi_offset 5, -12
 1382              		.cfi_offset 6, -8
 1383              		.cfi_offset 14, -4
2449:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1384              		.loc 1 2449 0
 1385 0002 0028     		cmp	r0, #0
 1386 0004 02D0     		beq	.L95
2450:Generated_Source\PSoC4/CyLib.c ****     {
2451:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1387              		.loc 1 2451 0
 1388 0006 0C4B     		ldr	r3, .L97
 1389 0008 D860     		str	r0, [r3, #12]
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 70


 1390 000a 02E0     		b	.L96
 1391              	.L95:
2452:Generated_Source\PSoC4/CyLib.c ****     }
2453:Generated_Source\PSoC4/CyLib.c ****     else
2454:Generated_Source\PSoC4/CyLib.c ****     {
2455:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1392              		.loc 1 2455 0
 1393 000c 0B4A     		ldr	r2, .L97+4
 1394 000e 0A4B     		ldr	r3, .L97
 1395 0010 DA60     		str	r2, [r3, #12]
 1396              	.L96:
2456:Generated_Source\PSoC4/CyLib.c ****     }
2457:Generated_Source\PSoC4/CyLib.c **** 
2458:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1397              		.loc 1 2458 0
 1398 0012 094C     		ldr	r4, .L97
 1399 0014 E568     		ldr	r5, [r4, #12]
 1400 0016 0A4B     		ldr	r3, .L97+8
 1401 0018 E818     		adds	r0, r5, r3
 1402              	.LVL119:
 1403 001a 0A49     		ldr	r1, .L97+12
 1404 001c FFF7FEFF 		bl	__aeabi_uidiv
 1405              	.LVL120:
 1406 0020 2072     		strb	r0, [r4, #8]
2459:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1407              		.loc 1 2459 0
 1408 0022 094B     		ldr	r3, .L97+16
 1409 0024 E818     		adds	r0, r5, r3
 1410 0026 FA21     		movs	r1, #250
 1411 0028 8900     		lsls	r1, r1, #2
 1412 002a FFF7FEFF 		bl	__aeabi_uidiv
 1413              	.LVL121:
 1414 002e 6060     		str	r0, [r4, #4]
2460:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1415              		.loc 1 2460 0
 1416 0030 C003     		lsls	r0, r0, #15
 1417 0032 2060     		str	r0, [r4]
2461:Generated_Source\PSoC4/CyLib.c **** }
 1418              		.loc 1 2461 0
 1419              		@ sp needed
 1420 0034 70BD     		pop	{r4, r5, r6, pc}
 1421              	.L98:
 1422 0036 C046     		.align	2
 1423              	.L97:
 1424 0038 00000000 		.word	.LANCHOR0
 1425 003c 006CDC02 		.word	48000000
 1426 0040 3F420F00 		.word	999999
 1427 0044 40420F00 		.word	1000000
 1428 0048 E7030000 		.word	999
 1429              		.cfi_endproc
 1430              	.LFE28:
 1431              		.size	CyDelayFreq, .-CyDelayFreq
 1432              		.section	.text.CySysTickStop,"ax",%progbits
 1433              		.align	2
 1434              		.global	CySysTickStop
 1435              		.code	16
 1436              		.thumb_func
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 71


 1437              		.type	CySysTickStop, %function
 1438              	CySysTickStop:
 1439              	.LFB32:
2462:Generated_Source\PSoC4/CyLib.c **** 
2463:Generated_Source\PSoC4/CyLib.c **** 
2464:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2465:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2466:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2469:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2470:Generated_Source\PSoC4/CyLib.c **** *
2471:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2472:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2473:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2474:Generated_Source\PSoC4/CyLib.c **** *
2475:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2476:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2477:Generated_Source\PSoC4/CyLib.c **** *
2478:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2479:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2480:Generated_Source\PSoC4/CyLib.c **** {
2481:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2482:Generated_Source\PSoC4/CyLib.c ****     {
2483:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2484:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2485:Generated_Source\PSoC4/CyLib.c ****     }
2486:Generated_Source\PSoC4/CyLib.c **** 
2487:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2488:Generated_Source\PSoC4/CyLib.c **** }
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2496:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2497:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2498:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2499:Generated_Source\PSoC4/CyLib.c **** *
2500:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2501:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2502:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2503:Generated_Source\PSoC4/CyLib.c **** *
2504:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2505:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2506:Generated_Source\PSoC4/CyLib.c **** *
2507:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2508:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2509:Generated_Source\PSoC4/CyLib.c **** {
2510:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2511:Generated_Source\PSoC4/CyLib.c **** 
2512:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2513:Generated_Source\PSoC4/CyLib.c ****     {
2514:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2515:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 72


2516:Generated_Source\PSoC4/CyLib.c **** 
2517:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2518:Generated_Source\PSoC4/CyLib.c **** 
2519:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2520:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2521:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2522:Generated_Source\PSoC4/CyLib.c **** 
2523:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2524:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2525:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2526:Generated_Source\PSoC4/CyLib.c **** }
2527:Generated_Source\PSoC4/CyLib.c **** 
2528:Generated_Source\PSoC4/CyLib.c **** 
2529:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2530:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2531:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2532:Generated_Source\PSoC4/CyLib.c **** *
2533:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2534:Generated_Source\PSoC4/CyLib.c **** *
2535:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2536:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
2541:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2542:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2543:Generated_Source\PSoC4/CyLib.c **** }
2544:Generated_Source\PSoC4/CyLib.c **** 
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2547:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2548:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2549:Generated_Source\PSoC4/CyLib.c **** *
2550:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2551:Generated_Source\PSoC4/CyLib.c **** *
2552:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2553:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2554:Generated_Source\PSoC4/CyLib.c **** *
2555:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2556:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2557:Generated_Source\PSoC4/CyLib.c **** {
 1440              		.loc 1 2557 0
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 0
 1443              		@ frame_needed = 0, uses_anonymous_args = 0
 1444              		@ link register save eliminated.
2558:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1445              		.loc 1 2558 0
 1446 0000 024A     		ldr	r2, .L100
 1447 0002 1368     		ldr	r3, [r2]
 1448 0004 0121     		movs	r1, #1
 1449 0006 8B43     		bics	r3, r1
 1450 0008 1360     		str	r3, [r2]
2559:Generated_Source\PSoC4/CyLib.c **** }
 1451              		.loc 1 2559 0
 1452              		@ sp needed
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 73


 1453 000a 7047     		bx	lr
 1454              	.L101:
 1455              		.align	2
 1456              	.L100:
 1457 000c 10E000E0 		.word	-536813552
 1458              		.cfi_endproc
 1459              	.LFE32:
 1460              		.size	CySysTickStop, .-CySysTickStop
 1461              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1462              		.align	2
 1463              		.global	CySysTickEnableInterrupt
 1464              		.code	16
 1465              		.thumb_func
 1466              		.type	CySysTickEnableInterrupt, %function
 1467              	CySysTickEnableInterrupt:
 1468              	.LFB33:
2560:Generated_Source\PSoC4/CyLib.c **** 
2561:Generated_Source\PSoC4/CyLib.c **** 
2562:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2563:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2564:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2565:Generated_Source\PSoC4/CyLib.c **** *
2566:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2567:Generated_Source\PSoC4/CyLib.c **** *
2568:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2569:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2570:Generated_Source\PSoC4/CyLib.c **** *
2571:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2572:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2573:Generated_Source\PSoC4/CyLib.c **** {
 1469              		.loc 1 2573 0
 1470              		.cfi_startproc
 1471              		@ args = 0, pretend = 0, frame = 0
 1472              		@ frame_needed = 0, uses_anonymous_args = 0
 1473              		@ link register save eliminated.
2574:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1474              		.loc 1 2574 0
 1475 0000 024A     		ldr	r2, .L103
 1476 0002 1168     		ldr	r1, [r2]
 1477 0004 0223     		movs	r3, #2
 1478 0006 0B43     		orrs	r3, r1
 1479 0008 1360     		str	r3, [r2]
2575:Generated_Source\PSoC4/CyLib.c **** }
 1480              		.loc 1 2575 0
 1481              		@ sp needed
 1482 000a 7047     		bx	lr
 1483              	.L104:
 1484              		.align	2
 1485              	.L103:
 1486 000c 10E000E0 		.word	-536813552
 1487              		.cfi_endproc
 1488              	.LFE33:
 1489              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1490              		.section	.text.CySysTickEnable,"ax",%progbits
 1491              		.align	2
 1492              		.global	CySysTickEnable
 1493              		.code	16
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 74


 1494              		.thumb_func
 1495              		.type	CySysTickEnable, %function
 1496              	CySysTickEnable:
 1497              	.LFB31:
2540:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1498              		.loc 1 2540 0
 1499              		.cfi_startproc
 1500              		@ args = 0, pretend = 0, frame = 0
 1501              		@ frame_needed = 0, uses_anonymous_args = 0
 1502 0000 10B5     		push	{r4, lr}
 1503              		.cfi_def_cfa_offset 8
 1504              		.cfi_offset 4, -8
 1505              		.cfi_offset 14, -4
2541:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1506              		.loc 1 2541 0
 1507 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1508              	.LVL122:
2542:Generated_Source\PSoC4/CyLib.c **** }
 1509              		.loc 1 2542 0
 1510 0006 034A     		ldr	r2, .L106
 1511 0008 1168     		ldr	r1, [r2]
 1512 000a 0123     		movs	r3, #1
 1513 000c 0B43     		orrs	r3, r1
 1514 000e 1360     		str	r3, [r2]
2543:Generated_Source\PSoC4/CyLib.c **** 
 1515              		.loc 1 2543 0
 1516              		@ sp needed
 1517 0010 10BD     		pop	{r4, pc}
 1518              	.L107:
 1519 0012 C046     		.align	2
 1520              	.L106:
 1521 0014 10E000E0 		.word	-536813552
 1522              		.cfi_endproc
 1523              	.LFE31:
 1524              		.size	CySysTickEnable, .-CySysTickEnable
 1525              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1526              		.align	2
 1527              		.global	CySysTickDisableInterrupt
 1528              		.code	16
 1529              		.thumb_func
 1530              		.type	CySysTickDisableInterrupt, %function
 1531              	CySysTickDisableInterrupt:
 1532              	.LFB34:
2576:Generated_Source\PSoC4/CyLib.c **** 
2577:Generated_Source\PSoC4/CyLib.c **** 
2578:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2579:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2580:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2581:Generated_Source\PSoC4/CyLib.c **** *
2582:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2583:Generated_Source\PSoC4/CyLib.c **** *
2584:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2585:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2586:Generated_Source\PSoC4/CyLib.c **** *
2587:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2588:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2589:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 75


 1533              		.loc 1 2589 0
 1534              		.cfi_startproc
 1535              		@ args = 0, pretend = 0, frame = 0
 1536              		@ frame_needed = 0, uses_anonymous_args = 0
 1537              		@ link register save eliminated.
2590:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1538              		.loc 1 2590 0
 1539 0000 024A     		ldr	r2, .L109
 1540 0002 1368     		ldr	r3, [r2]
 1541 0004 0221     		movs	r1, #2
 1542 0006 8B43     		bics	r3, r1
 1543 0008 1360     		str	r3, [r2]
2591:Generated_Source\PSoC4/CyLib.c **** }
 1544              		.loc 1 2591 0
 1545              		@ sp needed
 1546 000a 7047     		bx	lr
 1547              	.L110:
 1548              		.align	2
 1549              	.L109:
 1550 000c 10E000E0 		.word	-536813552
 1551              		.cfi_endproc
 1552              	.LFE34:
 1553              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1554              		.section	.text.CySysTickSetReload,"ax",%progbits
 1555              		.align	2
 1556              		.global	CySysTickSetReload
 1557              		.code	16
 1558              		.thumb_func
 1559              		.type	CySysTickSetReload, %function
 1560              	CySysTickSetReload:
 1561              	.LFB35:
2592:Generated_Source\PSoC4/CyLib.c **** 
2593:Generated_Source\PSoC4/CyLib.c **** 
2594:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2595:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2596:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2597:Generated_Source\PSoC4/CyLib.c **** *
2598:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2599:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2600:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2601:Generated_Source\PSoC4/CyLib.c **** *
2602:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2603:Generated_Source\PSoC4/CyLib.c **** *
2604:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2605:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2606:Generated_Source\PSoC4/CyLib.c **** {
 1562              		.loc 1 2606 0
 1563              		.cfi_startproc
 1564              		@ args = 0, pretend = 0, frame = 0
 1565              		@ frame_needed = 0, uses_anonymous_args = 0
 1566              		@ link register save eliminated.
 1567              	.LVL123:
2607:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1568              		.loc 1 2607 0
 1569 0000 0002     		lsls	r0, r0, #8
 1570              	.LVL124:
 1571 0002 000A     		lsrs	r0, r0, #8
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 76


 1572 0004 014B     		ldr	r3, .L112
 1573 0006 1860     		str	r0, [r3]
2608:Generated_Source\PSoC4/CyLib.c **** }
 1574              		.loc 1 2608 0
 1575              		@ sp needed
 1576 0008 7047     		bx	lr
 1577              	.L113:
 1578 000a C046     		.align	2
 1579              	.L112:
 1580 000c 14E000E0 		.word	-536813548
 1581              		.cfi_endproc
 1582              	.LFE35:
 1583              		.size	CySysTickSetReload, .-CySysTickSetReload
 1584              		.section	.text.CySysTickGetReload,"ax",%progbits
 1585              		.align	2
 1586              		.global	CySysTickGetReload
 1587              		.code	16
 1588              		.thumb_func
 1589              		.type	CySysTickGetReload, %function
 1590              	CySysTickGetReload:
 1591              	.LFB36:
2609:Generated_Source\PSoC4/CyLib.c **** 
2610:Generated_Source\PSoC4/CyLib.c **** 
2611:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2612:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2613:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2614:Generated_Source\PSoC4/CyLib.c **** *
2615:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** * \return
2618:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2621:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2622:Generated_Source\PSoC4/CyLib.c **** {
 1592              		.loc 1 2622 0
 1593              		.cfi_startproc
 1594              		@ args = 0, pretend = 0, frame = 0
 1595              		@ frame_needed = 0, uses_anonymous_args = 0
 1596              		@ link register save eliminated.
2623:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1597              		.loc 1 2623 0
 1598 0000 024B     		ldr	r3, .L115
 1599 0002 1868     		ldr	r0, [r3]
 1600 0004 0002     		lsls	r0, r0, #8
 1601 0006 000A     		lsrs	r0, r0, #8
2624:Generated_Source\PSoC4/CyLib.c **** }
 1602              		.loc 1 2624 0
 1603              		@ sp needed
 1604 0008 7047     		bx	lr
 1605              	.L116:
 1606 000a C046     		.align	2
 1607              	.L115:
 1608 000c 14E000E0 		.word	-536813548
 1609              		.cfi_endproc
 1610              	.LFE36:
 1611              		.size	CySysTickGetReload, .-CySysTickGetReload
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 77


 1612              		.section	.text.CySysTickGetValue,"ax",%progbits
 1613              		.align	2
 1614              		.global	CySysTickGetValue
 1615              		.code	16
 1616              		.thumb_func
 1617              		.type	CySysTickGetValue, %function
 1618              	CySysTickGetValue:
 1619              	.LFB37:
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c **** 
2627:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2628:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2629:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2630:Generated_Source\PSoC4/CyLib.c **** *
2631:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2632:Generated_Source\PSoC4/CyLib.c **** *
2633:Generated_Source\PSoC4/CyLib.c **** * \return
2634:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2635:Generated_Source\PSoC4/CyLib.c **** *
2636:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2637:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2638:Generated_Source\PSoC4/CyLib.c **** {
 1620              		.loc 1 2638 0
 1621              		.cfi_startproc
 1622              		@ args = 0, pretend = 0, frame = 0
 1623              		@ frame_needed = 0, uses_anonymous_args = 0
 1624              		@ link register save eliminated.
2639:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1625              		.loc 1 2639 0
 1626 0000 024B     		ldr	r3, .L118
 1627 0002 1868     		ldr	r0, [r3]
 1628 0004 0002     		lsls	r0, r0, #8
 1629 0006 000A     		lsrs	r0, r0, #8
2640:Generated_Source\PSoC4/CyLib.c **** }
 1630              		.loc 1 2640 0
 1631              		@ sp needed
 1632 0008 7047     		bx	lr
 1633              	.L119:
 1634 000a C046     		.align	2
 1635              	.L118:
 1636 000c 18E000E0 		.word	-536813544
 1637              		.cfi_endproc
 1638              	.LFE37:
 1639              		.size	CySysTickGetValue, .-CySysTickGetValue
 1640              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1641              		.align	2
 1642              		.global	CySysTickGetCountFlag
 1643              		.code	16
 1644              		.thumb_func
 1645              		.type	CySysTickGetCountFlag, %function
 1646              	CySysTickGetCountFlag:
 1647              	.LFB38:
2641:Generated_Source\PSoC4/CyLib.c **** 
2642:Generated_Source\PSoC4/CyLib.c **** 
2643:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2644:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2645:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 78


2646:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2647:Generated_Source\PSoC4/CyLib.c ****     *
2648:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2649:Generated_Source\PSoC4/CyLib.c ****     *
2650:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2651:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2652:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2653:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2654:Generated_Source\PSoC4/CyLib.c ****     *
2655:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2656:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2657:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2658:Generated_Source\PSoC4/CyLib.c ****     *
2659:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2660:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2661:Generated_Source\PSoC4/CyLib.c ****     *
2662:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2663:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2664:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2665:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2666:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2667:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2668:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2669:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2670:Generated_Source\PSoC4/CyLib.c ****     {
2671:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2672:Generated_Source\PSoC4/CyLib.c ****         {
2673:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2674:Generated_Source\PSoC4/CyLib.c ****         }
2675:Generated_Source\PSoC4/CyLib.c ****         else
2676:Generated_Source\PSoC4/CyLib.c ****         {
2677:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2678:Generated_Source\PSoC4/CyLib.c ****         }
2679:Generated_Source\PSoC4/CyLib.c ****     }
2680:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2681:Generated_Source\PSoC4/CyLib.c **** 
2682:Generated_Source\PSoC4/CyLib.c **** 
2683:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2684:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2685:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2688:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2689:Generated_Source\PSoC4/CyLib.c **** *
2690:Generated_Source\PSoC4/CyLib.c **** * \return
2691:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2692:Generated_Source\PSoC4/CyLib.c **** *
2693:Generated_Source\PSoC4/CyLib.c **** *
2694:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2695:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2696:Generated_Source\PSoC4/CyLib.c **** *
2697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2699:Generated_Source\PSoC4/CyLib.c **** {
 1648              		.loc 1 2699 0
 1649              		.cfi_startproc
 1650              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 79


 1651              		@ frame_needed = 0, uses_anonymous_args = 0
 1652              		@ link register save eliminated.
2700:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1653              		.loc 1 2700 0
 1654 0000 024B     		ldr	r3, .L121
 1655 0002 1868     		ldr	r0, [r3]
 1656 0004 000C     		lsrs	r0, r0, #16
 1657 0006 0123     		movs	r3, #1
 1658 0008 1840     		ands	r0, r3
2701:Generated_Source\PSoC4/CyLib.c **** }
 1659              		.loc 1 2701 0
 1660              		@ sp needed
 1661 000a 7047     		bx	lr
 1662              	.L122:
 1663              		.align	2
 1664              	.L121:
 1665 000c 10E000E0 		.word	-536813552
 1666              		.cfi_endproc
 1667              	.LFE38:
 1668              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1669              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1670              		.align	2
 1671              		.code	16
 1672              		.thumb_func
 1673              		.type	CySysTickServiceCallbacks, %function
 1674              	CySysTickServiceCallbacks:
 1675              	.LFB42:
2702:Generated_Source\PSoC4/CyLib.c **** 
2703:Generated_Source\PSoC4/CyLib.c **** 
2704:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2705:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2706:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2707:Generated_Source\PSoC4/CyLib.c **** *
2708:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2709:Generated_Source\PSoC4/CyLib.c **** *
2710:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2711:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2712:Generated_Source\PSoC4/CyLib.c **** {
2713:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2714:Generated_Source\PSoC4/CyLib.c **** }
2715:Generated_Source\PSoC4/CyLib.c **** 
2716:Generated_Source\PSoC4/CyLib.c **** 
2717:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2718:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2719:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2720:Generated_Source\PSoC4/CyLib.c **** *
2721:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2722:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2723:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2724:Generated_Source\PSoC4/CyLib.c **** *
2725:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2726:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2727:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2728:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2729:Generated_Source\PSoC4/CyLib.c **** *  functions.
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 80


2732:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2733:Generated_Source\PSoC4/CyLib.c **** *
2734:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2735:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2736:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2737:Generated_Source\PSoC4/CyLib.c **** *
2738:Generated_Source\PSoC4/CyLib.c **** * \return
2739:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2740:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2741:Generated_Source\PSoC4/CyLib.c **** *
2742:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2743:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2744:Generated_Source\PSoC4/CyLib.c **** *
2745:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2746:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2747:Generated_Source\PSoC4/CyLib.c **** {
2748:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2749:Generated_Source\PSoC4/CyLib.c **** 
2750:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2751:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2752:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2753:Generated_Source\PSoC4/CyLib.c **** }
2754:Generated_Source\PSoC4/CyLib.c **** 
2755:Generated_Source\PSoC4/CyLib.c **** 
2756:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2757:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2758:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2759:Generated_Source\PSoC4/CyLib.c **** *
2760:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2761:Generated_Source\PSoC4/CyLib.c **** *
2762:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2763:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** * \return
2766:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2767:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2771:Generated_Source\PSoC4/CyLib.c **** {
2772:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2773:Generated_Source\PSoC4/CyLib.c **** }
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2783:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2784:Generated_Source\PSoC4/CyLib.c **** {
 1676              		.loc 1 2784 0
 1677              		.cfi_startproc
 1678              		@ args = 0, pretend = 0, frame = 0
 1679              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 81


 1680 0000 10B5     		push	{r4, lr}
 1681              		.cfi_def_cfa_offset 8
 1682              		.cfi_offset 4, -8
 1683              		.cfi_offset 14, -4
2785:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2786:Generated_Source\PSoC4/CyLib.c **** 
2787:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2788:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1684              		.loc 1 2788 0
 1685 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1686              	.LVL125:
 1687 0006 0128     		cmp	r0, #1
 1688 0008 0BD1     		bne	.L123
 1689 000a 07E0     		b	.L128
 1690              	.LVL126:
 1691              	.L127:
2789:Generated_Source\PSoC4/CyLib.c ****     {
2790:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2791:Generated_Source\PSoC4/CyLib.c ****         {
2792:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1692              		.loc 1 2792 0
 1693 000c A300     		lsls	r3, r4, #2
 1694 000e 054A     		ldr	r2, .L129
 1695 0010 9B58     		ldr	r3, [r3, r2]
 1696 0012 002B     		cmp	r3, #0
 1697 0014 00D0     		beq	.L126
2793:Generated_Source\PSoC4/CyLib.c ****             {
2794:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1698              		.loc 1 2794 0
 1699 0016 9847     		blx	r3
 1700              	.LVL127:
 1701              	.L126:
2790:Generated_Source\PSoC4/CyLib.c ****         {
 1702              		.loc 1 2790 0 discriminator 2
 1703 0018 0134     		adds	r4, r4, #1
 1704              	.LVL128:
 1705 001a 00E0     		b	.L124
 1706              	.LVL129:
 1707              	.L128:
 1708 001c 0024     		movs	r4, #0
 1709              	.L124:
 1710              	.LVL130:
2790:Generated_Source\PSoC4/CyLib.c ****         {
 1711              		.loc 1 2790 0 is_stmt 0 discriminator 1
 1712 001e 042C     		cmp	r4, #4
 1713 0020 F4D9     		bls	.L127
 1714              	.LVL131:
 1715              	.L123:
2795:Generated_Source\PSoC4/CyLib.c ****             }
2796:Generated_Source\PSoC4/CyLib.c ****         }
2797:Generated_Source\PSoC4/CyLib.c ****     }
2798:Generated_Source\PSoC4/CyLib.c **** }
 1716              		.loc 1 2798 0 is_stmt 1
 1717              		@ sp needed
 1718 0022 10BD     		pop	{r4, pc}
 1719              	.L130:
 1720              		.align	2
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 82


 1721              	.L129:
 1722 0024 00000000 		.word	.LANCHOR2
 1723              		.cfi_endproc
 1724              	.LFE42:
 1725              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1726              		.section	.text.CySysTickClear,"ax",%progbits
 1727              		.align	2
 1728              		.global	CySysTickClear
 1729              		.code	16
 1730              		.thumb_func
 1731              		.type	CySysTickClear, %function
 1732              	CySysTickClear:
 1733              	.LFB39:
2712:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1734              		.loc 1 2712 0
 1735              		.cfi_startproc
 1736              		@ args = 0, pretend = 0, frame = 0
 1737              		@ frame_needed = 0, uses_anonymous_args = 0
 1738              		@ link register save eliminated.
2713:Generated_Source\PSoC4/CyLib.c **** }
 1739              		.loc 1 2713 0
 1740 0000 0022     		movs	r2, #0
 1741 0002 014B     		ldr	r3, .L132
 1742 0004 1A60     		str	r2, [r3]
2714:Generated_Source\PSoC4/CyLib.c **** 
 1743              		.loc 1 2714 0
 1744              		@ sp needed
 1745 0006 7047     		bx	lr
 1746              	.L133:
 1747              		.align	2
 1748              	.L132:
 1749 0008 18E000E0 		.word	-536813544
 1750              		.cfi_endproc
 1751              	.LFE39:
 1752              		.size	CySysTickClear, .-CySysTickClear
 1753              		.section	.text.CySysTickInit,"ax",%progbits
 1754              		.align	2
 1755              		.global	CySysTickInit
 1756              		.code	16
 1757              		.thumb_func
 1758              		.type	CySysTickInit, %function
 1759              	CySysTickInit:
 1760              	.LFB30:
2509:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1761              		.loc 1 2509 0
 1762              		.cfi_startproc
 1763              		@ args = 0, pretend = 0, frame = 0
 1764              		@ frame_needed = 0, uses_anonymous_args = 0
 1765 0000 10B5     		push	{r4, lr}
 1766              		.cfi_def_cfa_offset 8
 1767              		.cfi_offset 4, -8
 1768              		.cfi_offset 14, -4
 1769              	.LVL132:
2512:Generated_Source\PSoC4/CyLib.c ****     {
 1770              		.loc 1 2512 0
 1771 0002 0023     		movs	r3, #0
 1772 0004 04E0     		b	.L135
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 83


 1773              	.LVL133:
 1774              	.L136:
2514:Generated_Source\PSoC4/CyLib.c ****     }
 1775              		.loc 1 2514 0 discriminator 3
 1776 0006 9900     		lsls	r1, r3, #2
 1777 0008 0020     		movs	r0, #0
 1778 000a 0B4A     		ldr	r2, .L137
 1779 000c 8850     		str	r0, [r1, r2]
2512:Generated_Source\PSoC4/CyLib.c ****     {
 1780              		.loc 1 2512 0 discriminator 3
 1781 000e 0133     		adds	r3, r3, #1
 1782              	.LVL134:
 1783              	.L135:
2512:Generated_Source\PSoC4/CyLib.c ****     {
 1784              		.loc 1 2512 0 is_stmt 0 discriminator 1
 1785 0010 042B     		cmp	r3, #4
 1786 0012 F8D9     		bls	.L136
2517:Generated_Source\PSoC4/CyLib.c **** 
 1787              		.loc 1 2517 0 is_stmt 1
 1788 0014 0949     		ldr	r1, .L137+4
 1789 0016 0F20     		movs	r0, #15
 1790 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1791              	.LVL135:
2523:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1792              		.loc 1 2523 0
 1793 001c 084B     		ldr	r3, .L137+8
 1794 001e D868     		ldr	r0, [r3, #12]
 1795 0020 FA21     		movs	r1, #250
 1796 0022 8900     		lsls	r1, r1, #2
 1797 0024 FFF7FEFF 		bl	__aeabi_uidiv
 1798              	.LVL136:
 1799 0028 FFF7FEFF 		bl	CySysTickSetReload
 1800              	.LVL137:
2524:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 1801              		.loc 1 2524 0
 1802 002c FFF7FEFF 		bl	CySysTickClear
 1803              	.LVL138:
2525:Generated_Source\PSoC4/CyLib.c **** }
 1804              		.loc 1 2525 0
 1805 0030 0F20     		movs	r0, #15
 1806 0032 FFF7FEFF 		bl	CyIntEnable
 1807              	.LVL139:
2526:Generated_Source\PSoC4/CyLib.c **** 
 1808              		.loc 1 2526 0
 1809              		@ sp needed
 1810 0036 10BD     		pop	{r4, pc}
 1811              	.L138:
 1812              		.align	2
 1813              	.L137:
 1814 0038 00000000 		.word	.LANCHOR2
 1815 003c 00000000 		.word	CySysTickServiceCallbacks
 1816 0040 00000000 		.word	.LANCHOR0
 1817              		.cfi_endproc
 1818              	.LFE30:
 1819              		.size	CySysTickInit, .-CySysTickInit
 1820              		.section	.text.CySysTickStart,"ax",%progbits
 1821              		.align	2
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 84


 1822              		.global	CySysTickStart
 1823              		.code	16
 1824              		.thumb_func
 1825              		.type	CySysTickStart, %function
 1826              	CySysTickStart:
 1827              	.LFB29:
2480:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1828              		.loc 1 2480 0
 1829              		.cfi_startproc
 1830              		@ args = 0, pretend = 0, frame = 0
 1831              		@ frame_needed = 0, uses_anonymous_args = 0
 1832 0000 10B5     		push	{r4, lr}
 1833              		.cfi_def_cfa_offset 8
 1834              		.cfi_offset 4, -8
 1835              		.cfi_offset 14, -4
2481:Generated_Source\PSoC4/CyLib.c ****     {
 1836              		.loc 1 2481 0
 1837 0002 064B     		ldr	r3, .L141
 1838 0004 5B69     		ldr	r3, [r3, #20]
 1839 0006 002B     		cmp	r3, #0
 1840 0008 04D1     		bne	.L140
2483:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1841              		.loc 1 2483 0
 1842 000a FFF7FEFF 		bl	CySysTickInit
 1843              	.LVL140:
2484:Generated_Source\PSoC4/CyLib.c ****     }
 1844              		.loc 1 2484 0
 1845 000e 0122     		movs	r2, #1
 1846 0010 024B     		ldr	r3, .L141
 1847 0012 5A61     		str	r2, [r3, #20]
 1848              	.L140:
2487:Generated_Source\PSoC4/CyLib.c **** }
 1849              		.loc 1 2487 0
 1850 0014 FFF7FEFF 		bl	CySysTickEnable
 1851              	.LVL141:
2488:Generated_Source\PSoC4/CyLib.c **** 
 1852              		.loc 1 2488 0
 1853              		@ sp needed
 1854 0018 10BD     		pop	{r4, pc}
 1855              	.L142:
 1856 001a C046     		.align	2
 1857              	.L141:
 1858 001c 00000000 		.word	.LANCHOR2
 1859              		.cfi_endproc
 1860              	.LFE29:
 1861              		.size	CySysTickStart, .-CySysTickStart
 1862              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1863              		.align	2
 1864              		.global	CySysTickSetCallback
 1865              		.code	16
 1866              		.thumb_func
 1867              		.type	CySysTickSetCallback, %function
 1868              	CySysTickSetCallback:
 1869              	.LFB40:
2747:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1870              		.loc 1 2747 0
 1871              		.cfi_startproc
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 85


 1872              		@ args = 0, pretend = 0, frame = 0
 1873              		@ frame_needed = 0, uses_anonymous_args = 0
 1874              		@ link register save eliminated.
 1875              	.LVL142:
2750:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1876              		.loc 1 2750 0
 1877 0000 024A     		ldr	r2, .L144
 1878 0002 8300     		lsls	r3, r0, #2
 1879 0004 9858     		ldr	r0, [r3, r2]
 1880              	.LVL143:
2751:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1881              		.loc 1 2751 0
 1882 0006 9950     		str	r1, [r3, r2]
2753:Generated_Source\PSoC4/CyLib.c **** 
 1883              		.loc 1 2753 0
 1884              		@ sp needed
 1885 0008 7047     		bx	lr
 1886              	.L145:
 1887 000a C046     		.align	2
 1888              	.L144:
 1889 000c 00000000 		.word	.LANCHOR2
 1890              		.cfi_endproc
 1891              	.LFE40:
 1892              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1893              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1894              		.align	2
 1895              		.global	CySysTickGetCallback
 1896              		.code	16
 1897              		.thumb_func
 1898              		.type	CySysTickGetCallback, %function
 1899              	CySysTickGetCallback:
 1900              	.LFB41:
2771:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1901              		.loc 1 2771 0
 1902              		.cfi_startproc
 1903              		@ args = 0, pretend = 0, frame = 0
 1904              		@ frame_needed = 0, uses_anonymous_args = 0
 1905              		@ link register save eliminated.
 1906              	.LVL144:
2772:Generated_Source\PSoC4/CyLib.c **** }
 1907              		.loc 1 2772 0
 1908 0000 8000     		lsls	r0, r0, #2
 1909              	.LVL145:
 1910 0002 014B     		ldr	r3, .L147
 1911 0004 C058     		ldr	r0, [r0, r3]
2773:Generated_Source\PSoC4/CyLib.c **** 
 1912              		.loc 1 2773 0
 1913              		@ sp needed
 1914 0006 7047     		bx	lr
 1915              	.L148:
 1916              		.align	2
 1917              	.L147:
 1918 0008 00000000 		.word	.LANCHOR2
 1919              		.cfi_endproc
 1920              	.LFE41:
 1921              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1922              		.section	.text.CyGetUniqueId,"ax",%progbits
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 86


 1923              		.align	2
 1924              		.global	CyGetUniqueId
 1925              		.code	16
 1926              		.thumb_func
 1927              		.type	CyGetUniqueId, %function
 1928              	CyGetUniqueId:
 1929              	.LFB43:
2799:Generated_Source\PSoC4/CyLib.c **** 
2800:Generated_Source\PSoC4/CyLib.c **** 
2801:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2802:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2803:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2804:Generated_Source\PSoC4/CyLib.c **** *
2805:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2806:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2807:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2808:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2809:Generated_Source\PSoC4/CyLib.c **** *
2810:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2811:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2812:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2813:Generated_Source\PSoC4/CyLib.c **** *
2814:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2815:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2816:Generated_Source\PSoC4/CyLib.c **** {
 1930              		.loc 1 2816 0
 1931              		.cfi_startproc
 1932              		@ args = 0, pretend = 0, frame = 0
 1933              		@ frame_needed = 0, uses_anonymous_args = 0
 1934              		@ link register save eliminated.
 1935              	.LVL146:
2817:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2818:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1936              		.loc 1 2818 0
 1937 0000 134B     		ldr	r3, .L150
 1938 0002 1B78     		ldrb	r3, [r3]
 1939 0004 DAB2     		uxtb	r2, r3
 1940 0006 0260     		str	r2, [r0]
2819:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1941              		.loc 1 2819 0
 1942 0008 124B     		ldr	r3, .L150+4
 1943 000a 1B78     		ldrb	r3, [r3]
 1944 000c 1B02     		lsls	r3, r3, #8
 1945 000e 1343     		orrs	r3, r2
 1946 0010 0360     		str	r3, [r0]
2820:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1947              		.loc 1 2820 0
 1948 0012 114A     		ldr	r2, .L150+8
 1949 0014 1278     		ldrb	r2, [r2]
 1950 0016 1204     		lsls	r2, r2, #16
 1951 0018 1343     		orrs	r3, r2
 1952 001a 0360     		str	r3, [r0]
2821:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1953              		.loc 1 2821 0
 1954 001c 0F4A     		ldr	r2, .L150+12
 1955 001e 1278     		ldrb	r2, [r2]
 1956 0020 1206     		lsls	r2, r2, #24
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 87


 1957 0022 1343     		orrs	r3, r2
 1958 0024 0360     		str	r3, [r0]
2822:Generated_Source\PSoC4/CyLib.c **** 
2823:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 1959              		.loc 1 2823 0
 1960 0026 0E4B     		ldr	r3, .L150+16
 1961 0028 1B78     		ldrb	r3, [r3]
 1962 002a DAB2     		uxtb	r2, r3
 1963 002c 4260     		str	r2, [r0, #4]
2824:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1964              		.loc 1 2824 0
 1965 002e 0D4B     		ldr	r3, .L150+20
 1966 0030 1B78     		ldrb	r3, [r3]
 1967 0032 1B02     		lsls	r3, r3, #8
 1968 0034 1343     		orrs	r3, r2
 1969 0036 4360     		str	r3, [r0, #4]
2825:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1970              		.loc 1 2825 0
 1971 0038 0B4A     		ldr	r2, .L150+24
 1972 003a 1278     		ldrb	r2, [r2]
 1973 003c 1204     		lsls	r2, r2, #16
 1974 003e 1343     		orrs	r3, r2
 1975 0040 4360     		str	r3, [r0, #4]
2826:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1976              		.loc 1 2826 0
 1977 0042 0A4A     		ldr	r2, .L150+28
 1978 0044 1278     		ldrb	r2, [r2]
 1979 0046 1206     		lsls	r2, r2, #24
 1980 0048 1343     		orrs	r3, r2
 1981 004a 4360     		str	r3, [r0, #4]
2827:Generated_Source\PSoC4/CyLib.c **** #else
2828:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2829:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2830:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2831:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2832:Generated_Source\PSoC4/CyLib.c **** 
2833:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
2834:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
2835:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
2836:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
2837:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
2838:Generated_Source\PSoC4/CyLib.c **** }
 1982              		.loc 1 2838 0
 1983              		@ sp needed
 1984 004c 7047     		bx	lr
 1985              	.L151:
 1986 004e C046     		.align	2
 1987              	.L150:
 1988 0050 78F1FF0F 		.word	268431736
 1989 0054 79F1FF0F 		.word	268431737
 1990 0058 7AF1FF0F 		.word	268431738
 1991 005c 7BF1FF0F 		.word	268431739
 1992 0060 7CF1FF0F 		.word	268431740
 1993 0064 7DF1FF0F 		.word	268431741
 1994 0068 7EF1FF0F 		.word	268431742
 1995 006c 7FF1FF0F 		.word	268431743
 1996              		.cfi_endproc
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 88


 1997              	.LFE43:
 1998              		.size	CyGetUniqueId, .-CyGetUniqueId
 1999              		.global	cyImoFreqMhz2Reg
 2000              		.global	CySysTickInitVar
 2001              		.global	cydelay32kMs
 2002              		.global	cydelayFreqMhz
 2003              		.global	cydelayFreqKhz
 2004              		.global	cydelayFreqHz
 2005              		.section	.rodata
 2006              		.align	2
 2007              		.set	.LANCHOR1,. + 0
 2008              		.type	cyImoFreqMhz2Reg, %object
 2009              		.size	cyImoFreqMhz2Reg, 46
 2010              	cyImoFreqMhz2Reg:
 2011 0000 03       		.byte	3
 2012 0001 04       		.byte	4
 2013 0002 05       		.byte	5
 2014 0003 06       		.byte	6
 2015 0004 07       		.byte	7
 2016 0005 08       		.byte	8
 2017 0006 09       		.byte	9
 2018 0007 0A       		.byte	10
 2019 0008 0B       		.byte	11
 2020 0009 0C       		.byte	12
 2021 000a 0E       		.byte	14
 2022 000b 0F       		.byte	15
 2023 000c 10       		.byte	16
 2024 000d 11       		.byte	17
 2025 000e 12       		.byte	18
 2026 000f 13       		.byte	19
 2027 0010 14       		.byte	20
 2028 0011 15       		.byte	21
 2029 0012 16       		.byte	22
 2030 0013 17       		.byte	23
 2031 0014 18       		.byte	24
 2032 0015 19       		.byte	25
 2033 0016 1B       		.byte	27
 2034 0017 1C       		.byte	28
 2035 0018 1D       		.byte	29
 2036 0019 1E       		.byte	30
 2037 001a 1F       		.byte	31
 2038 001b 20       		.byte	32
 2039 001c 21       		.byte	33
 2040 001d 22       		.byte	34
 2041 001e 23       		.byte	35
 2042 001f 25       		.byte	37
 2043 0020 26       		.byte	38
 2044 0021 27       		.byte	39
 2045 0022 28       		.byte	40
 2046 0023 29       		.byte	41
 2047 0024 2A       		.byte	42
 2048 0025 2B       		.byte	43
 2049 0026 2E       		.byte	46
 2050 0027 2F       		.byte	47
 2051 0028 30       		.byte	48
 2052 0029 31       		.byte	49
 2053 002a 32       		.byte	50
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 89


 2054 002b 33       		.byte	51
 2055 002c 34       		.byte	52
 2056 002d 35       		.byte	53
 2057              		.data
 2058              		.align	2
 2059              		.set	.LANCHOR0,. + 0
 2060              		.type	cydelay32kMs, %object
 2061              		.size	cydelay32kMs, 4
 2062              	cydelay32kMs:
 2063 0000 0000C05D 		.word	1572864000
 2064              		.type	cydelayFreqKhz, %object
 2065              		.size	cydelayFreqKhz, 4
 2066              	cydelayFreqKhz:
 2067 0004 80BB0000 		.word	48000
 2068              		.type	cydelayFreqMhz, %object
 2069              		.size	cydelayFreqMhz, 1
 2070              	cydelayFreqMhz:
 2071 0008 30       		.byte	48
 2072 0009 000000   		.space	3
 2073              		.type	cydelayFreqHz, %object
 2074              		.size	cydelayFreqHz, 4
 2075              	cydelayFreqHz:
 2076 000c 006CDC02 		.word	48000000
 2077              		.bss
 2078              		.align	2
 2079              		.set	.LANCHOR2,. + 0
 2080              		.type	CySysTickCallbacks, %object
 2081              		.size	CySysTickCallbacks, 20
 2082              	CySysTickCallbacks:
 2083 0000 00000000 		.space	20
 2083      00000000 
 2083      00000000 
 2083      00000000 
 2083      00000000 
 2084              		.type	CySysTickInitVar, %object
 2085              		.size	CySysTickInitVar, 4
 2086              	CySysTickInitVar:
 2087 0014 00000000 		.space	4
 2088              		.text
 2089              	.Letext0:
 2090              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2091              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2092              		.section	.debug_info,"",%progbits
 2093              	.Ldebug_info0:
 2094 0000 D10A0000 		.4byte	0xad1
 2095 0004 0400     		.2byte	0x4
 2096 0006 00000000 		.4byte	.Ldebug_abbrev0
 2097 000a 04       		.byte	0x4
 2098 000b 01       		.uleb128 0x1
 2099 000c 77000000 		.4byte	.LASF102
 2100 0010 0C       		.byte	0xc
 2101 0011 3D060000 		.4byte	.LASF103
 2102 0015 7C020000 		.4byte	.LASF104
 2103 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2104 001d 00000000 		.4byte	0
 2105 0021 00000000 		.4byte	.Ldebug_line0
 2106 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 90


 2107 0026 01       		.byte	0x1
 2108 0027 06       		.byte	0x6
 2109 0028 7F010000 		.4byte	.LASF0
 2110 002c 02       		.uleb128 0x2
 2111 002d 01       		.byte	0x1
 2112 002e 08       		.byte	0x8
 2113 002f 05050000 		.4byte	.LASF1
 2114 0033 02       		.uleb128 0x2
 2115 0034 02       		.byte	0x2
 2116 0035 05       		.byte	0x5
 2117 0036 13050000 		.4byte	.LASF2
 2118 003a 02       		.uleb128 0x2
 2119 003b 02       		.byte	0x2
 2120 003c 07       		.byte	0x7
 2121 003d 7E030000 		.4byte	.LASF3
 2122 0041 02       		.uleb128 0x2
 2123 0042 04       		.byte	0x4
 2124 0043 05       		.byte	0x5
 2125 0044 BE010000 		.4byte	.LASF4
 2126 0048 02       		.uleb128 0x2
 2127 0049 04       		.byte	0x4
 2128 004a 07       		.byte	0x7
 2129 004b 06030000 		.4byte	.LASF5
 2130 004f 02       		.uleb128 0x2
 2131 0050 08       		.byte	0x8
 2132 0051 05       		.byte	0x5
 2133 0052 71010000 		.4byte	.LASF6
 2134 0056 02       		.uleb128 0x2
 2135 0057 08       		.byte	0x8
 2136 0058 07       		.byte	0x7
 2137 0059 05010000 		.4byte	.LASF7
 2138 005d 03       		.uleb128 0x3
 2139 005e 04       		.byte	0x4
 2140 005f 05       		.byte	0x5
 2141 0060 696E7400 		.ascii	"int\000"
 2142 0064 02       		.uleb128 0x2
 2143 0065 04       		.byte	0x4
 2144 0066 07       		.byte	0x7
 2145 0067 EA020000 		.4byte	.LASF8
 2146 006b 04       		.uleb128 0x4
 2147 006c E9010000 		.4byte	.LASF9
 2148 0070 02       		.byte	0x2
 2149 0071 9801     		.2byte	0x198
 2150 0073 2C000000 		.4byte	0x2c
 2151 0077 04       		.uleb128 0x4
 2152 0078 17000000 		.4byte	.LASF10
 2153 007c 02       		.byte	0x2
 2154 007d 9901     		.2byte	0x199
 2155 007f 3A000000 		.4byte	0x3a
 2156 0083 04       		.uleb128 0x4
 2157 0084 2C020000 		.4byte	.LASF11
 2158 0088 02       		.byte	0x2
 2159 0089 9A01     		.2byte	0x19a
 2160 008b 48000000 		.4byte	0x48
 2161 008f 02       		.uleb128 0x2
 2162 0090 04       		.byte	0x4
 2163 0091 04       		.byte	0x4
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 91


 2164 0092 88040000 		.4byte	.LASF12
 2165 0096 02       		.uleb128 0x2
 2166 0097 08       		.byte	0x8
 2167 0098 04       		.byte	0x4
 2168 0099 08020000 		.4byte	.LASF13
 2169 009d 02       		.uleb128 0x2
 2170 009e 01       		.byte	0x1
 2171 009f 08       		.byte	0x8
 2172 00a0 4C050000 		.4byte	.LASF14
 2173 00a4 04       		.uleb128 0x4
 2174 00a5 EF040000 		.4byte	.LASF15
 2175 00a9 02       		.byte	0x2
 2176 00aa 4202     		.2byte	0x242
 2177 00ac B0000000 		.4byte	0xb0
 2178 00b0 05       		.uleb128 0x5
 2179 00b1 6B000000 		.4byte	0x6b
 2180 00b5 04       		.uleb128 0x4
 2181 00b6 D7030000 		.4byte	.LASF16
 2182 00ba 02       		.byte	0x2
 2183 00bb 4402     		.2byte	0x244
 2184 00bd C1000000 		.4byte	0xc1
 2185 00c1 05       		.uleb128 0x5
 2186 00c2 83000000 		.4byte	0x83
 2187 00c6 04       		.uleb128 0x4
 2188 00c7 51050000 		.4byte	.LASF17
 2189 00cb 02       		.byte	0x2
 2190 00cc 5402     		.2byte	0x254
 2191 00ce D2000000 		.4byte	0xd2
 2192 00d2 06       		.uleb128 0x6
 2193 00d3 04       		.byte	0x4
 2194 00d4 D8000000 		.4byte	0xd8
 2195 00d8 07       		.uleb128 0x7
 2196 00d9 02       		.uleb128 0x2
 2197 00da 08       		.byte	0x8
 2198 00db 04       		.byte	0x4
 2199 00dc 14040000 		.4byte	.LASF18
 2200 00e0 02       		.uleb128 0x2
 2201 00e1 04       		.byte	0x4
 2202 00e2 07       		.byte	0x7
 2203 00e3 F9030000 		.4byte	.LASF19
 2204 00e7 08       		.uleb128 0x8
 2205 00e8 B3040000 		.4byte	.LASF20
 2206 00ec 03       		.byte	0x3
 2207 00ed F3       		.byte	0xf3
 2208 00ee D2000000 		.4byte	0xd2
 2209 00f2 09       		.uleb128 0x9
 2210 00f3 1B060000 		.4byte	.LASF21
 2211 00f7 01       		.byte	0x1
 2212 00f8 68       		.byte	0x68
 2213 00f9 00000000 		.4byte	.LFB0
 2214 00fd 14000000 		.4byte	.LFE0-.LFB0
 2215 0101 01       		.uleb128 0x1
 2216 0102 9C       		.byte	0x9c
 2217 0103 09       		.uleb128 0x9
 2218 0104 33030000 		.4byte	.LASF22
 2219 0108 01       		.byte	0x1
 2220 0109 88       		.byte	0x88
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 92


 2221 010a 00000000 		.4byte	.LFB1
 2222 010e 10000000 		.4byte	.LFE1-.LFB1
 2223 0112 01       		.uleb128 0x1
 2224 0113 9C       		.byte	0x9c
 2225 0114 0A       		.uleb128 0xa
 2226 0115 2D000000 		.4byte	.LASF26
 2227 0119 01       		.byte	0x1
 2228 011a AA01     		.2byte	0x1aa
 2229 011c 00000000 		.4byte	.LFB2
 2230 0120 20000000 		.4byte	.LFE2-.LFB2
 2231 0124 01       		.uleb128 0x1
 2232 0125 9C       		.byte	0x9c
 2233 0126 6D010000 		.4byte	0x16d
 2234 012a 0B       		.uleb128 0xb
 2235 012b 3B050000 		.4byte	.LASF28
 2236 012f 01       		.byte	0x1
 2237 0130 AA01     		.2byte	0x1aa
 2238 0132 83000000 		.4byte	0x83
 2239 0136 00000000 		.4byte	.LLST0
 2240 013a 0C       		.uleb128 0xc
 2241 013b 9C010000 		.4byte	.LASF23
 2242 013f 01       		.byte	0x1
 2243 0140 AC01     		.2byte	0x1ac
 2244 0142 6B000000 		.4byte	0x6b
 2245 0146 2C000000 		.4byte	.LLST1
 2246 014a 0C       		.uleb128 0xc
 2247 014b 69060000 		.4byte	.LASF24
 2248 014f 01       		.byte	0x1
 2249 0150 AD01     		.2byte	0x1ad
 2250 0152 83000000 		.4byte	0x83
 2251 0156 3F000000 		.4byte	.LLST2
 2252 015a 0D       		.uleb128 0xd
 2253 015b 08000000 		.4byte	.LVL1
 2254 015f B30A0000 		.4byte	0xab3
 2255 0163 0D       		.uleb128 0xd
 2256 0164 1A000000 		.4byte	.LVL5
 2257 0168 BE0A0000 		.4byte	0xabe
 2258 016c 00       		.byte	0
 2259 016d 0E       		.uleb128 0xe
 2260 016e 38020000 		.4byte	.LASF32
 2261 0172 01       		.byte	0x1
 2262 0173 CF01     		.2byte	0x1cf
 2263 0175 83000000 		.4byte	0x83
 2264 0179 00000000 		.4byte	.LFB3
 2265 017d 1C000000 		.4byte	.LFE3-.LFB3
 2266 0181 01       		.uleb128 0x1
 2267 0182 9C       		.byte	0x9c
 2268 0183 BA010000 		.4byte	0x1ba
 2269 0187 0C       		.uleb128 0xc
 2270 0188 9C010000 		.4byte	.LASF23
 2271 018c 01       		.byte	0x1
 2272 018d D101     		.2byte	0x1d1
 2273 018f 6B000000 		.4byte	0x6b
 2274 0193 5D000000 		.4byte	.LLST3
 2275 0197 0C       		.uleb128 0xc
 2276 0198 30040000 		.4byte	.LASF25
 2277 019c 01       		.byte	0x1
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 93


 2278 019d D201     		.2byte	0x1d2
 2279 019f 83000000 		.4byte	0x83
 2280 01a3 70000000 		.4byte	.LLST4
 2281 01a7 0D       		.uleb128 0xd
 2282 01a8 06000000 		.4byte	.LVL7
 2283 01ac B30A0000 		.4byte	0xab3
 2284 01b0 0D       		.uleb128 0xd
 2285 01b1 12000000 		.4byte	.LVL9
 2286 01b5 BE0A0000 		.4byte	0xabe
 2287 01b9 00       		.byte	0
 2288 01ba 0A       		.uleb128 0xa
 2289 01bb 6E050000 		.4byte	.LASF27
 2290 01bf 01       		.byte	0x1
 2291 01c0 0602     		.2byte	0x206
 2292 01c2 00000000 		.4byte	.LFB4
 2293 01c6 30000000 		.4byte	.LFE4-.LFB4
 2294 01ca 01       		.uleb128 0x1
 2295 01cb 9C       		.byte	0x9c
 2296 01cc 03020000 		.4byte	0x203
 2297 01d0 0B       		.uleb128 0xb
 2298 01d1 13060000 		.4byte	.LASF29
 2299 01d5 01       		.byte	0x1
 2300 01d6 0602     		.2byte	0x206
 2301 01d8 83000000 		.4byte	0x83
 2302 01dc 8E000000 		.4byte	.LLST5
 2303 01e0 0C       		.uleb128 0xc
 2304 01e1 9C010000 		.4byte	.LASF23
 2305 01e5 01       		.byte	0x1
 2306 01e6 0802     		.2byte	0x208
 2307 01e8 6B000000 		.4byte	0x6b
 2308 01ec BA000000 		.4byte	.LLST6
 2309 01f0 0D       		.uleb128 0xd
 2310 01f1 08000000 		.4byte	.LVL12
 2311 01f5 B30A0000 		.4byte	0xab3
 2312 01f9 0D       		.uleb128 0xd
 2313 01fa 24000000 		.4byte	.LVL14
 2314 01fe BE0A0000 		.4byte	0xabe
 2315 0202 00       		.byte	0
 2316 0203 0F       		.uleb128 0xf
 2317 0204 E6050000 		.4byte	.LASF30
 2318 0208 01       		.byte	0x1
 2319 0209 CF07     		.2byte	0x7cf
 2320 020b 00000000 		.4byte	.LFB7
 2321 020f 20000000 		.4byte	.LFE7-.LFB7
 2322 0213 01       		.uleb128 0x1
 2323 0214 9C       		.byte	0x9c
 2324 0215 10       		.uleb128 0x10
 2325 0216 18030000 		.4byte	.LASF79
 2326 021a 01       		.byte	0x1
 2327 021b E107     		.2byte	0x7e1
 2328 021d 83000000 		.4byte	0x83
 2329 0221 00000000 		.4byte	.LFB8
 2330 0225 10000000 		.4byte	.LFE8-.LFB8
 2331 0229 01       		.uleb128 0x1
 2332 022a 9C       		.byte	0x9c
 2333 022b 0F       		.uleb128 0xf
 2334 022c 15020000 		.4byte	.LASF31
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 94


 2335 0230 01       		.byte	0x1
 2336 0231 F107     		.2byte	0x7f1
 2337 0233 00000000 		.4byte	.LFB9
 2338 0237 0C000000 		.4byte	.LFE9-.LFB9
 2339 023b 01       		.uleb128 0x1
 2340 023c 9C       		.byte	0x9c
 2341 023d 0E       		.uleb128 0xe
 2342 023e 6A030000 		.4byte	.LASF33
 2343 0242 01       		.byte	0x1
 2344 0243 0B08     		.2byte	0x80b
 2345 0245 83000000 		.4byte	0x83
 2346 0249 00000000 		.4byte	.LFB10
 2347 024d 14000000 		.4byte	.LFE10-.LFB10
 2348 0251 01       		.uleb128 0x1
 2349 0252 9C       		.byte	0x9c
 2350 0253 76020000 		.4byte	0x276
 2351 0257 0B       		.uleb128 0xb
 2352 0258 45050000 		.4byte	.LASF34
 2353 025c 01       		.byte	0x1
 2354 025d 0B08     		.2byte	0x80b
 2355 025f 83000000 		.4byte	0x83
 2356 0263 CD000000 		.4byte	.LLST7
 2357 0267 11       		.uleb128 0x11
 2358 0268 EC030000 		.4byte	.LASF35
 2359 026c 01       		.byte	0x1
 2360 026d 0D08     		.2byte	0x80d
 2361 026f 83000000 		.4byte	0x83
 2362 0273 01       		.uleb128 0x1
 2363 0274 50       		.byte	0x50
 2364 0275 00       		.byte	0
 2365 0276 0E       		.uleb128 0xe
 2366 0277 54000000 		.4byte	.LASF36
 2367 027b 01       		.byte	0x1
 2368 027c 2208     		.2byte	0x822
 2369 027e 83000000 		.4byte	0x83
 2370 0282 00000000 		.4byte	.LFB11
 2371 0286 10000000 		.4byte	.LFE11-.LFB11
 2372 028a 01       		.uleb128 0x1
 2373 028b 9C       		.byte	0x9c
 2374 028c 9F020000 		.4byte	0x29f
 2375 0290 11       		.uleb128 0x11
 2376 0291 1E000000 		.4byte	.LASF37
 2377 0295 01       		.byte	0x1
 2378 0296 2408     		.2byte	0x824
 2379 0298 83000000 		.4byte	0x83
 2380 029c 01       		.uleb128 0x1
 2381 029d 50       		.byte	0x50
 2382 029e 00       		.byte	0
 2383 029f 0A       		.uleb128 0xa
 2384 02a0 2D010000 		.4byte	.LASF38
 2385 02a4 01       		.byte	0x1
 2386 02a5 3908     		.2byte	0x839
 2387 02a7 00000000 		.4byte	.LFB12
 2388 02ab 0C000000 		.4byte	.LFE12-.LFB12
 2389 02af 01       		.uleb128 0x1
 2390 02b0 9C       		.byte	0x9c
 2391 02b1 C4020000 		.4byte	0x2c4
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 95


 2392 02b5 12       		.uleb128 0x12
 2393 02b6 33020000 		.4byte	.LASF39
 2394 02ba 01       		.byte	0x1
 2395 02bb 3908     		.2byte	0x839
 2396 02bd 83000000 		.4byte	0x83
 2397 02c1 01       		.uleb128 0x1
 2398 02c2 50       		.byte	0x50
 2399 02c3 00       		.byte	0
 2400 02c4 0A       		.uleb128 0xa
 2401 02c5 1D050000 		.4byte	.LASF40
 2402 02c9 01       		.byte	0x1
 2403 02ca F008     		.2byte	0x8f0
 2404 02cc 00000000 		.4byte	.LFB19
 2405 02d0 14000000 		.4byte	.LFE19-.LFB19
 2406 02d4 01       		.uleb128 0x1
 2407 02d5 9C       		.byte	0x9c
 2408 02d6 EB020000 		.4byte	0x2eb
 2409 02da 0B       		.uleb128 0xb
 2410 02db A0030000 		.4byte	.LASF41
 2411 02df 01       		.byte	0x1
 2412 02e0 F008     		.2byte	0x8f0
 2413 02e2 6B000000 		.4byte	0x6b
 2414 02e6 EB000000 		.4byte	.LLST8
 2415 02ea 00       		.byte	0
 2416 02eb 0E       		.uleb128 0xe
 2417 02ec 63010000 		.4byte	.LASF42
 2418 02f0 01       		.byte	0x1
 2419 02f1 0209     		.2byte	0x902
 2420 02f3 6B000000 		.4byte	0x6b
 2421 02f7 00000000 		.4byte	.LFB20
 2422 02fb 18000000 		.4byte	.LFE20-.LFB20
 2423 02ff 01       		.uleb128 0x1
 2424 0300 9C       		.byte	0x9c
 2425 0301 16030000 		.4byte	0x316
 2426 0305 0B       		.uleb128 0xb
 2427 0306 A0030000 		.4byte	.LASF41
 2428 030a 01       		.byte	0x1
 2429 030b 0209     		.2byte	0x902
 2430 030d 6B000000 		.4byte	0x6b
 2431 0311 0C010000 		.4byte	.LLST9
 2432 0315 00       		.byte	0
 2433 0316 0A       		.uleb128 0xa
 2434 0317 C7010000 		.4byte	.LASF43
 2435 031b 01       		.byte	0x1
 2436 031c 1209     		.2byte	0x912
 2437 031e 00000000 		.4byte	.LFB21
 2438 0322 14000000 		.4byte	.LFE21-.LFB21
 2439 0326 01       		.uleb128 0x1
 2440 0327 9C       		.byte	0x9c
 2441 0328 3D030000 		.4byte	0x33d
 2442 032c 0B       		.uleb128 0xb
 2443 032d A0030000 		.4byte	.LASF41
 2444 0331 01       		.byte	0x1
 2445 0332 1209     		.2byte	0x912
 2446 0334 6B000000 		.4byte	0x6b
 2447 0338 2D010000 		.4byte	.LLST10
 2448 033c 00       		.byte	0
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 96


 2449 033d 0A       		.uleb128 0xa
 2450 033e 5A030000 		.4byte	.LASF44
 2451 0342 01       		.byte	0x1
 2452 0343 2009     		.2byte	0x920
 2453 0345 00000000 		.4byte	.LFB22
 2454 0349 14000000 		.4byte	.LFE22-.LFB22
 2455 034d 01       		.uleb128 0x1
 2456 034e 9C       		.byte	0x9c
 2457 034f 64030000 		.4byte	0x364
 2458 0353 0B       		.uleb128 0xb
 2459 0354 A0030000 		.4byte	.LASF41
 2460 0358 01       		.byte	0x1
 2461 0359 2009     		.2byte	0x920
 2462 035b 6B000000 		.4byte	0x6b
 2463 035f 4E010000 		.4byte	.LLST11
 2464 0363 00       		.byte	0
 2465 0364 0A       		.uleb128 0xa
 2466 0365 02040000 		.4byte	.LASF45
 2467 0369 01       		.byte	0x1
 2468 036a 2F09     		.2byte	0x92f
 2469 036c 00000000 		.4byte	.LFB23
 2470 0370 14000000 		.4byte	.LFE23-.LFB23
 2471 0374 01       		.uleb128 0x1
 2472 0375 9C       		.byte	0x9c
 2473 0376 8B030000 		.4byte	0x38b
 2474 037a 0B       		.uleb128 0xb
 2475 037b A0030000 		.4byte	.LASF41
 2476 037f 01       		.byte	0x1
 2477 0380 2F09     		.2byte	0x92f
 2478 0382 6B000000 		.4byte	0x6b
 2479 0386 6F010000 		.4byte	.LLST12
 2480 038a 00       		.byte	0
 2481 038b 0A       		.uleb128 0xa
 2482 038c FE040000 		.4byte	.LASF46
 2483 0390 01       		.byte	0x1
 2484 0391 3E09     		.2byte	0x93e
 2485 0393 00000000 		.4byte	.LFB24
 2486 0397 04000000 		.4byte	.LFE24-.LFB24
 2487 039b 01       		.uleb128 0x1
 2488 039c 9C       		.byte	0x9c
 2489 039d B0030000 		.4byte	0x3b0
 2490 03a1 12       		.uleb128 0x12
 2491 03a2 45050000 		.4byte	.LASF34
 2492 03a6 01       		.byte	0x1
 2493 03a7 3E09     		.2byte	0x93e
 2494 03a9 6B000000 		.4byte	0x6b
 2495 03ad 01       		.uleb128 0x1
 2496 03ae 50       		.byte	0x50
 2497 03af 00       		.byte	0
 2498 03b0 0E       		.uleb128 0xe
 2499 03b1 C5030000 		.4byte	.LASF47
 2500 03b5 01       		.byte	0x1
 2501 03b6 5208     		.2byte	0x852
 2502 03b8 C6000000 		.4byte	0xc6
 2503 03bc 00000000 		.4byte	.LFB13
 2504 03c0 20000000 		.4byte	.LFE13-.LFB13
 2505 03c4 01       		.uleb128 0x1
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 97


 2506 03c5 9C       		.byte	0x9c
 2507 03c6 18040000 		.4byte	0x418
 2508 03ca 0B       		.uleb128 0xb
 2509 03cb A0030000 		.4byte	.LASF41
 2510 03cf 01       		.byte	0x1
 2511 03d0 5208     		.2byte	0x852
 2512 03d2 6B000000 		.4byte	0x6b
 2513 03d6 90010000 		.4byte	.LLST13
 2514 03da 0B       		.uleb128 0xb
 2515 03db 20040000 		.4byte	.LASF48
 2516 03df 01       		.byte	0x1
 2517 03e0 5208     		.2byte	0x852
 2518 03e2 C6000000 		.4byte	0xc6
 2519 03e6 B1010000 		.4byte	.LLST14
 2520 03ea 11       		.uleb128 0x11
 2521 03eb 46000000 		.4byte	.LASF49
 2522 03ef 01       		.byte	0x1
 2523 03f0 5408     		.2byte	0x854
 2524 03f2 C6000000 		.4byte	0xc6
 2525 03f6 01       		.uleb128 0x1
 2526 03f7 50       		.byte	0x50
 2527 03f8 13       		.uleb128 0x13
 2528 03f9 00000000 		.4byte	.LASF50
 2529 03fd 01       		.byte	0x1
 2530 03fe 5508     		.2byte	0x855
 2531 0400 18040000 		.4byte	0x418
 2532 0404 00000020 		.4byte	0x20000000
 2533 0408 14       		.uleb128 0x14
 2534 0409 10000000 		.4byte	.LVL35
 2535 040d 8B030000 		.4byte	0x38b
 2536 0411 15       		.uleb128 0x15
 2537 0412 01       		.uleb128 0x1
 2538 0413 50       		.byte	0x50
 2539 0414 01       		.uleb128 0x1
 2540 0415 30       		.byte	0x30
 2541 0416 00       		.byte	0
 2542 0417 00       		.byte	0
 2543 0418 06       		.uleb128 0x6
 2544 0419 04       		.byte	0x4
 2545 041a C6000000 		.4byte	0xc6
 2546 041e 0E       		.uleb128 0xe
 2547 041f 29050000 		.4byte	.LASF51
 2548 0423 01       		.byte	0x1
 2549 0424 7408     		.2byte	0x874
 2550 0426 C6000000 		.4byte	0xc6
 2551 042a 00000000 		.4byte	.LFB14
 2552 042e 1C000000 		.4byte	.LFE14-.LFB14
 2553 0432 01       		.uleb128 0x1
 2554 0433 9C       		.byte	0x9c
 2555 0434 68040000 		.4byte	0x468
 2556 0438 0B       		.uleb128 0xb
 2557 0439 A0030000 		.4byte	.LASF41
 2558 043d 01       		.byte	0x1
 2559 043e 7408     		.2byte	0x874
 2560 0440 6B000000 		.4byte	0x6b
 2561 0444 DD010000 		.4byte	.LLST15
 2562 0448 13       		.uleb128 0x13
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 98


 2563 0449 00000000 		.4byte	.LASF50
 2564 044d 01       		.byte	0x1
 2565 044e 7608     		.2byte	0x876
 2566 0450 18040000 		.4byte	0x418
 2567 0454 00000020 		.4byte	0x20000000
 2568 0458 14       		.uleb128 0x14
 2569 0459 0E000000 		.4byte	.LVL41
 2570 045d 8B030000 		.4byte	0x38b
 2571 0461 15       		.uleb128 0x15
 2572 0462 01       		.uleb128 0x1
 2573 0463 50       		.byte	0x50
 2574 0464 01       		.uleb128 0x1
 2575 0465 30       		.byte	0x30
 2576 0466 00       		.byte	0
 2577 0467 00       		.byte	0
 2578 0468 0E       		.uleb128 0xe
 2579 0469 91030000 		.4byte	.LASF52
 2580 046d 01       		.byte	0x1
 2581 046e 8A08     		.2byte	0x88a
 2582 0470 C6000000 		.4byte	0xc6
 2583 0474 00000000 		.4byte	.LFB15
 2584 0478 22000000 		.4byte	.LFE15-.LFB15
 2585 047c 01       		.uleb128 0x1
 2586 047d 9C       		.byte	0x9c
 2587 047e D0040000 		.4byte	0x4d0
 2588 0482 0B       		.uleb128 0xb
 2589 0483 A0030000 		.4byte	.LASF41
 2590 0487 01       		.byte	0x1
 2591 0488 8A08     		.2byte	0x88a
 2592 048a 6B000000 		.4byte	0x6b
 2593 048e FE010000 		.4byte	.LLST16
 2594 0492 0B       		.uleb128 0xb
 2595 0493 20040000 		.4byte	.LASF48
 2596 0497 01       		.byte	0x1
 2597 0498 8A08     		.2byte	0x88a
 2598 049a C6000000 		.4byte	0xc6
 2599 049e 1F020000 		.4byte	.LLST17
 2600 04a2 11       		.uleb128 0x11
 2601 04a3 46000000 		.4byte	.LASF49
 2602 04a7 01       		.byte	0x1
 2603 04a8 8C08     		.2byte	0x88c
 2604 04aa C6000000 		.4byte	0xc6
 2605 04ae 01       		.uleb128 0x1
 2606 04af 50       		.byte	0x50
 2607 04b0 13       		.uleb128 0x13
 2608 04b1 00000000 		.4byte	.LASF50
 2609 04b5 01       		.byte	0x1
 2610 04b6 8D08     		.2byte	0x88d
 2611 04b8 18040000 		.4byte	0x418
 2612 04bc 00000020 		.4byte	0x20000000
 2613 04c0 14       		.uleb128 0x14
 2614 04c1 10000000 		.4byte	.LVL45
 2615 04c5 8B030000 		.4byte	0x38b
 2616 04c9 15       		.uleb128 0x15
 2617 04ca 01       		.uleb128 0x1
 2618 04cb 50       		.byte	0x50
 2619 04cc 01       		.uleb128 0x1
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 99


 2620 04cd 30       		.byte	0x30
 2621 04ce 00       		.byte	0
 2622 04cf 00       		.byte	0
 2623 04d0 0E       		.uleb128 0xe
 2624 04d1 C5040000 		.4byte	.LASF53
 2625 04d5 01       		.byte	0x1
 2626 04d6 A608     		.2byte	0x8a6
 2627 04d8 C6000000 		.4byte	0xc6
 2628 04dc 00000000 		.4byte	.LFB16
 2629 04e0 1E000000 		.4byte	.LFE16-.LFB16
 2630 04e4 01       		.uleb128 0x1
 2631 04e5 9C       		.byte	0x9c
 2632 04e6 1A050000 		.4byte	0x51a
 2633 04ea 0B       		.uleb128 0xb
 2634 04eb A0030000 		.4byte	.LASF41
 2635 04ef 01       		.byte	0x1
 2636 04f0 A608     		.2byte	0x8a6
 2637 04f2 6B000000 		.4byte	0x6b
 2638 04f6 4B020000 		.4byte	.LLST18
 2639 04fa 13       		.uleb128 0x13
 2640 04fb 00000000 		.4byte	.LASF50
 2641 04ff 01       		.byte	0x1
 2642 0500 A808     		.2byte	0x8a8
 2643 0502 18040000 		.4byte	0x418
 2644 0506 00000020 		.4byte	0x20000000
 2645 050a 14       		.uleb128 0x14
 2646 050b 0E000000 		.4byte	.LVL51
 2647 050f 8B030000 		.4byte	0x38b
 2648 0513 15       		.uleb128 0x15
 2649 0514 01       		.uleb128 0x1
 2650 0515 50       		.byte	0x50
 2651 0516 01       		.uleb128 0x1
 2652 0517 30       		.byte	0x30
 2653 0518 00       		.byte	0
 2654 0519 00       		.byte	0
 2655 051a 0A       		.uleb128 0xa
 2656 051b 77040000 		.4byte	.LASF54
 2657 051f 01       		.byte	0x1
 2658 0520 B908     		.2byte	0x8b9
 2659 0522 00000000 		.4byte	.LFB17
 2660 0526 4C000000 		.4byte	.LFE17-.LFB17
 2661 052a 01       		.uleb128 0x1
 2662 052b 9C       		.byte	0x9c
 2663 052c B9050000 		.4byte	0x5b9
 2664 0530 0B       		.uleb128 0xb
 2665 0531 A0030000 		.4byte	.LASF41
 2666 0535 01       		.byte	0x1
 2667 0536 B908     		.2byte	0x8b9
 2668 0538 6B000000 		.4byte	0x6b
 2669 053c 6C020000 		.4byte	.LLST19
 2670 0540 0B       		.uleb128 0xb
 2671 0541 A7030000 		.4byte	.LASF55
 2672 0545 01       		.byte	0x1
 2673 0546 B908     		.2byte	0x8b9
 2674 0548 6B000000 		.4byte	0x6b
 2675 054c 8D020000 		.4byte	.LLST20
 2676 0550 0C       		.uleb128 0xc
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 100


 2677 0551 9C010000 		.4byte	.LASF23
 2678 0555 01       		.byte	0x1
 2679 0556 BB08     		.2byte	0x8bb
 2680 0558 6B000000 		.4byte	0x6b
 2681 055c AE020000 		.4byte	.LLST21
 2682 0560 0C       		.uleb128 0xc
 2683 0561 0F020000 		.4byte	.LASF56
 2684 0565 01       		.byte	0x1
 2685 0566 BC08     		.2byte	0x8bc
 2686 0568 83000000 		.4byte	0x83
 2687 056c C1020000 		.4byte	.LLST22
 2688 0570 0C       		.uleb128 0xc
 2689 0571 27000000 		.4byte	.LASF57
 2690 0575 01       		.byte	0x1
 2691 0576 BD08     		.2byte	0x8bd
 2692 0578 83000000 		.4byte	0x83
 2693 057c D4020000 		.4byte	.LLST23
 2694 0580 16       		.uleb128 0x16
 2695 0581 10000000 		.4byte	.LVL54
 2696 0585 8B030000 		.4byte	0x38b
 2697 0589 93050000 		.4byte	0x593
 2698 058d 15       		.uleb128 0x15
 2699 058e 01       		.uleb128 0x1
 2700 058f 50       		.byte	0x50
 2701 0590 01       		.uleb128 0x1
 2702 0591 30       		.byte	0x30
 2703 0592 00       		.byte	0
 2704 0593 16       		.uleb128 0x16
 2705 0594 1A000000 		.4byte	.LVL55
 2706 0598 8B030000 		.4byte	0x38b
 2707 059c A6050000 		.4byte	0x5a6
 2708 05a0 15       		.uleb128 0x15
 2709 05a1 01       		.uleb128 0x1
 2710 05a2 50       		.byte	0x50
 2711 05a3 01       		.uleb128 0x1
 2712 05a4 30       		.byte	0x30
 2713 05a5 00       		.byte	0
 2714 05a6 0D       		.uleb128 0xd
 2715 05a7 26000000 		.4byte	.LVL57
 2716 05ab B30A0000 		.4byte	0xab3
 2717 05af 0D       		.uleb128 0xd
 2718 05b0 46000000 		.4byte	.LVL63
 2719 05b4 BE0A0000 		.4byte	0xabe
 2720 05b8 00       		.byte	0
 2721 05b9 0E       		.uleb128 0xe
 2722 05ba 50020000 		.4byte	.LASF58
 2723 05be 01       		.byte	0x1
 2724 05bf DB08     		.2byte	0x8db
 2725 05c1 6B000000 		.4byte	0x6b
 2726 05c5 00000000 		.4byte	.LFB18
 2727 05c9 2C000000 		.4byte	.LFE18-.LFB18
 2728 05cd 01       		.uleb128 0x1
 2729 05ce 9C       		.byte	0x9c
 2730 05cf 03060000 		.4byte	0x603
 2731 05d3 0B       		.uleb128 0xb
 2732 05d4 A0030000 		.4byte	.LASF41
 2733 05d8 01       		.byte	0x1
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 101


 2734 05d9 DB08     		.2byte	0x8db
 2735 05db 6B000000 		.4byte	0x6b
 2736 05df 08030000 		.4byte	.LLST24
 2737 05e3 0C       		.uleb128 0xc
 2738 05e4 A7030000 		.4byte	.LASF55
 2739 05e8 01       		.byte	0x1
 2740 05e9 DD08     		.2byte	0x8dd
 2741 05eb 6B000000 		.4byte	0x6b
 2742 05ef 29030000 		.4byte	.LLST25
 2743 05f3 14       		.uleb128 0x14
 2744 05f4 0E000000 		.4byte	.LVL67
 2745 05f8 8B030000 		.4byte	0x38b
 2746 05fc 15       		.uleb128 0x15
 2747 05fd 01       		.uleb128 0x1
 2748 05fe 50       		.byte	0x50
 2749 05ff 01       		.uleb128 0x1
 2750 0600 30       		.byte	0x30
 2751 0601 00       		.byte	0
 2752 0602 00       		.byte	0
 2753 0603 0F       		.uleb128 0xf
 2754 0604 3A010000 		.4byte	.LASF59
 2755 0608 01       		.byte	0x1
 2756 0609 5609     		.2byte	0x956
 2757 060b 00000000 		.4byte	.LFB25
 2758 060f 18000000 		.4byte	.LFE25-.LFB25
 2759 0613 01       		.uleb128 0x1
 2760 0614 9C       		.byte	0x9c
 2761 0615 0A       		.uleb128 0xa
 2762 0616 C4050000 		.4byte	.LASF60
 2763 061a 01       		.byte	0x1
 2764 061b 6A09     		.2byte	0x96a
 2765 061d 00000000 		.4byte	.LFB26
 2766 0621 30000000 		.4byte	.LFE26-.LFB26
 2767 0625 01       		.uleb128 0x1
 2768 0626 9C       		.byte	0x9c
 2769 0627 4E060000 		.4byte	0x64e
 2770 062b 0B       		.uleb128 0xb
 2771 062c D4040000 		.4byte	.LASF61
 2772 0630 01       		.byte	0x1
 2773 0631 6A09     		.2byte	0x96a
 2774 0633 83000000 		.4byte	0x83
 2775 0637 3C030000 		.4byte	.LLST26
 2776 063b 0D       		.uleb128 0xd
 2777 063c 0E000000 		.4byte	.LVL72
 2778 0640 C90A0000 		.4byte	0xac9
 2779 0644 0D       		.uleb128 0xd
 2780 0645 26000000 		.4byte	.LVL74
 2781 0649 C90A0000 		.4byte	0xac9
 2782 064d 00       		.byte	0
 2783 064e 0A       		.uleb128 0xa
 2784 064f FE010000 		.4byte	.LASF62
 2785 0653 01       		.byte	0x1
 2786 0654 8109     		.2byte	0x981
 2787 0656 00000000 		.4byte	.LFB27
 2788 065a 14000000 		.4byte	.LFE27-.LFB27
 2789 065e 01       		.uleb128 0x1
 2790 065f 9C       		.byte	0x9c
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 102


 2791 0660 7E060000 		.4byte	0x67e
 2792 0664 0B       		.uleb128 0xb
 2793 0665 5C060000 		.4byte	.LASF63
 2794 0669 01       		.byte	0x1
 2795 066a 8109     		.2byte	0x981
 2796 066c 77000000 		.4byte	0x77
 2797 0670 5A030000 		.4byte	.LLST27
 2798 0674 0D       		.uleb128 0xd
 2799 0675 0C000000 		.4byte	.LVL78
 2800 0679 C90A0000 		.4byte	0xac9
 2801 067d 00       		.byte	0
 2802 067e 0A       		.uleb128 0xa
 2803 067f B0030000 		.4byte	.LASF64
 2804 0683 01       		.byte	0x1
 2805 0684 4002     		.2byte	0x240
 2806 0686 00000000 		.4byte	.LFB5
 2807 068a 64010000 		.4byte	.LFE5-.LFB5
 2808 068e 01       		.uleb128 0x1
 2809 068f 9C       		.byte	0x9c
 2810 0690 7F070000 		.4byte	0x77f
 2811 0694 0B       		.uleb128 0xb
 2812 0695 8B010000 		.4byte	.LASF65
 2813 0699 01       		.byte	0x1
 2814 069a 4002     		.2byte	0x240
 2815 069c 83000000 		.4byte	0x83
 2816 06a0 7B030000 		.4byte	.LLST28
 2817 06a4 0C       		.uleb128 0xc
 2818 06a5 0F000000 		.4byte	.LASF66
 2819 06a9 01       		.byte	0x1
 2820 06aa 4602     		.2byte	0x246
 2821 06ac 6B000000 		.4byte	0x6b
 2822 06b0 D0030000 		.4byte	.LLST29
 2823 06b4 0C       		.uleb128 0xc
 2824 06b5 28040000 		.4byte	.LASF67
 2825 06b9 01       		.byte	0x1
 2826 06ba 4702     		.2byte	0x247
 2827 06bc 6B000000 		.4byte	0x6b
 2828 06c0 0F040000 		.4byte	.LLST30
 2829 06c4 0C       		.uleb128 0xc
 2830 06c5 2C060000 		.4byte	.LASF68
 2831 06c9 01       		.byte	0x1
 2832 06ca 4802     		.2byte	0x248
 2833 06cc 6B000000 		.4byte	0x6b
 2834 06d0 4E040000 		.4byte	.LLST31
 2835 06d4 0C       		.uleb128 0xc
 2836 06d5 62000000 		.4byte	.LASF69
 2837 06d9 01       		.byte	0x1
 2838 06da 4902     		.2byte	0x249
 2839 06dc 6B000000 		.4byte	0x6b
 2840 06e0 61040000 		.4byte	.LLST32
 2841 06e4 0C       		.uleb128 0xc
 2842 06e5 AD050000 		.4byte	.LASF70
 2843 06e9 01       		.byte	0x1
 2844 06ea 4A02     		.2byte	0x24a
 2845 06ec 6B000000 		.4byte	0x6b
 2846 06f0 80040000 		.4byte	.LLST33
 2847 06f4 0C       		.uleb128 0xc
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 103


 2848 06f5 9C010000 		.4byte	.LASF23
 2849 06f9 01       		.byte	0x1
 2850 06fa 5502     		.2byte	0x255
 2851 06fc 6B000000 		.4byte	0x6b
 2852 0700 B2040000 		.4byte	.LLST34
 2853 0704 0D       		.uleb128 0xd
 2854 0705 10000000 		.4byte	.LVL80
 2855 0709 B30A0000 		.4byte	0xab3
 2856 070d 16       		.uleb128 0x16
 2857 070e B0000000 		.4byte	.LVL98
 2858 0712 C90A0000 		.4byte	0xac9
 2859 0716 20070000 		.4byte	0x720
 2860 071a 15       		.uleb128 0x15
 2861 071b 01       		.uleb128 0x1
 2862 071c 50       		.byte	0x50
 2863 071d 01       		.uleb128 0x1
 2864 071e 35       		.byte	0x35
 2865 071f 00       		.byte	0
 2866 0720 16       		.uleb128 0x16
 2867 0721 CE000000 		.4byte	.LVL101
 2868 0725 C90A0000 		.4byte	0xac9
 2869 0729 33070000 		.4byte	0x733
 2870 072d 15       		.uleb128 0x15
 2871 072e 01       		.uleb128 0x1
 2872 072f 50       		.byte	0x50
 2873 0730 01       		.uleb128 0x1
 2874 0731 35       		.byte	0x35
 2875 0732 00       		.byte	0
 2876 0733 16       		.uleb128 0x16
 2877 0734 EE000000 		.4byte	.LVL107
 2878 0738 4E060000 		.4byte	0x64e
 2879 073c 46070000 		.4byte	0x746
 2880 0740 15       		.uleb128 0x15
 2881 0741 01       		.uleb128 0x1
 2882 0742 50       		.byte	0x50
 2883 0743 01       		.uleb128 0x1
 2884 0744 35       		.byte	0x35
 2885 0745 00       		.byte	0
 2886 0746 16       		.uleb128 0x16
 2887 0747 00010000 		.4byte	.LVL108
 2888 074b C90A0000 		.4byte	0xac9
 2889 074f 59070000 		.4byte	0x759
 2890 0753 15       		.uleb128 0x15
 2891 0754 01       		.uleb128 0x1
 2892 0755 50       		.byte	0x50
 2893 0756 01       		.uleb128 0x1
 2894 0757 35       		.byte	0x35
 2895 0758 00       		.byte	0
 2896 0759 16       		.uleb128 0x16
 2897 075a 08010000 		.4byte	.LVL110
 2898 075e 8B030000 		.4byte	0x38b
 2899 0762 6C070000 		.4byte	0x76c
 2900 0766 15       		.uleb128 0x15
 2901 0767 01       		.uleb128 0x1
 2902 0768 50       		.byte	0x50
 2903 0769 01       		.uleb128 0x1
 2904 076a 30       		.byte	0x30
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 104


 2905 076b 00       		.byte	0
 2906 076c 14       		.uleb128 0x14
 2907 076d 0E010000 		.4byte	.LVL111
 2908 0771 BE0A0000 		.4byte	0xabe
 2909 0775 15       		.uleb128 0x15
 2910 0776 01       		.uleb128 0x1
 2911 0777 50       		.byte	0x50
 2912 0778 04       		.uleb128 0x4
 2913 0779 91       		.byte	0x91
 2914 077a 5C       		.sleb128 -36
 2915 077b 94       		.byte	0x94
 2916 077c 01       		.byte	0x1
 2917 077d 00       		.byte	0
 2918 077e 00       		.byte	0
 2919 077f 0A       		.uleb128 0xa
 2920 0780 A4040000 		.4byte	.LASF71
 2921 0784 01       		.byte	0x1
 2922 0785 B107     		.2byte	0x7b1
 2923 0787 00000000 		.4byte	.LFB6
 2924 078b 44000000 		.4byte	.LFE6-.LFB6
 2925 078f 01       		.uleb128 0x1
 2926 0790 9C       		.byte	0x9c
 2927 0791 C4070000 		.4byte	0x7c4
 2928 0795 0B       		.uleb128 0xb
 2929 0796 F4040000 		.4byte	.LASF72
 2930 079a 01       		.byte	0x1
 2931 079b B107     		.2byte	0x7b1
 2932 079d 83000000 		.4byte	0x83
 2933 07a1 DE040000 		.4byte	.LLST35
 2934 07a5 16       		.uleb128 0x16
 2935 07a6 2E000000 		.4byte	.LVL116
 2936 07aa 4E060000 		.4byte	0x64e
 2937 07ae BA070000 		.4byte	0x7ba
 2938 07b2 15       		.uleb128 0x15
 2939 07b3 01       		.uleb128 0x1
 2940 07b4 50       		.byte	0x50
 2941 07b5 03       		.uleb128 0x3
 2942 07b6 0A       		.byte	0xa
 2943 07b7 E803     		.2byte	0x3e8
 2944 07b9 00       		.byte	0
 2945 07ba 0D       		.uleb128 0xd
 2946 07bb 32000000 		.4byte	.LVL117
 2947 07bf 2B020000 		.4byte	0x22b
 2948 07c3 00       		.byte	0
 2949 07c4 17       		.uleb128 0x17
 2950 07c5 90010000 		.4byte	.LASF73
 2951 07c9 01       		.byte	0x1
 2952 07ca 8F09     		.2byte	0x98f
 2953 07cc 00000000 		.4byte	.LFB28
 2954 07d0 4C000000 		.4byte	.LFE28-.LFB28
 2955 07d4 01       		.uleb128 0x1
 2956 07d5 9C       		.byte	0x9c
 2957 07d6 EB070000 		.4byte	0x7eb
 2958 07da 0B       		.uleb128 0xb
 2959 07db 8B010000 		.4byte	.LASF65
 2960 07df 01       		.byte	0x1
 2961 07e0 8F09     		.2byte	0x98f
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 105


 2962 07e2 83000000 		.4byte	0x83
 2963 07e6 0A050000 		.4byte	.LLST36
 2964 07ea 00       		.byte	0
 2965 07eb 0F       		.uleb128 0xf
 2966 07ec 05060000 		.4byte	.LASF74
 2967 07f0 01       		.byte	0x1
 2968 07f1 FC09     		.2byte	0x9fc
 2969 07f3 00000000 		.4byte	.LFB32
 2970 07f7 10000000 		.4byte	.LFE32-.LFB32
 2971 07fb 01       		.uleb128 0x1
 2972 07fc 9C       		.byte	0x9c
 2973 07fd 0F       		.uleb128 0xf
 2974 07fe 4A010000 		.4byte	.LASF75
 2975 0802 01       		.byte	0x1
 2976 0803 0C0A     		.2byte	0xa0c
 2977 0805 00000000 		.4byte	.LFB33
 2978 0809 10000000 		.4byte	.LFE33-.LFB33
 2979 080d 01       		.uleb128 0x1
 2980 080e 9C       		.byte	0x9c
 2981 080f 0A       		.uleb128 0xa
 2982 0810 5E050000 		.4byte	.LASF76
 2983 0814 01       		.byte	0x1
 2984 0815 EB09     		.2byte	0x9eb
 2985 0817 00000000 		.4byte	.LFB31
 2986 081b 18000000 		.4byte	.LFE31-.LFB31
 2987 081f 01       		.uleb128 0x1
 2988 0820 9C       		.byte	0x9c
 2989 0821 2F080000 		.4byte	0x82f
 2990 0825 0D       		.uleb128 0xd
 2991 0826 06000000 		.4byte	.LVL122
 2992 082a FD070000 		.4byte	0x7fd
 2993 082e 00       		.byte	0
 2994 082f 0F       		.uleb128 0xf
 2995 0830 CC050000 		.4byte	.LASF77
 2996 0834 01       		.byte	0x1
 2997 0835 1C0A     		.2byte	0xa1c
 2998 0837 00000000 		.4byte	.LFB34
 2999 083b 10000000 		.4byte	.LFE34-.LFB34
 3000 083f 01       		.uleb128 0x1
 3001 0840 9C       		.byte	0x9c
 3002 0841 0A       		.uleb128 0xa
 3003 0842 70060000 		.4byte	.LASF78
 3004 0846 01       		.byte	0x1
 3005 0847 2D0A     		.2byte	0xa2d
 3006 0849 00000000 		.4byte	.LFB35
 3007 084d 10000000 		.4byte	.LFE35-.LFB35
 3008 0851 01       		.uleb128 0x1
 3009 0852 9C       		.byte	0x9c
 3010 0853 68080000 		.4byte	0x868
 3011 0857 0B       		.uleb128 0xb
 3012 0858 27000000 		.4byte	.LASF57
 3013 085c 01       		.byte	0x1
 3014 085d 2D0A     		.2byte	0xa2d
 3015 085f 83000000 		.4byte	0x83
 3016 0863 2B050000 		.4byte	.LLST37
 3017 0867 00       		.byte	0
 3018 0868 10       		.uleb128 0x10
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 106


 3019 0869 AB010000 		.4byte	.LASF80
 3020 086d 01       		.byte	0x1
 3021 086e 3D0A     		.2byte	0xa3d
 3022 0870 83000000 		.4byte	0x83
 3023 0874 00000000 		.4byte	.LFB36
 3024 0878 10000000 		.4byte	.LFE36-.LFB36
 3025 087c 01       		.uleb128 0x1
 3026 087d 9C       		.byte	0x9c
 3027 087e 10       		.uleb128 0x10
 3028 087f 57040000 		.4byte	.LASF81
 3029 0883 01       		.byte	0x1
 3030 0884 4D0A     		.2byte	0xa4d
 3031 0886 83000000 		.4byte	0x83
 3032 088a 00000000 		.4byte	.LFB37
 3033 088e 10000000 		.4byte	.LFE37-.LFB37
 3034 0892 01       		.uleb128 0x1
 3035 0893 9C       		.byte	0x9c
 3036 0894 10       		.uleb128 0x10
 3037 0895 D4020000 		.4byte	.LASF82
 3038 0899 01       		.byte	0x1
 3039 089a 8A0A     		.2byte	0xa8a
 3040 089c 83000000 		.4byte	0x83
 3041 08a0 00000000 		.4byte	.LFB38
 3042 08a4 10000000 		.4byte	.LFE38-.LFB38
 3043 08a8 01       		.uleb128 0x1
 3044 08a9 9C       		.byte	0x9c
 3045 08aa 18       		.uleb128 0x18
 3046 08ab 83060000 		.4byte	.LASF105
 3047 08af 01       		.byte	0x1
 3048 08b0 DF0A     		.2byte	0xadf
 3049 08b2 00000000 		.4byte	.LFB42
 3050 08b6 28000000 		.4byte	.LFE42-.LFB42
 3051 08ba 01       		.uleb128 0x1
 3052 08bb 9C       		.byte	0x9c
 3053 08bc D8080000 		.4byte	0x8d8
 3054 08c0 19       		.uleb128 0x19
 3055 08c1 6900     		.ascii	"i\000"
 3056 08c3 01       		.byte	0x1
 3057 08c4 E10A     		.2byte	0xae1
 3058 08c6 83000000 		.4byte	0x83
 3059 08ca 4C050000 		.4byte	.LLST38
 3060 08ce 0D       		.uleb128 0xd
 3061 08cf 06000000 		.4byte	.LVL125
 3062 08d3 94080000 		.4byte	0x894
 3063 08d7 00       		.byte	0
 3064 08d8 0F       		.uleb128 0xf
 3065 08d9 F7020000 		.4byte	.LASF83
 3066 08dd 01       		.byte	0x1
 3067 08de 970A     		.2byte	0xa97
 3068 08e0 00000000 		.4byte	.LFB39
 3069 08e4 0C000000 		.4byte	.LFE39-.LFB39
 3070 08e8 01       		.uleb128 0x1
 3071 08e9 9C       		.byte	0x9c
 3072 08ea 17       		.uleb128 0x17
 3073 08eb 6E020000 		.4byte	.LASF84
 3074 08ef 01       		.byte	0x1
 3075 08f0 CC09     		.2byte	0x9cc
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 107


 3076 08f2 00000000 		.4byte	.LFB30
 3077 08f6 44000000 		.4byte	.LFE30-.LFB30
 3078 08fa 01       		.uleb128 0x1
 3079 08fb 9C       		.byte	0x9c
 3080 08fc 4C090000 		.4byte	0x94c
 3081 0900 19       		.uleb128 0x19
 3082 0901 6900     		.ascii	"i\000"
 3083 0903 01       		.byte	0x1
 3084 0904 CE09     		.2byte	0x9ce
 3085 0906 83000000 		.4byte	0x83
 3086 090a 6A050000 		.4byte	.LLST39
 3087 090e 16       		.uleb128 0x16
 3088 090f 1C000000 		.4byte	.LVL135
 3089 0913 B0030000 		.4byte	0x3b0
 3090 0917 2A090000 		.4byte	0x92a
 3091 091b 15       		.uleb128 0x15
 3092 091c 01       		.uleb128 0x1
 3093 091d 50       		.byte	0x50
 3094 091e 01       		.uleb128 0x1
 3095 091f 3F       		.byte	0x3f
 3096 0920 15       		.uleb128 0x15
 3097 0921 01       		.uleb128 0x1
 3098 0922 51       		.byte	0x51
 3099 0923 05       		.uleb128 0x5
 3100 0924 03       		.byte	0x3
 3101 0925 00000000 		.4byte	CySysTickServiceCallbacks
 3102 0929 00       		.byte	0
 3103 092a 0D       		.uleb128 0xd
 3104 092b 2C000000 		.4byte	.LVL137
 3105 092f 41080000 		.4byte	0x841
 3106 0933 0D       		.uleb128 0xd
 3107 0934 30000000 		.4byte	.LVL138
 3108 0938 D8080000 		.4byte	0x8d8
 3109 093c 14       		.uleb128 0x14
 3110 093d 36000000 		.4byte	.LVL139
 3111 0941 C4020000 		.4byte	0x2c4
 3112 0945 15       		.uleb128 0x15
 3113 0946 01       		.uleb128 0x1
 3114 0947 50       		.byte	0x50
 3115 0948 01       		.uleb128 0x1
 3116 0949 3F       		.byte	0x3f
 3117 094a 00       		.byte	0
 3118 094b 00       		.byte	0
 3119 094c 0A       		.uleb128 0xa
 3120 094d DD030000 		.4byte	.LASF85
 3121 0951 01       		.byte	0x1
 3122 0952 AF09     		.2byte	0x9af
 3123 0954 00000000 		.4byte	.LFB29
 3124 0958 20000000 		.4byte	.LFE29-.LFB29
 3125 095c 01       		.uleb128 0x1
 3126 095d 9C       		.byte	0x9c
 3127 095e 75090000 		.4byte	0x975
 3128 0962 0D       		.uleb128 0xd
 3129 0963 0E000000 		.4byte	.LVL140
 3130 0967 EA080000 		.4byte	0x8ea
 3131 096b 0D       		.uleb128 0xd
 3132 096c 18000000 		.4byte	.LVL141
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 108


 3133 0970 0F080000 		.4byte	0x80f
 3134 0974 00       		.byte	0
 3135 0975 0E       		.uleb128 0xe
 3136 0976 85050000 		.4byte	.LASF86
 3137 097a 01       		.byte	0x1
 3138 097b BA0A     		.2byte	0xaba
 3139 097d E7000000 		.4byte	0xe7
 3140 0981 00000000 		.4byte	.LFB40
 3141 0985 10000000 		.4byte	.LFE40-.LFB40
 3142 0989 01       		.uleb128 0x1
 3143 098a 9C       		.byte	0x9c
 3144 098b BC090000 		.4byte	0x9bc
 3145 098f 0B       		.uleb128 0xb
 3146 0990 A0030000 		.4byte	.LASF41
 3147 0994 01       		.byte	0x1
 3148 0995 BA0A     		.2byte	0xaba
 3149 0997 83000000 		.4byte	0x83
 3150 099b 89050000 		.4byte	.LLST40
 3151 099f 12       		.uleb128 0x12
 3152 09a0 3D040000 		.4byte	.LASF87
 3153 09a4 01       		.byte	0x1
 3154 09a5 BA0A     		.2byte	0xaba
 3155 09a7 E7000000 		.4byte	0xe7
 3156 09ab 01       		.uleb128 0x1
 3157 09ac 51       		.byte	0x51
 3158 09ad 11       		.uleb128 0x11
 3159 09ae 4D000000 		.4byte	.LASF88
 3160 09b2 01       		.byte	0x1
 3161 09b3 BC0A     		.2byte	0xabc
 3162 09b5 E7000000 		.4byte	0xe7
 3163 09b9 01       		.uleb128 0x1
 3164 09ba 50       		.byte	0x50
 3165 09bb 00       		.byte	0
 3166 09bc 0E       		.uleb128 0xe
 3167 09bd D4010000 		.4byte	.LASF89
 3168 09c1 01       		.byte	0x1
 3169 09c2 D20A     		.2byte	0xad2
 3170 09c4 E7000000 		.4byte	0xe7
 3171 09c8 00000000 		.4byte	.LFB41
 3172 09cc 0C000000 		.4byte	.LFE41-.LFB41
 3173 09d0 01       		.uleb128 0x1
 3174 09d1 9C       		.byte	0x9c
 3175 09d2 E7090000 		.4byte	0x9e7
 3176 09d6 0B       		.uleb128 0xb
 3177 09d7 A0030000 		.4byte	.LASF41
 3178 09db 01       		.byte	0x1
 3179 09dc D20A     		.2byte	0xad2
 3180 09de 83000000 		.4byte	0x83
 3181 09e2 AA050000 		.4byte	.LLST41
 3182 09e6 00       		.byte	0
 3183 09e7 0A       		.uleb128 0xa
 3184 09e8 C6020000 		.4byte	.LASF90
 3185 09ec 01       		.byte	0x1
 3186 09ed FF0A     		.2byte	0xaff
 3187 09ef 00000000 		.4byte	.LFB43
 3188 09f3 70000000 		.4byte	.LFE43-.LFB43
 3189 09f7 01       		.uleb128 0x1
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 109


 3190 09f8 9C       		.byte	0x9c
 3191 09f9 0C0A0000 		.4byte	0xa0c
 3192 09fd 12       		.uleb128 0x12
 3193 09fe BB050000 		.4byte	.LASF91
 3194 0a02 01       		.byte	0x1
 3195 0a03 FF0A     		.2byte	0xaff
 3196 0a05 0C0A0000 		.4byte	0xa0c
 3197 0a09 01       		.uleb128 0x1
 3198 0a0a 50       		.byte	0x50
 3199 0a0b 00       		.byte	0
 3200 0a0c 06       		.uleb128 0x6
 3201 0a0d 04       		.byte	0x4
 3202 0a0e 83000000 		.4byte	0x83
 3203 0a12 1A       		.uleb128 0x1a
 3204 0a13 E7000000 		.4byte	0xe7
 3205 0a17 220A0000 		.4byte	0xa22
 3206 0a1b 1B       		.uleb128 0x1b
 3207 0a1c E0000000 		.4byte	0xe0
 3208 0a20 04       		.byte	0x4
 3209 0a21 00       		.byte	0
 3210 0a22 1C       		.uleb128 0x1c
 3211 0a23 9A050000 		.4byte	.LASF92
 3212 0a27 01       		.byte	0x1
 3213 0a28 22       		.byte	0x22
 3214 0a29 120A0000 		.4byte	0xa12
 3215 0a2d 05       		.uleb128 0x5
 3216 0a2e 03       		.byte	0x3
 3217 0a2f 00000000 		.4byte	CySysTickCallbacks
 3218 0a33 1D       		.uleb128 0x1d
 3219 0a34 69040000 		.4byte	.LASF93
 3220 0a38 01       		.byte	0x1
 3221 0a39 1B       		.byte	0x1b
 3222 0a3a 83000000 		.4byte	0x83
 3223 0a3e 05       		.uleb128 0x5
 3224 0a3f 03       		.byte	0x3
 3225 0a40 00000000 		.4byte	cydelayFreqHz
 3226 0a44 1D       		.uleb128 0x1d
 3227 0a45 EF010000 		.4byte	.LASF94
 3228 0a49 01       		.byte	0x1
 3229 0a4a 1C       		.byte	0x1c
 3230 0a4b 83000000 		.4byte	0x83
 3231 0a4f 05       		.uleb128 0x5
 3232 0a50 03       		.byte	0x3
 3233 0a51 00000000 		.4byte	cydelayFreqKhz
 3234 0a55 1D       		.uleb128 0x1d
 3235 0a56 F6050000 		.4byte	.LASF95
 3236 0a5a 01       		.byte	0x1
 3237 0a5b 1D       		.byte	0x1d
 3238 0a5c 6B000000 		.4byte	0x6b
 3239 0a60 05       		.uleb128 0x5
 3240 0a61 03       		.byte	0x3
 3241 0a62 00000000 		.4byte	cydelayFreqMhz
 3242 0a66 1D       		.uleb128 0x1d
 3243 0a67 61020000 		.4byte	.LASF96
 3244 0a6b 01       		.byte	0x1
 3245 0a6c 1E       		.byte	0x1e
 3246 0a6d 83000000 		.4byte	0x83
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 110


 3247 0a71 05       		.uleb128 0x5
 3248 0a72 03       		.byte	0x3
 3249 0a73 00000000 		.4byte	cydelay32kMs
 3250 0a77 1D       		.uleb128 0x1d
 3251 0a78 1C010000 		.4byte	.LASF97
 3252 0a7c 01       		.byte	0x1
 3253 0a7d 35       		.byte	0x35
 3254 0a7e 83000000 		.4byte	0x83
 3255 0a82 05       		.uleb128 0x5
 3256 0a83 03       		.byte	0x3
 3257 0a84 00000000 		.4byte	CySysTickInitVar
 3258 0a88 1A       		.uleb128 0x1a
 3259 0a89 980A0000 		.4byte	0xa98
 3260 0a8d 980A0000 		.4byte	0xa98
 3261 0a91 1B       		.uleb128 0x1b
 3262 0a92 E0000000 		.4byte	0xe0
 3263 0a96 2D       		.byte	0x2d
 3264 0a97 00       		.byte	0
 3265 0a98 1E       		.uleb128 0x1e
 3266 0a99 6B000000 		.4byte	0x6b
 3267 0a9d 1D       		.uleb128 0x1d
 3268 0a9e 46040000 		.4byte	.LASF98
 3269 0aa2 01       		.byte	0x1
 3270 0aa3 3A       		.byte	0x3a
 3271 0aa4 AE0A0000 		.4byte	0xaae
 3272 0aa8 05       		.uleb128 0x5
 3273 0aa9 03       		.byte	0x3
 3274 0aaa 00000000 		.4byte	cyImoFreqMhz2Reg
 3275 0aae 1E       		.uleb128 0x1e
 3276 0aaf 880A0000 		.4byte	0xa88
 3277 0ab3 1F       		.uleb128 0x1f
 3278 0ab4 43030000 		.4byte	.LASF99
 3279 0ab8 43030000 		.4byte	.LASF99
 3280 0abc 03       		.byte	0x3
 3281 0abd E3       		.byte	0xe3
 3282 0abe 1F       		.uleb128 0x1f
 3283 0abf 8E040000 		.4byte	.LASF100
 3284 0ac3 8E040000 		.4byte	.LASF100
 3285 0ac7 03       		.byte	0x3
 3286 0ac8 E4       		.byte	0xe4
 3287 0ac9 1F       		.uleb128 0x1f
 3288 0aca E1040000 		.4byte	.LASF101
 3289 0ace E1040000 		.4byte	.LASF101
 3290 0ad2 03       		.byte	0x3
 3291 0ad3 DA       		.byte	0xda
 3292 0ad4 00       		.byte	0
 3293              		.section	.debug_abbrev,"",%progbits
 3294              	.Ldebug_abbrev0:
 3295 0000 01       		.uleb128 0x1
 3296 0001 11       		.uleb128 0x11
 3297 0002 01       		.byte	0x1
 3298 0003 25       		.uleb128 0x25
 3299 0004 0E       		.uleb128 0xe
 3300 0005 13       		.uleb128 0x13
 3301 0006 0B       		.uleb128 0xb
 3302 0007 03       		.uleb128 0x3
 3303 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 111


 3304 0009 1B       		.uleb128 0x1b
 3305 000a 0E       		.uleb128 0xe
 3306 000b 55       		.uleb128 0x55
 3307 000c 17       		.uleb128 0x17
 3308 000d 11       		.uleb128 0x11
 3309 000e 01       		.uleb128 0x1
 3310 000f 10       		.uleb128 0x10
 3311 0010 17       		.uleb128 0x17
 3312 0011 00       		.byte	0
 3313 0012 00       		.byte	0
 3314 0013 02       		.uleb128 0x2
 3315 0014 24       		.uleb128 0x24
 3316 0015 00       		.byte	0
 3317 0016 0B       		.uleb128 0xb
 3318 0017 0B       		.uleb128 0xb
 3319 0018 3E       		.uleb128 0x3e
 3320 0019 0B       		.uleb128 0xb
 3321 001a 03       		.uleb128 0x3
 3322 001b 0E       		.uleb128 0xe
 3323 001c 00       		.byte	0
 3324 001d 00       		.byte	0
 3325 001e 03       		.uleb128 0x3
 3326 001f 24       		.uleb128 0x24
 3327 0020 00       		.byte	0
 3328 0021 0B       		.uleb128 0xb
 3329 0022 0B       		.uleb128 0xb
 3330 0023 3E       		.uleb128 0x3e
 3331 0024 0B       		.uleb128 0xb
 3332 0025 03       		.uleb128 0x3
 3333 0026 08       		.uleb128 0x8
 3334 0027 00       		.byte	0
 3335 0028 00       		.byte	0
 3336 0029 04       		.uleb128 0x4
 3337 002a 16       		.uleb128 0x16
 3338 002b 00       		.byte	0
 3339 002c 03       		.uleb128 0x3
 3340 002d 0E       		.uleb128 0xe
 3341 002e 3A       		.uleb128 0x3a
 3342 002f 0B       		.uleb128 0xb
 3343 0030 3B       		.uleb128 0x3b
 3344 0031 05       		.uleb128 0x5
 3345 0032 49       		.uleb128 0x49
 3346 0033 13       		.uleb128 0x13
 3347 0034 00       		.byte	0
 3348 0035 00       		.byte	0
 3349 0036 05       		.uleb128 0x5
 3350 0037 35       		.uleb128 0x35
 3351 0038 00       		.byte	0
 3352 0039 49       		.uleb128 0x49
 3353 003a 13       		.uleb128 0x13
 3354 003b 00       		.byte	0
 3355 003c 00       		.byte	0
 3356 003d 06       		.uleb128 0x6
 3357 003e 0F       		.uleb128 0xf
 3358 003f 00       		.byte	0
 3359 0040 0B       		.uleb128 0xb
 3360 0041 0B       		.uleb128 0xb
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 112


 3361 0042 49       		.uleb128 0x49
 3362 0043 13       		.uleb128 0x13
 3363 0044 00       		.byte	0
 3364 0045 00       		.byte	0
 3365 0046 07       		.uleb128 0x7
 3366 0047 15       		.uleb128 0x15
 3367 0048 00       		.byte	0
 3368 0049 27       		.uleb128 0x27
 3369 004a 19       		.uleb128 0x19
 3370 004b 00       		.byte	0
 3371 004c 00       		.byte	0
 3372 004d 08       		.uleb128 0x8
 3373 004e 16       		.uleb128 0x16
 3374 004f 00       		.byte	0
 3375 0050 03       		.uleb128 0x3
 3376 0051 0E       		.uleb128 0xe
 3377 0052 3A       		.uleb128 0x3a
 3378 0053 0B       		.uleb128 0xb
 3379 0054 3B       		.uleb128 0x3b
 3380 0055 0B       		.uleb128 0xb
 3381 0056 49       		.uleb128 0x49
 3382 0057 13       		.uleb128 0x13
 3383 0058 00       		.byte	0
 3384 0059 00       		.byte	0
 3385 005a 09       		.uleb128 0x9
 3386 005b 2E       		.uleb128 0x2e
 3387 005c 00       		.byte	0
 3388 005d 3F       		.uleb128 0x3f
 3389 005e 19       		.uleb128 0x19
 3390 005f 03       		.uleb128 0x3
 3391 0060 0E       		.uleb128 0xe
 3392 0061 3A       		.uleb128 0x3a
 3393 0062 0B       		.uleb128 0xb
 3394 0063 3B       		.uleb128 0x3b
 3395 0064 0B       		.uleb128 0xb
 3396 0065 27       		.uleb128 0x27
 3397 0066 19       		.uleb128 0x19
 3398 0067 11       		.uleb128 0x11
 3399 0068 01       		.uleb128 0x1
 3400 0069 12       		.uleb128 0x12
 3401 006a 06       		.uleb128 0x6
 3402 006b 40       		.uleb128 0x40
 3403 006c 18       		.uleb128 0x18
 3404 006d 9742     		.uleb128 0x2117
 3405 006f 19       		.uleb128 0x19
 3406 0070 00       		.byte	0
 3407 0071 00       		.byte	0
 3408 0072 0A       		.uleb128 0xa
 3409 0073 2E       		.uleb128 0x2e
 3410 0074 01       		.byte	0x1
 3411 0075 3F       		.uleb128 0x3f
 3412 0076 19       		.uleb128 0x19
 3413 0077 03       		.uleb128 0x3
 3414 0078 0E       		.uleb128 0xe
 3415 0079 3A       		.uleb128 0x3a
 3416 007a 0B       		.uleb128 0xb
 3417 007b 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 113


 3418 007c 05       		.uleb128 0x5
 3419 007d 27       		.uleb128 0x27
 3420 007e 19       		.uleb128 0x19
 3421 007f 11       		.uleb128 0x11
 3422 0080 01       		.uleb128 0x1
 3423 0081 12       		.uleb128 0x12
 3424 0082 06       		.uleb128 0x6
 3425 0083 40       		.uleb128 0x40
 3426 0084 18       		.uleb128 0x18
 3427 0085 9742     		.uleb128 0x2117
 3428 0087 19       		.uleb128 0x19
 3429 0088 01       		.uleb128 0x1
 3430 0089 13       		.uleb128 0x13
 3431 008a 00       		.byte	0
 3432 008b 00       		.byte	0
 3433 008c 0B       		.uleb128 0xb
 3434 008d 05       		.uleb128 0x5
 3435 008e 00       		.byte	0
 3436 008f 03       		.uleb128 0x3
 3437 0090 0E       		.uleb128 0xe
 3438 0091 3A       		.uleb128 0x3a
 3439 0092 0B       		.uleb128 0xb
 3440 0093 3B       		.uleb128 0x3b
 3441 0094 05       		.uleb128 0x5
 3442 0095 49       		.uleb128 0x49
 3443 0096 13       		.uleb128 0x13
 3444 0097 02       		.uleb128 0x2
 3445 0098 17       		.uleb128 0x17
 3446 0099 00       		.byte	0
 3447 009a 00       		.byte	0
 3448 009b 0C       		.uleb128 0xc
 3449 009c 34       		.uleb128 0x34
 3450 009d 00       		.byte	0
 3451 009e 03       		.uleb128 0x3
 3452 009f 0E       		.uleb128 0xe
 3453 00a0 3A       		.uleb128 0x3a
 3454 00a1 0B       		.uleb128 0xb
 3455 00a2 3B       		.uleb128 0x3b
 3456 00a3 05       		.uleb128 0x5
 3457 00a4 49       		.uleb128 0x49
 3458 00a5 13       		.uleb128 0x13
 3459 00a6 02       		.uleb128 0x2
 3460 00a7 17       		.uleb128 0x17
 3461 00a8 00       		.byte	0
 3462 00a9 00       		.byte	0
 3463 00aa 0D       		.uleb128 0xd
 3464 00ab 898201   		.uleb128 0x4109
 3465 00ae 00       		.byte	0
 3466 00af 11       		.uleb128 0x11
 3467 00b0 01       		.uleb128 0x1
 3468 00b1 31       		.uleb128 0x31
 3469 00b2 13       		.uleb128 0x13
 3470 00b3 00       		.byte	0
 3471 00b4 00       		.byte	0
 3472 00b5 0E       		.uleb128 0xe
 3473 00b6 2E       		.uleb128 0x2e
 3474 00b7 01       		.byte	0x1
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 114


 3475 00b8 3F       		.uleb128 0x3f
 3476 00b9 19       		.uleb128 0x19
 3477 00ba 03       		.uleb128 0x3
 3478 00bb 0E       		.uleb128 0xe
 3479 00bc 3A       		.uleb128 0x3a
 3480 00bd 0B       		.uleb128 0xb
 3481 00be 3B       		.uleb128 0x3b
 3482 00bf 05       		.uleb128 0x5
 3483 00c0 27       		.uleb128 0x27
 3484 00c1 19       		.uleb128 0x19
 3485 00c2 49       		.uleb128 0x49
 3486 00c3 13       		.uleb128 0x13
 3487 00c4 11       		.uleb128 0x11
 3488 00c5 01       		.uleb128 0x1
 3489 00c6 12       		.uleb128 0x12
 3490 00c7 06       		.uleb128 0x6
 3491 00c8 40       		.uleb128 0x40
 3492 00c9 18       		.uleb128 0x18
 3493 00ca 9742     		.uleb128 0x2117
 3494 00cc 19       		.uleb128 0x19
 3495 00cd 01       		.uleb128 0x1
 3496 00ce 13       		.uleb128 0x13
 3497 00cf 00       		.byte	0
 3498 00d0 00       		.byte	0
 3499 00d1 0F       		.uleb128 0xf
 3500 00d2 2E       		.uleb128 0x2e
 3501 00d3 00       		.byte	0
 3502 00d4 3F       		.uleb128 0x3f
 3503 00d5 19       		.uleb128 0x19
 3504 00d6 03       		.uleb128 0x3
 3505 00d7 0E       		.uleb128 0xe
 3506 00d8 3A       		.uleb128 0x3a
 3507 00d9 0B       		.uleb128 0xb
 3508 00da 3B       		.uleb128 0x3b
 3509 00db 05       		.uleb128 0x5
 3510 00dc 27       		.uleb128 0x27
 3511 00dd 19       		.uleb128 0x19
 3512 00de 11       		.uleb128 0x11
 3513 00df 01       		.uleb128 0x1
 3514 00e0 12       		.uleb128 0x12
 3515 00e1 06       		.uleb128 0x6
 3516 00e2 40       		.uleb128 0x40
 3517 00e3 18       		.uleb128 0x18
 3518 00e4 9742     		.uleb128 0x2117
 3519 00e6 19       		.uleb128 0x19
 3520 00e7 00       		.byte	0
 3521 00e8 00       		.byte	0
 3522 00e9 10       		.uleb128 0x10
 3523 00ea 2E       		.uleb128 0x2e
 3524 00eb 00       		.byte	0
 3525 00ec 3F       		.uleb128 0x3f
 3526 00ed 19       		.uleb128 0x19
 3527 00ee 03       		.uleb128 0x3
 3528 00ef 0E       		.uleb128 0xe
 3529 00f0 3A       		.uleb128 0x3a
 3530 00f1 0B       		.uleb128 0xb
 3531 00f2 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 115


 3532 00f3 05       		.uleb128 0x5
 3533 00f4 27       		.uleb128 0x27
 3534 00f5 19       		.uleb128 0x19
 3535 00f6 49       		.uleb128 0x49
 3536 00f7 13       		.uleb128 0x13
 3537 00f8 11       		.uleb128 0x11
 3538 00f9 01       		.uleb128 0x1
 3539 00fa 12       		.uleb128 0x12
 3540 00fb 06       		.uleb128 0x6
 3541 00fc 40       		.uleb128 0x40
 3542 00fd 18       		.uleb128 0x18
 3543 00fe 9742     		.uleb128 0x2117
 3544 0100 19       		.uleb128 0x19
 3545 0101 00       		.byte	0
 3546 0102 00       		.byte	0
 3547 0103 11       		.uleb128 0x11
 3548 0104 34       		.uleb128 0x34
 3549 0105 00       		.byte	0
 3550 0106 03       		.uleb128 0x3
 3551 0107 0E       		.uleb128 0xe
 3552 0108 3A       		.uleb128 0x3a
 3553 0109 0B       		.uleb128 0xb
 3554 010a 3B       		.uleb128 0x3b
 3555 010b 05       		.uleb128 0x5
 3556 010c 49       		.uleb128 0x49
 3557 010d 13       		.uleb128 0x13
 3558 010e 02       		.uleb128 0x2
 3559 010f 18       		.uleb128 0x18
 3560 0110 00       		.byte	0
 3561 0111 00       		.byte	0
 3562 0112 12       		.uleb128 0x12
 3563 0113 05       		.uleb128 0x5
 3564 0114 00       		.byte	0
 3565 0115 03       		.uleb128 0x3
 3566 0116 0E       		.uleb128 0xe
 3567 0117 3A       		.uleb128 0x3a
 3568 0118 0B       		.uleb128 0xb
 3569 0119 3B       		.uleb128 0x3b
 3570 011a 05       		.uleb128 0x5
 3571 011b 49       		.uleb128 0x49
 3572 011c 13       		.uleb128 0x13
 3573 011d 02       		.uleb128 0x2
 3574 011e 18       		.uleb128 0x18
 3575 011f 00       		.byte	0
 3576 0120 00       		.byte	0
 3577 0121 13       		.uleb128 0x13
 3578 0122 34       		.uleb128 0x34
 3579 0123 00       		.byte	0
 3580 0124 03       		.uleb128 0x3
 3581 0125 0E       		.uleb128 0xe
 3582 0126 3A       		.uleb128 0x3a
 3583 0127 0B       		.uleb128 0xb
 3584 0128 3B       		.uleb128 0x3b
 3585 0129 05       		.uleb128 0x5
 3586 012a 49       		.uleb128 0x49
 3587 012b 13       		.uleb128 0x13
 3588 012c 1C       		.uleb128 0x1c
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 116


 3589 012d 06       		.uleb128 0x6
 3590 012e 00       		.byte	0
 3591 012f 00       		.byte	0
 3592 0130 14       		.uleb128 0x14
 3593 0131 898201   		.uleb128 0x4109
 3594 0134 01       		.byte	0x1
 3595 0135 11       		.uleb128 0x11
 3596 0136 01       		.uleb128 0x1
 3597 0137 31       		.uleb128 0x31
 3598 0138 13       		.uleb128 0x13
 3599 0139 00       		.byte	0
 3600 013a 00       		.byte	0
 3601 013b 15       		.uleb128 0x15
 3602 013c 8A8201   		.uleb128 0x410a
 3603 013f 00       		.byte	0
 3604 0140 02       		.uleb128 0x2
 3605 0141 18       		.uleb128 0x18
 3606 0142 9142     		.uleb128 0x2111
 3607 0144 18       		.uleb128 0x18
 3608 0145 00       		.byte	0
 3609 0146 00       		.byte	0
 3610 0147 16       		.uleb128 0x16
 3611 0148 898201   		.uleb128 0x4109
 3612 014b 01       		.byte	0x1
 3613 014c 11       		.uleb128 0x11
 3614 014d 01       		.uleb128 0x1
 3615 014e 31       		.uleb128 0x31
 3616 014f 13       		.uleb128 0x13
 3617 0150 01       		.uleb128 0x1
 3618 0151 13       		.uleb128 0x13
 3619 0152 00       		.byte	0
 3620 0153 00       		.byte	0
 3621 0154 17       		.uleb128 0x17
 3622 0155 2E       		.uleb128 0x2e
 3623 0156 01       		.byte	0x1
 3624 0157 3F       		.uleb128 0x3f
 3625 0158 19       		.uleb128 0x19
 3626 0159 03       		.uleb128 0x3
 3627 015a 0E       		.uleb128 0xe
 3628 015b 3A       		.uleb128 0x3a
 3629 015c 0B       		.uleb128 0xb
 3630 015d 3B       		.uleb128 0x3b
 3631 015e 05       		.uleb128 0x5
 3632 015f 27       		.uleb128 0x27
 3633 0160 19       		.uleb128 0x19
 3634 0161 11       		.uleb128 0x11
 3635 0162 01       		.uleb128 0x1
 3636 0163 12       		.uleb128 0x12
 3637 0164 06       		.uleb128 0x6
 3638 0165 40       		.uleb128 0x40
 3639 0166 18       		.uleb128 0x18
 3640 0167 9642     		.uleb128 0x2116
 3641 0169 19       		.uleb128 0x19
 3642 016a 01       		.uleb128 0x1
 3643 016b 13       		.uleb128 0x13
 3644 016c 00       		.byte	0
 3645 016d 00       		.byte	0
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 117


 3646 016e 18       		.uleb128 0x18
 3647 016f 2E       		.uleb128 0x2e
 3648 0170 01       		.byte	0x1
 3649 0171 03       		.uleb128 0x3
 3650 0172 0E       		.uleb128 0xe
 3651 0173 3A       		.uleb128 0x3a
 3652 0174 0B       		.uleb128 0xb
 3653 0175 3B       		.uleb128 0x3b
 3654 0176 05       		.uleb128 0x5
 3655 0177 27       		.uleb128 0x27
 3656 0178 19       		.uleb128 0x19
 3657 0179 11       		.uleb128 0x11
 3658 017a 01       		.uleb128 0x1
 3659 017b 12       		.uleb128 0x12
 3660 017c 06       		.uleb128 0x6
 3661 017d 40       		.uleb128 0x40
 3662 017e 18       		.uleb128 0x18
 3663 017f 9642     		.uleb128 0x2116
 3664 0181 19       		.uleb128 0x19
 3665 0182 01       		.uleb128 0x1
 3666 0183 13       		.uleb128 0x13
 3667 0184 00       		.byte	0
 3668 0185 00       		.byte	0
 3669 0186 19       		.uleb128 0x19
 3670 0187 34       		.uleb128 0x34
 3671 0188 00       		.byte	0
 3672 0189 03       		.uleb128 0x3
 3673 018a 08       		.uleb128 0x8
 3674 018b 3A       		.uleb128 0x3a
 3675 018c 0B       		.uleb128 0xb
 3676 018d 3B       		.uleb128 0x3b
 3677 018e 05       		.uleb128 0x5
 3678 018f 49       		.uleb128 0x49
 3679 0190 13       		.uleb128 0x13
 3680 0191 02       		.uleb128 0x2
 3681 0192 17       		.uleb128 0x17
 3682 0193 00       		.byte	0
 3683 0194 00       		.byte	0
 3684 0195 1A       		.uleb128 0x1a
 3685 0196 01       		.uleb128 0x1
 3686 0197 01       		.byte	0x1
 3687 0198 49       		.uleb128 0x49
 3688 0199 13       		.uleb128 0x13
 3689 019a 01       		.uleb128 0x1
 3690 019b 13       		.uleb128 0x13
 3691 019c 00       		.byte	0
 3692 019d 00       		.byte	0
 3693 019e 1B       		.uleb128 0x1b
 3694 019f 21       		.uleb128 0x21
 3695 01a0 00       		.byte	0
 3696 01a1 49       		.uleb128 0x49
 3697 01a2 13       		.uleb128 0x13
 3698 01a3 2F       		.uleb128 0x2f
 3699 01a4 0B       		.uleb128 0xb
 3700 01a5 00       		.byte	0
 3701 01a6 00       		.byte	0
 3702 01a7 1C       		.uleb128 0x1c
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 118


 3703 01a8 34       		.uleb128 0x34
 3704 01a9 00       		.byte	0
 3705 01aa 03       		.uleb128 0x3
 3706 01ab 0E       		.uleb128 0xe
 3707 01ac 3A       		.uleb128 0x3a
 3708 01ad 0B       		.uleb128 0xb
 3709 01ae 3B       		.uleb128 0x3b
 3710 01af 0B       		.uleb128 0xb
 3711 01b0 49       		.uleb128 0x49
 3712 01b1 13       		.uleb128 0x13
 3713 01b2 02       		.uleb128 0x2
 3714 01b3 18       		.uleb128 0x18
 3715 01b4 00       		.byte	0
 3716 01b5 00       		.byte	0
 3717 01b6 1D       		.uleb128 0x1d
 3718 01b7 34       		.uleb128 0x34
 3719 01b8 00       		.byte	0
 3720 01b9 03       		.uleb128 0x3
 3721 01ba 0E       		.uleb128 0xe
 3722 01bb 3A       		.uleb128 0x3a
 3723 01bc 0B       		.uleb128 0xb
 3724 01bd 3B       		.uleb128 0x3b
 3725 01be 0B       		.uleb128 0xb
 3726 01bf 49       		.uleb128 0x49
 3727 01c0 13       		.uleb128 0x13
 3728 01c1 3F       		.uleb128 0x3f
 3729 01c2 19       		.uleb128 0x19
 3730 01c3 02       		.uleb128 0x2
 3731 01c4 18       		.uleb128 0x18
 3732 01c5 00       		.byte	0
 3733 01c6 00       		.byte	0
 3734 01c7 1E       		.uleb128 0x1e
 3735 01c8 26       		.uleb128 0x26
 3736 01c9 00       		.byte	0
 3737 01ca 49       		.uleb128 0x49
 3738 01cb 13       		.uleb128 0x13
 3739 01cc 00       		.byte	0
 3740 01cd 00       		.byte	0
 3741 01ce 1F       		.uleb128 0x1f
 3742 01cf 2E       		.uleb128 0x2e
 3743 01d0 00       		.byte	0
 3744 01d1 3F       		.uleb128 0x3f
 3745 01d2 19       		.uleb128 0x19
 3746 01d3 3C       		.uleb128 0x3c
 3747 01d4 19       		.uleb128 0x19
 3748 01d5 6E       		.uleb128 0x6e
 3749 01d6 0E       		.uleb128 0xe
 3750 01d7 03       		.uleb128 0x3
 3751 01d8 0E       		.uleb128 0xe
 3752 01d9 3A       		.uleb128 0x3a
 3753 01da 0B       		.uleb128 0xb
 3754 01db 3B       		.uleb128 0x3b
 3755 01dc 0B       		.uleb128 0xb
 3756 01dd 00       		.byte	0
 3757 01de 00       		.byte	0
 3758 01df 00       		.byte	0
 3759              		.section	.debug_loc,"",%progbits
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 119


 3760              	.Ldebug_loc0:
 3761              	.LLST0:
 3762 0000 00000000 		.4byte	.LVL0
 3763 0004 07000000 		.4byte	.LVL1-1
 3764 0008 0100     		.2byte	0x1
 3765 000a 50       		.byte	0x50
 3766 000b 07000000 		.4byte	.LVL1-1
 3767 000f 12000000 		.4byte	.LVL3
 3768 0013 0100     		.2byte	0x1
 3769 0015 54       		.byte	0x54
 3770 0016 12000000 		.4byte	.LVL3
 3771 001a 20000000 		.4byte	.LFE2
 3772 001e 0400     		.2byte	0x4
 3773 0020 F3       		.byte	0xf3
 3774 0021 01       		.uleb128 0x1
 3775 0022 50       		.byte	0x50
 3776 0023 9F       		.byte	0x9f
 3777 0024 00000000 		.4byte	0
 3778 0028 00000000 		.4byte	0
 3779              	.LLST1:
 3780 002c 08000000 		.4byte	.LVL1
 3781 0030 19000000 		.4byte	.LVL5-1
 3782 0034 0100     		.2byte	0x1
 3783 0036 50       		.byte	0x50
 3784 0037 00000000 		.4byte	0
 3785 003b 00000000 		.4byte	0
 3786              	.LLST2:
 3787 003f 10000000 		.4byte	.LVL2
 3788 0043 14000000 		.4byte	.LVL4
 3789 0047 0100     		.2byte	0x1
 3790 0049 53       		.byte	0x53
 3791 004a 14000000 		.4byte	.LVL4
 3792 004e 1A000000 		.4byte	.LVL6
 3793 0052 0100     		.2byte	0x1
 3794 0054 54       		.byte	0x54
 3795 0055 00000000 		.4byte	0
 3796 0059 00000000 		.4byte	0
 3797              	.LLST3:
 3798 005d 06000000 		.4byte	.LVL7
 3799 0061 11000000 		.4byte	.LVL9-1
 3800 0065 0100     		.2byte	0x1
 3801 0067 50       		.byte	0x50
 3802 0068 00000000 		.4byte	0
 3803 006c 00000000 		.4byte	0
 3804              	.LLST4:
 3805 0070 0E000000 		.4byte	.LVL8
 3806 0074 14000000 		.4byte	.LVL10
 3807 0078 0100     		.2byte	0x1
 3808 007a 54       		.byte	0x54
 3809 007b 14000000 		.4byte	.LVL10
 3810 007f 1C000000 		.4byte	.LFE3
 3811 0083 0100     		.2byte	0x1
 3812 0085 50       		.byte	0x50
 3813 0086 00000000 		.4byte	0
 3814 008a 00000000 		.4byte	0
 3815              	.LLST5:
 3816 008e 00000000 		.4byte	.LVL11
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 120


 3817 0092 07000000 		.4byte	.LVL12-1
 3818 0096 0100     		.2byte	0x1
 3819 0098 50       		.byte	0x50
 3820 0099 07000000 		.4byte	.LVL12-1
 3821 009d 14000000 		.4byte	.LVL13
 3822 00a1 0100     		.2byte	0x1
 3823 00a3 54       		.byte	0x54
 3824 00a4 14000000 		.4byte	.LVL13
 3825 00a8 30000000 		.4byte	.LFE4
 3826 00ac 0400     		.2byte	0x4
 3827 00ae F3       		.byte	0xf3
 3828 00af 01       		.uleb128 0x1
 3829 00b0 50       		.byte	0x50
 3830 00b1 9F       		.byte	0x9f
 3831 00b2 00000000 		.4byte	0
 3832 00b6 00000000 		.4byte	0
 3833              	.LLST6:
 3834 00ba 08000000 		.4byte	.LVL12
 3835 00be 23000000 		.4byte	.LVL14-1
 3836 00c2 0100     		.2byte	0x1
 3837 00c4 50       		.byte	0x50
 3838 00c5 00000000 		.4byte	0
 3839 00c9 00000000 		.4byte	0
 3840              	.LLST7:
 3841 00cd 00000000 		.4byte	.LVL15
 3842 00d1 04000000 		.4byte	.LVL16
 3843 00d5 0100     		.2byte	0x1
 3844 00d7 50       		.byte	0x50
 3845 00d8 04000000 		.4byte	.LVL16
 3846 00dc 14000000 		.4byte	.LFE10
 3847 00e0 0100     		.2byte	0x1
 3848 00e2 52       		.byte	0x52
 3849 00e3 00000000 		.4byte	0
 3850 00e7 00000000 		.4byte	0
 3851              	.LLST8:
 3852 00eb 00000000 		.4byte	.LVL21
 3853 00ef 04000000 		.4byte	.LVL22
 3854 00f3 0100     		.2byte	0x1
 3855 00f5 50       		.byte	0x50
 3856 00f6 04000000 		.4byte	.LVL22
 3857 00fa 14000000 		.4byte	.LFE19
 3858 00fe 0400     		.2byte	0x4
 3859 0100 F3       		.byte	0xf3
 3860 0101 01       		.uleb128 0x1
 3861 0102 50       		.byte	0x50
 3862 0103 9F       		.byte	0x9f
 3863 0104 00000000 		.4byte	0
 3864 0108 00000000 		.4byte	0
 3865              	.LLST9:
 3866 010c 00000000 		.4byte	.LVL23
 3867 0110 08000000 		.4byte	.LVL24
 3868 0114 0100     		.2byte	0x1
 3869 0116 50       		.byte	0x50
 3870 0117 08000000 		.4byte	.LVL24
 3871 011b 18000000 		.4byte	.LFE20
 3872 011f 0400     		.2byte	0x4
 3873 0121 F3       		.byte	0xf3
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 121


 3874 0122 01       		.uleb128 0x1
 3875 0123 50       		.byte	0x50
 3876 0124 9F       		.byte	0x9f
 3877 0125 00000000 		.4byte	0
 3878 0129 00000000 		.4byte	0
 3879              	.LLST10:
 3880 012d 00000000 		.4byte	.LVL25
 3881 0131 04000000 		.4byte	.LVL26
 3882 0135 0100     		.2byte	0x1
 3883 0137 50       		.byte	0x50
 3884 0138 04000000 		.4byte	.LVL26
 3885 013c 14000000 		.4byte	.LFE21
 3886 0140 0400     		.2byte	0x4
 3887 0142 F3       		.byte	0xf3
 3888 0143 01       		.uleb128 0x1
 3889 0144 50       		.byte	0x50
 3890 0145 9F       		.byte	0x9f
 3891 0146 00000000 		.4byte	0
 3892 014a 00000000 		.4byte	0
 3893              	.LLST11:
 3894 014e 00000000 		.4byte	.LVL27
 3895 0152 04000000 		.4byte	.LVL28
 3896 0156 0100     		.2byte	0x1
 3897 0158 50       		.byte	0x50
 3898 0159 04000000 		.4byte	.LVL28
 3899 015d 14000000 		.4byte	.LFE22
 3900 0161 0400     		.2byte	0x4
 3901 0163 F3       		.byte	0xf3
 3902 0164 01       		.uleb128 0x1
 3903 0165 50       		.byte	0x50
 3904 0166 9F       		.byte	0x9f
 3905 0167 00000000 		.4byte	0
 3906 016b 00000000 		.4byte	0
 3907              	.LLST12:
 3908 016f 00000000 		.4byte	.LVL29
 3909 0173 04000000 		.4byte	.LVL30
 3910 0177 0100     		.2byte	0x1
 3911 0179 50       		.byte	0x50
 3912 017a 04000000 		.4byte	.LVL30
 3913 017e 14000000 		.4byte	.LFE23
 3914 0182 0400     		.2byte	0x4
 3915 0184 F3       		.byte	0xf3
 3916 0185 01       		.uleb128 0x1
 3917 0186 50       		.byte	0x50
 3918 0187 9F       		.byte	0x9f
 3919 0188 00000000 		.4byte	0
 3920 018c 00000000 		.4byte	0
 3921              	.LLST13:
 3922 0190 00000000 		.4byte	.LVL32
 3923 0194 0C000000 		.4byte	.LVL34
 3924 0198 0100     		.2byte	0x1
 3925 019a 50       		.byte	0x50
 3926 019b 0C000000 		.4byte	.LVL34
 3927 019f 20000000 		.4byte	.LFE13
 3928 01a3 0400     		.2byte	0x4
 3929 01a5 F3       		.byte	0xf3
 3930 01a6 01       		.uleb128 0x1
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 122


 3931 01a7 50       		.byte	0x50
 3932 01a8 9F       		.byte	0x9f
 3933 01a9 00000000 		.4byte	0
 3934 01ad 00000000 		.4byte	0
 3935              	.LLST14:
 3936 01b1 00000000 		.4byte	.LVL32
 3937 01b5 0F000000 		.4byte	.LVL35-1
 3938 01b9 0100     		.2byte	0x1
 3939 01bb 51       		.byte	0x51
 3940 01bc 0F000000 		.4byte	.LVL35-1
 3941 01c0 1E000000 		.4byte	.LVL37
 3942 01c4 0100     		.2byte	0x1
 3943 01c6 55       		.byte	0x55
 3944 01c7 1E000000 		.4byte	.LVL37
 3945 01cb 20000000 		.4byte	.LFE13
 3946 01cf 0400     		.2byte	0x4
 3947 01d1 F3       		.byte	0xf3
 3948 01d2 01       		.uleb128 0x1
 3949 01d3 51       		.byte	0x51
 3950 01d4 9F       		.byte	0x9f
 3951 01d5 00000000 		.4byte	0
 3952 01d9 00000000 		.4byte	0
 3953              	.LLST15:
 3954 01dd 00000000 		.4byte	.LVL38
 3955 01e1 0A000000 		.4byte	.LVL40
 3956 01e5 0100     		.2byte	0x1
 3957 01e7 50       		.byte	0x50
 3958 01e8 0A000000 		.4byte	.LVL40
 3959 01ec 1C000000 		.4byte	.LFE14
 3960 01f0 0400     		.2byte	0x4
 3961 01f2 F3       		.byte	0xf3
 3962 01f3 01       		.uleb128 0x1
 3963 01f4 50       		.byte	0x50
 3964 01f5 9F       		.byte	0x9f
 3965 01f6 00000000 		.4byte	0
 3966 01fa 00000000 		.4byte	0
 3967              	.LLST16:
 3968 01fe 00000000 		.4byte	.LVL42
 3969 0202 0C000000 		.4byte	.LVL44
 3970 0206 0100     		.2byte	0x1
 3971 0208 50       		.byte	0x50
 3972 0209 0C000000 		.4byte	.LVL44
 3973 020d 22000000 		.4byte	.LFE15
 3974 0211 0400     		.2byte	0x4
 3975 0213 F3       		.byte	0xf3
 3976 0214 01       		.uleb128 0x1
 3977 0215 50       		.byte	0x50
 3978 0216 9F       		.byte	0x9f
 3979 0217 00000000 		.4byte	0
 3980 021b 00000000 		.4byte	0
 3981              	.LLST17:
 3982 021f 00000000 		.4byte	.LVL42
 3983 0223 0F000000 		.4byte	.LVL45-1
 3984 0227 0100     		.2byte	0x1
 3985 0229 51       		.byte	0x51
 3986 022a 0F000000 		.4byte	.LVL45-1
 3987 022e 20000000 		.4byte	.LVL47
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 123


 3988 0232 0100     		.2byte	0x1
 3989 0234 55       		.byte	0x55
 3990 0235 20000000 		.4byte	.LVL47
 3991 0239 22000000 		.4byte	.LFE15
 3992 023d 0400     		.2byte	0x4
 3993 023f F3       		.byte	0xf3
 3994 0240 01       		.uleb128 0x1
 3995 0241 51       		.byte	0x51
 3996 0242 9F       		.byte	0x9f
 3997 0243 00000000 		.4byte	0
 3998 0247 00000000 		.4byte	0
 3999              	.LLST18:
 4000 024b 00000000 		.4byte	.LVL48
 4001 024f 0A000000 		.4byte	.LVL50
 4002 0253 0100     		.2byte	0x1
 4003 0255 50       		.byte	0x50
 4004 0256 0A000000 		.4byte	.LVL50
 4005 025a 1E000000 		.4byte	.LFE16
 4006 025e 0400     		.2byte	0x4
 4007 0260 F3       		.byte	0xf3
 4008 0261 01       		.uleb128 0x1
 4009 0262 50       		.byte	0x50
 4010 0263 9F       		.byte	0x9f
 4011 0264 00000000 		.4byte	0
 4012 0268 00000000 		.4byte	0
 4013              	.LLST19:
 4014 026c 00000000 		.4byte	.LVL52
 4015 0270 0C000000 		.4byte	.LVL53
 4016 0274 0100     		.2byte	0x1
 4017 0276 50       		.byte	0x50
 4018 0277 0C000000 		.4byte	.LVL53
 4019 027b 4C000000 		.4byte	.LFE17
 4020 027f 0400     		.2byte	0x4
 4021 0281 F3       		.byte	0xf3
 4022 0282 01       		.uleb128 0x1
 4023 0283 50       		.byte	0x50
 4024 0284 9F       		.byte	0x9f
 4025 0285 00000000 		.4byte	0
 4026 0289 00000000 		.4byte	0
 4027              	.LLST20:
 4028 028d 00000000 		.4byte	.LVL52
 4029 0291 0F000000 		.4byte	.LVL54-1
 4030 0295 0100     		.2byte	0x1
 4031 0297 51       		.byte	0x51
 4032 0298 0F000000 		.4byte	.LVL54-1
 4033 029c 4C000000 		.4byte	.LFE17
 4034 02a0 0400     		.2byte	0x4
 4035 02a2 F3       		.byte	0xf3
 4036 02a3 01       		.uleb128 0x1
 4037 02a4 51       		.byte	0x51
 4038 02a5 9F       		.byte	0x9f
 4039 02a6 00000000 		.4byte	0
 4040 02aa 00000000 		.4byte	0
 4041              	.LLST21:
 4042 02ae 26000000 		.4byte	.LVL57
 4043 02b2 45000000 		.4byte	.LVL63-1
 4044 02b6 0100     		.2byte	0x1
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 124


 4045 02b8 50       		.byte	0x50
 4046 02b9 00000000 		.4byte	0
 4047 02bd 00000000 		.4byte	0
 4048              	.LLST22:
 4049 02c1 22000000 		.4byte	.LVL56
 4050 02c5 46000000 		.4byte	.LVL64
 4051 02c9 0100     		.2byte	0x1
 4052 02cb 55       		.byte	0x55
 4053 02cc 00000000 		.4byte	0
 4054 02d0 00000000 		.4byte	0
 4055              	.LLST23:
 4056 02d4 32000000 		.4byte	.LVL58
 4057 02d8 38000000 		.4byte	.LVL59
 4058 02dc 0100     		.2byte	0x1
 4059 02de 51       		.byte	0x51
 4060 02df 3A000000 		.4byte	.LVL60
 4061 02e3 3C000000 		.4byte	.LVL61
 4062 02e7 0100     		.2byte	0x1
 4063 02e9 51       		.byte	0x51
 4064 02ea 3C000000 		.4byte	.LVL61
 4065 02ee 40000000 		.4byte	.LVL62
 4066 02f2 0100     		.2byte	0x1
 4067 02f4 53       		.byte	0x53
 4068 02f5 40000000 		.4byte	.LVL62
 4069 02f9 45000000 		.4byte	.LVL63-1
 4070 02fd 0100     		.2byte	0x1
 4071 02ff 51       		.byte	0x51
 4072 0300 00000000 		.4byte	0
 4073 0304 00000000 		.4byte	0
 4074              	.LLST24:
 4075 0308 00000000 		.4byte	.LVL65
 4076 030c 0A000000 		.4byte	.LVL66
 4077 0310 0100     		.2byte	0x1
 4078 0312 50       		.byte	0x50
 4079 0313 0A000000 		.4byte	.LVL66
 4080 0317 2C000000 		.4byte	.LFE18
 4081 031b 0400     		.2byte	0x4
 4082 031d F3       		.byte	0xf3
 4083 031e 01       		.uleb128 0x1
 4084 031f 50       		.byte	0x50
 4085 0320 9F       		.byte	0x9f
 4086 0321 00000000 		.4byte	0
 4087 0325 00000000 		.4byte	0
 4088              	.LLST25:
 4089 0329 24000000 		.4byte	.LVL68
 4090 032d 26000000 		.4byte	.LVL69
 4091 0331 0100     		.2byte	0x1
 4092 0333 50       		.byte	0x50
 4093 0334 00000000 		.4byte	0
 4094 0338 00000000 		.4byte	0
 4095              	.LLST26:
 4096 033c 00000000 		.4byte	.LVL70
 4097 0340 06000000 		.4byte	.LVL71
 4098 0344 0100     		.2byte	0x1
 4099 0346 50       		.byte	0x50
 4100 0347 06000000 		.4byte	.LVL71
 4101 034b 26000000 		.4byte	.LVL75
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 125


 4102 034f 0100     		.2byte	0x1
 4103 0351 54       		.byte	0x54
 4104 0352 00000000 		.4byte	0
 4105 0356 00000000 		.4byte	0
 4106              	.LLST27:
 4107 035a 00000000 		.4byte	.LVL76
 4108 035e 08000000 		.4byte	.LVL77
 4109 0362 0100     		.2byte	0x1
 4110 0364 50       		.byte	0x50
 4111 0365 08000000 		.4byte	.LVL77
 4112 0369 14000000 		.4byte	.LFE27
 4113 036d 0400     		.2byte	0x4
 4114 036f F3       		.byte	0xf3
 4115 0370 01       		.uleb128 0x1
 4116 0371 50       		.byte	0x50
 4117 0372 9F       		.byte	0x9f
 4118 0373 00000000 		.4byte	0
 4119 0377 00000000 		.4byte	0
 4120              	.LLST28:
 4121 037b 00000000 		.4byte	.LVL79
 4122 037f 0F000000 		.4byte	.LVL80-1
 4123 0383 0100     		.2byte	0x1
 4124 0385 50       		.byte	0x50
 4125 0386 0F000000 		.4byte	.LVL80-1
 4126 038a D4000000 		.4byte	.LVL102
 4127 038e 0100     		.2byte	0x1
 4128 0390 54       		.byte	0x54
 4129 0391 D4000000 		.4byte	.LVL102
 4130 0395 02010000 		.4byte	.LVL109
 4131 0399 0700     		.2byte	0x7
 4132 039b 74       		.byte	0x74
 4133 039c B39C8080 		.sleb128 -268431821
 4133      7F
 4134 03a1 9F       		.byte	0x9f
 4135 03a2 02010000 		.4byte	.LVL109
 4136 03a6 08010000 		.4byte	.LVL110
 4137 03aa 0100     		.2byte	0x1
 4138 03ac 54       		.byte	0x54
 4139 03ad 08010000 		.4byte	.LVL110
 4140 03b1 10010000 		.4byte	.LVL112
 4141 03b5 0300     		.2byte	0x3
 4142 03b7 77       		.byte	0x77
 4143 03b8 03       		.sleb128 3
 4144 03b9 9F       		.byte	0x9f
 4145 03ba 10010000 		.4byte	.LVL112
 4146 03be 64010000 		.4byte	.LFE5
 4147 03c2 0400     		.2byte	0x4
 4148 03c4 F3       		.byte	0xf3
 4149 03c5 01       		.uleb128 0x1
 4150 03c6 50       		.byte	0x50
 4151 03c7 9F       		.byte	0x9f
 4152 03c8 00000000 		.4byte	0
 4153 03cc 00000000 		.4byte	0
 4154              	.LLST29:
 4155 03d0 2A000000 		.4byte	.LVL82
 4156 03d4 34000000 		.4byte	.LVL84
 4157 03d8 0100     		.2byte	0x1
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 126


 4158 03da 5A       		.byte	0x5a
 4159 03db 46000000 		.4byte	.LVL85
 4160 03df 50000000 		.4byte	.LVL87
 4161 03e3 0100     		.2byte	0x1
 4162 03e5 5A       		.byte	0x5a
 4163 03e6 62000000 		.4byte	.LVL88
 4164 03ea 6C000000 		.4byte	.LVL90
 4165 03ee 0100     		.2byte	0x1
 4166 03f0 5A       		.byte	0x5a
 4167 03f1 7E000000 		.4byte	.LVL91
 4168 03f5 88000000 		.4byte	.LVL93
 4169 03f9 0100     		.2byte	0x1
 4170 03fb 5A       		.byte	0x5a
 4171 03fc 90000000 		.4byte	.LVL94
 4172 0400 02010000 		.4byte	.LVL109
 4173 0404 0100     		.2byte	0x1
 4174 0406 5A       		.byte	0x5a
 4175 0407 00000000 		.4byte	0
 4176 040b 00000000 		.4byte	0
 4177              	.LLST30:
 4178 040f 32000000 		.4byte	.LVL83
 4179 0413 34000000 		.4byte	.LVL84
 4180 0417 0100     		.2byte	0x1
 4181 0419 59       		.byte	0x59
 4182 041a 4E000000 		.4byte	.LVL86
 4183 041e 50000000 		.4byte	.LVL87
 4184 0422 0100     		.2byte	0x1
 4185 0424 59       		.byte	0x59
 4186 0425 6A000000 		.4byte	.LVL89
 4187 0429 6C000000 		.4byte	.LVL90
 4188 042d 0100     		.2byte	0x1
 4189 042f 59       		.byte	0x59
 4190 0430 86000000 		.4byte	.LVL92
 4191 0434 88000000 		.4byte	.LVL93
 4192 0438 0100     		.2byte	0x1
 4193 043a 59       		.byte	0x59
 4194 043b 98000000 		.4byte	.LVL95
 4195 043f 02010000 		.4byte	.LVL109
 4196 0443 0100     		.2byte	0x1
 4197 0445 59       		.byte	0x59
 4198 0446 00000000 		.4byte	0
 4199 044a 00000000 		.4byte	0
 4200              	.LLST31:
 4201 044e 9C000000 		.4byte	.LVL96
 4202 0452 02010000 		.4byte	.LVL109
 4203 0456 0100     		.2byte	0x1
 4204 0458 56       		.byte	0x56
 4205 0459 00000000 		.4byte	0
 4206 045d 00000000 		.4byte	0
 4207              	.LLST32:
 4208 0461 B0000000 		.4byte	.LVL98
 4209 0465 B4000000 		.4byte	.LVL99
 4210 0469 0200     		.2byte	0x2
 4211 046b 49       		.byte	0x49
 4212 046c 9F       		.byte	0x9f
 4213 046d BC000000 		.4byte	.LVL100
 4214 0471 02010000 		.4byte	.LVL109
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 127


 4215 0475 0100     		.2byte	0x1
 4216 0477 55       		.byte	0x55
 4217 0478 00000000 		.4byte	0
 4218 047c 00000000 		.4byte	0
 4219              	.LLST33:
 4220 0480 D8000000 		.4byte	.LVL103
 4221 0484 DE000000 		.4byte	.LVL104
 4222 0488 0100     		.2byte	0x1
 4223 048a 53       		.byte	0x53
 4224 048b DE000000 		.4byte	.LVL104
 4225 048f E0000000 		.4byte	.LVL105
 4226 0493 0400     		.2byte	0x4
 4227 0495 72       		.byte	0x72
 4228 0496 00       		.sleb128 0
 4229 0497 06       		.byte	0x6
 4230 0498 9F       		.byte	0x9f
 4231 0499 E0000000 		.4byte	.LVL105
 4232 049d E2000000 		.4byte	.LVL106
 4233 04a1 0700     		.2byte	0x7
 4234 04a3 0C       		.byte	0xc
 4235 04a4 28FF0B40 		.4byte	0x400bff28
 4236 04a8 06       		.byte	0x6
 4237 04a9 9F       		.byte	0x9f
 4238 04aa 00000000 		.4byte	0
 4239 04ae 00000000 		.4byte	0
 4240              	.LLST34:
 4241 04b2 12000000 		.4byte	.LVL81
 4242 04b6 AA000000 		.4byte	.LVL97
 4243 04ba 0200     		.2byte	0x2
 4244 04bc 91       		.byte	0x91
 4245 04bd 5C       		.sleb128 -36
 4246 04be B4000000 		.4byte	.LVL99
 4247 04c2 BC000000 		.4byte	.LVL100
 4248 04c6 0200     		.2byte	0x2
 4249 04c8 91       		.byte	0x91
 4250 04c9 5C       		.sleb128 -36
 4251 04ca 02010000 		.4byte	.LVL109
 4252 04ce 08010000 		.4byte	.LVL110
 4253 04d2 0200     		.2byte	0x2
 4254 04d4 91       		.byte	0x91
 4255 04d5 5C       		.sleb128 -36
 4256 04d6 00000000 		.4byte	0
 4257 04da 00000000 		.4byte	0
 4258              	.LLST35:
 4259 04de 00000000 		.4byte	.LVL113
 4260 04e2 14000000 		.4byte	.LVL114
 4261 04e6 0100     		.2byte	0x1
 4262 04e8 50       		.byte	0x50
 4263 04e9 14000000 		.4byte	.LVL114
 4264 04ed 18000000 		.4byte	.LVL115
 4265 04f1 0100     		.2byte	0x1
 4266 04f3 53       		.byte	0x53
 4267 04f4 18000000 		.4byte	.LVL115
 4268 04f8 44000000 		.4byte	.LFE6
 4269 04fc 0400     		.2byte	0x4
 4270 04fe F3       		.byte	0xf3
 4271 04ff 01       		.uleb128 0x1
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 128


 4272 0500 50       		.byte	0x50
 4273 0501 9F       		.byte	0x9f
 4274 0502 00000000 		.4byte	0
 4275 0506 00000000 		.4byte	0
 4276              	.LLST36:
 4277 050a 00000000 		.4byte	.LVL118
 4278 050e 1A000000 		.4byte	.LVL119
 4279 0512 0100     		.2byte	0x1
 4280 0514 50       		.byte	0x50
 4281 0515 1A000000 		.4byte	.LVL119
 4282 0519 4C000000 		.4byte	.LFE28
 4283 051d 0400     		.2byte	0x4
 4284 051f F3       		.byte	0xf3
 4285 0520 01       		.uleb128 0x1
 4286 0521 50       		.byte	0x50
 4287 0522 9F       		.byte	0x9f
 4288 0523 00000000 		.4byte	0
 4289 0527 00000000 		.4byte	0
 4290              	.LLST37:
 4291 052b 00000000 		.4byte	.LVL123
 4292 052f 02000000 		.4byte	.LVL124
 4293 0533 0100     		.2byte	0x1
 4294 0535 50       		.byte	0x50
 4295 0536 02000000 		.4byte	.LVL124
 4296 053a 10000000 		.4byte	.LFE35
 4297 053e 0400     		.2byte	0x4
 4298 0540 F3       		.byte	0xf3
 4299 0541 01       		.uleb128 0x1
 4300 0542 50       		.byte	0x50
 4301 0543 9F       		.byte	0x9f
 4302 0544 00000000 		.4byte	0
 4303 0548 00000000 		.4byte	0
 4304              	.LLST38:
 4305 054c 0C000000 		.4byte	.LVL126
 4306 0550 1C000000 		.4byte	.LVL129
 4307 0554 0100     		.2byte	0x1
 4308 0556 54       		.byte	0x54
 4309 0557 1E000000 		.4byte	.LVL130
 4310 055b 22000000 		.4byte	.LVL131
 4311 055f 0100     		.2byte	0x1
 4312 0561 54       		.byte	0x54
 4313 0562 00000000 		.4byte	0
 4314 0566 00000000 		.4byte	0
 4315              	.LLST39:
 4316 056a 02000000 		.4byte	.LVL132
 4317 056e 06000000 		.4byte	.LVL133
 4318 0572 0200     		.2byte	0x2
 4319 0574 30       		.byte	0x30
 4320 0575 9F       		.byte	0x9f
 4321 0576 06000000 		.4byte	.LVL133
 4322 057a 1B000000 		.4byte	.LVL135-1
 4323 057e 0100     		.2byte	0x1
 4324 0580 53       		.byte	0x53
 4325 0581 00000000 		.4byte	0
 4326 0585 00000000 		.4byte	0
 4327              	.LLST40:
 4328 0589 00000000 		.4byte	.LVL142
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 129


 4329 058d 06000000 		.4byte	.LVL143
 4330 0591 0100     		.2byte	0x1
 4331 0593 50       		.byte	0x50
 4332 0594 06000000 		.4byte	.LVL143
 4333 0598 10000000 		.4byte	.LFE40
 4334 059c 0400     		.2byte	0x4
 4335 059e F3       		.byte	0xf3
 4336 059f 01       		.uleb128 0x1
 4337 05a0 50       		.byte	0x50
 4338 05a1 9F       		.byte	0x9f
 4339 05a2 00000000 		.4byte	0
 4340 05a6 00000000 		.4byte	0
 4341              	.LLST41:
 4342 05aa 00000000 		.4byte	.LVL144
 4343 05ae 02000000 		.4byte	.LVL145
 4344 05b2 0100     		.2byte	0x1
 4345 05b4 50       		.byte	0x50
 4346 05b5 02000000 		.4byte	.LVL145
 4347 05b9 0C000000 		.4byte	.LFE41
 4348 05bd 0400     		.2byte	0x4
 4349 05bf F3       		.byte	0xf3
 4350 05c0 01       		.uleb128 0x1
 4351 05c1 50       		.byte	0x50
 4352 05c2 9F       		.byte	0x9f
 4353 05c3 00000000 		.4byte	0
 4354 05c7 00000000 		.4byte	0
 4355              		.section	.debug_aranges,"",%progbits
 4356 0000 74010000 		.4byte	0x174
 4357 0004 0200     		.2byte	0x2
 4358 0006 00000000 		.4byte	.Ldebug_info0
 4359 000a 04       		.byte	0x4
 4360 000b 00       		.byte	0
 4361 000c 0000     		.2byte	0
 4362 000e 0000     		.2byte	0
 4363 0010 00000000 		.4byte	.LFB0
 4364 0014 14000000 		.4byte	.LFE0-.LFB0
 4365 0018 00000000 		.4byte	.LFB1
 4366 001c 10000000 		.4byte	.LFE1-.LFB1
 4367 0020 00000000 		.4byte	.LFB2
 4368 0024 20000000 		.4byte	.LFE2-.LFB2
 4369 0028 00000000 		.4byte	.LFB3
 4370 002c 1C000000 		.4byte	.LFE3-.LFB3
 4371 0030 00000000 		.4byte	.LFB4
 4372 0034 30000000 		.4byte	.LFE4-.LFB4
 4373 0038 00000000 		.4byte	.LFB7
 4374 003c 20000000 		.4byte	.LFE7-.LFB7
 4375 0040 00000000 		.4byte	.LFB8
 4376 0044 10000000 		.4byte	.LFE8-.LFB8
 4377 0048 00000000 		.4byte	.LFB9
 4378 004c 0C000000 		.4byte	.LFE9-.LFB9
 4379 0050 00000000 		.4byte	.LFB10
 4380 0054 14000000 		.4byte	.LFE10-.LFB10
 4381 0058 00000000 		.4byte	.LFB11
 4382 005c 10000000 		.4byte	.LFE11-.LFB11
 4383 0060 00000000 		.4byte	.LFB12
 4384 0064 0C000000 		.4byte	.LFE12-.LFB12
 4385 0068 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 130


 4386 006c 14000000 		.4byte	.LFE19-.LFB19
 4387 0070 00000000 		.4byte	.LFB20
 4388 0074 18000000 		.4byte	.LFE20-.LFB20
 4389 0078 00000000 		.4byte	.LFB21
 4390 007c 14000000 		.4byte	.LFE21-.LFB21
 4391 0080 00000000 		.4byte	.LFB22
 4392 0084 14000000 		.4byte	.LFE22-.LFB22
 4393 0088 00000000 		.4byte	.LFB23
 4394 008c 14000000 		.4byte	.LFE23-.LFB23
 4395 0090 00000000 		.4byte	.LFB24
 4396 0094 04000000 		.4byte	.LFE24-.LFB24
 4397 0098 00000000 		.4byte	.LFB13
 4398 009c 20000000 		.4byte	.LFE13-.LFB13
 4399 00a0 00000000 		.4byte	.LFB14
 4400 00a4 1C000000 		.4byte	.LFE14-.LFB14
 4401 00a8 00000000 		.4byte	.LFB15
 4402 00ac 22000000 		.4byte	.LFE15-.LFB15
 4403 00b0 00000000 		.4byte	.LFB16
 4404 00b4 1E000000 		.4byte	.LFE16-.LFB16
 4405 00b8 00000000 		.4byte	.LFB17
 4406 00bc 4C000000 		.4byte	.LFE17-.LFB17
 4407 00c0 00000000 		.4byte	.LFB18
 4408 00c4 2C000000 		.4byte	.LFE18-.LFB18
 4409 00c8 00000000 		.4byte	.LFB25
 4410 00cc 18000000 		.4byte	.LFE25-.LFB25
 4411 00d0 00000000 		.4byte	.LFB26
 4412 00d4 30000000 		.4byte	.LFE26-.LFB26
 4413 00d8 00000000 		.4byte	.LFB27
 4414 00dc 14000000 		.4byte	.LFE27-.LFB27
 4415 00e0 00000000 		.4byte	.LFB5
 4416 00e4 64010000 		.4byte	.LFE5-.LFB5
 4417 00e8 00000000 		.4byte	.LFB6
 4418 00ec 44000000 		.4byte	.LFE6-.LFB6
 4419 00f0 00000000 		.4byte	.LFB28
 4420 00f4 4C000000 		.4byte	.LFE28-.LFB28
 4421 00f8 00000000 		.4byte	.LFB32
 4422 00fc 10000000 		.4byte	.LFE32-.LFB32
 4423 0100 00000000 		.4byte	.LFB33
 4424 0104 10000000 		.4byte	.LFE33-.LFB33
 4425 0108 00000000 		.4byte	.LFB31
 4426 010c 18000000 		.4byte	.LFE31-.LFB31
 4427 0110 00000000 		.4byte	.LFB34
 4428 0114 10000000 		.4byte	.LFE34-.LFB34
 4429 0118 00000000 		.4byte	.LFB35
 4430 011c 10000000 		.4byte	.LFE35-.LFB35
 4431 0120 00000000 		.4byte	.LFB36
 4432 0124 10000000 		.4byte	.LFE36-.LFB36
 4433 0128 00000000 		.4byte	.LFB37
 4434 012c 10000000 		.4byte	.LFE37-.LFB37
 4435 0130 00000000 		.4byte	.LFB38
 4436 0134 10000000 		.4byte	.LFE38-.LFB38
 4437 0138 00000000 		.4byte	.LFB42
 4438 013c 28000000 		.4byte	.LFE42-.LFB42
 4439 0140 00000000 		.4byte	.LFB39
 4440 0144 0C000000 		.4byte	.LFE39-.LFB39
 4441 0148 00000000 		.4byte	.LFB30
 4442 014c 44000000 		.4byte	.LFE30-.LFB30
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 131


 4443 0150 00000000 		.4byte	.LFB29
 4444 0154 20000000 		.4byte	.LFE29-.LFB29
 4445 0158 00000000 		.4byte	.LFB40
 4446 015c 10000000 		.4byte	.LFE40-.LFB40
 4447 0160 00000000 		.4byte	.LFB41
 4448 0164 0C000000 		.4byte	.LFE41-.LFB41
 4449 0168 00000000 		.4byte	.LFB43
 4450 016c 70000000 		.4byte	.LFE43-.LFB43
 4451 0170 00000000 		.4byte	0
 4452 0174 00000000 		.4byte	0
 4453              		.section	.debug_ranges,"",%progbits
 4454              	.Ldebug_ranges0:
 4455 0000 00000000 		.4byte	.LFB0
 4456 0004 14000000 		.4byte	.LFE0
 4457 0008 00000000 		.4byte	.LFB1
 4458 000c 10000000 		.4byte	.LFE1
 4459 0010 00000000 		.4byte	.LFB2
 4460 0014 20000000 		.4byte	.LFE2
 4461 0018 00000000 		.4byte	.LFB3
 4462 001c 1C000000 		.4byte	.LFE3
 4463 0020 00000000 		.4byte	.LFB4
 4464 0024 30000000 		.4byte	.LFE4
 4465 0028 00000000 		.4byte	.LFB7
 4466 002c 20000000 		.4byte	.LFE7
 4467 0030 00000000 		.4byte	.LFB8
 4468 0034 10000000 		.4byte	.LFE8
 4469 0038 00000000 		.4byte	.LFB9
 4470 003c 0C000000 		.4byte	.LFE9
 4471 0040 00000000 		.4byte	.LFB10
 4472 0044 14000000 		.4byte	.LFE10
 4473 0048 00000000 		.4byte	.LFB11
 4474 004c 10000000 		.4byte	.LFE11
 4475 0050 00000000 		.4byte	.LFB12
 4476 0054 0C000000 		.4byte	.LFE12
 4477 0058 00000000 		.4byte	.LFB19
 4478 005c 14000000 		.4byte	.LFE19
 4479 0060 00000000 		.4byte	.LFB20
 4480 0064 18000000 		.4byte	.LFE20
 4481 0068 00000000 		.4byte	.LFB21
 4482 006c 14000000 		.4byte	.LFE21
 4483 0070 00000000 		.4byte	.LFB22
 4484 0074 14000000 		.4byte	.LFE22
 4485 0078 00000000 		.4byte	.LFB23
 4486 007c 14000000 		.4byte	.LFE23
 4487 0080 00000000 		.4byte	.LFB24
 4488 0084 04000000 		.4byte	.LFE24
 4489 0088 00000000 		.4byte	.LFB13
 4490 008c 20000000 		.4byte	.LFE13
 4491 0090 00000000 		.4byte	.LFB14
 4492 0094 1C000000 		.4byte	.LFE14
 4493 0098 00000000 		.4byte	.LFB15
 4494 009c 22000000 		.4byte	.LFE15
 4495 00a0 00000000 		.4byte	.LFB16
 4496 00a4 1E000000 		.4byte	.LFE16
 4497 00a8 00000000 		.4byte	.LFB17
 4498 00ac 4C000000 		.4byte	.LFE17
 4499 00b0 00000000 		.4byte	.LFB18
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 132


 4500 00b4 2C000000 		.4byte	.LFE18
 4501 00b8 00000000 		.4byte	.LFB25
 4502 00bc 18000000 		.4byte	.LFE25
 4503 00c0 00000000 		.4byte	.LFB26
 4504 00c4 30000000 		.4byte	.LFE26
 4505 00c8 00000000 		.4byte	.LFB27
 4506 00cc 14000000 		.4byte	.LFE27
 4507 00d0 00000000 		.4byte	.LFB5
 4508 00d4 64010000 		.4byte	.LFE5
 4509 00d8 00000000 		.4byte	.LFB6
 4510 00dc 44000000 		.4byte	.LFE6
 4511 00e0 00000000 		.4byte	.LFB28
 4512 00e4 4C000000 		.4byte	.LFE28
 4513 00e8 00000000 		.4byte	.LFB32
 4514 00ec 10000000 		.4byte	.LFE32
 4515 00f0 00000000 		.4byte	.LFB33
 4516 00f4 10000000 		.4byte	.LFE33
 4517 00f8 00000000 		.4byte	.LFB31
 4518 00fc 18000000 		.4byte	.LFE31
 4519 0100 00000000 		.4byte	.LFB34
 4520 0104 10000000 		.4byte	.LFE34
 4521 0108 00000000 		.4byte	.LFB35
 4522 010c 10000000 		.4byte	.LFE35
 4523 0110 00000000 		.4byte	.LFB36
 4524 0114 10000000 		.4byte	.LFE36
 4525 0118 00000000 		.4byte	.LFB37
 4526 011c 10000000 		.4byte	.LFE37
 4527 0120 00000000 		.4byte	.LFB38
 4528 0124 10000000 		.4byte	.LFE38
 4529 0128 00000000 		.4byte	.LFB42
 4530 012c 28000000 		.4byte	.LFE42
 4531 0130 00000000 		.4byte	.LFB39
 4532 0134 0C000000 		.4byte	.LFE39
 4533 0138 00000000 		.4byte	.LFB30
 4534 013c 44000000 		.4byte	.LFE30
 4535 0140 00000000 		.4byte	.LFB29
 4536 0144 20000000 		.4byte	.LFE29
 4537 0148 00000000 		.4byte	.LFB40
 4538 014c 10000000 		.4byte	.LFE40
 4539 0150 00000000 		.4byte	.LFB41
 4540 0154 0C000000 		.4byte	.LFE41
 4541 0158 00000000 		.4byte	.LFB43
 4542 015c 70000000 		.4byte	.LFE43
 4543 0160 00000000 		.4byte	0
 4544 0164 00000000 		.4byte	0
 4545              		.section	.debug_line,"",%progbits
 4546              	.Ldebug_line0:
 4547 0000 45040000 		.section	.debug_str,"MS",%progbits,1
 4547      02004D00 
 4547      00000201 
 4547      FB0E0D00 
 4547      01010101 
 4548              	.LASF50:
 4549 0000 72616D56 		.ascii	"ramVectorTable\000"
 4549      6563746F 
 4549      72546162 
 4549      6C6500
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 133


 4550              	.LASF66:
 4551 000f 62675472 		.ascii	"bgTrim4\000"
 4551      696D3400 
 4552              	.LASF10:
 4553 0017 75696E74 		.ascii	"uint16\000"
 4553      313600
 4554              	.LASF37:
 4555 001e 696E7453 		.ascii	"intState\000"
 4555      74617465 
 4555      00
 4556              	.LASF57:
 4557 0027 76616C75 		.ascii	"value\000"
 4557      6500
 4558              	.LASF26:
 4559 002d 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4559      73436C6B 
 4559      57726974 
 4559      65486663 
 4559      6C6B4469 
 4560              	.LASF49:
 4561 0046 6F6C6449 		.ascii	"oldIsr\000"
 4561      737200
 4562              	.LASF88:
 4563 004d 72657456 		.ascii	"retVal\000"
 4563      616C00
 4564              	.LASF36:
 4565 0054 43794469 		.ascii	"CyDisableInts\000"
 4565      7361626C 
 4565      65496E74 
 4565      7300
 4566              	.LASF69:
 4567 0062 63757272 		.ascii	"currentImoTrim2Value\000"
 4567      656E7449 
 4567      6D6F5472 
 4567      696D3256 
 4567      616C7565 
 4568              	.LASF102:
 4569 0077 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4569      43313120 
 4569      352E342E 
 4569      31203230 
 4569      31363036 
 4570 00aa 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4570      20726576 
 4570      6973696F 
 4570      6E203233 
 4570      37373135 
 4571 00dd 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4571      66756E63 
 4571      74696F6E 
 4571      2D736563 
 4571      74696F6E 
 4572              	.LASF7:
 4573 0105 6C6F6E67 		.ascii	"long long unsigned int\000"
 4573      206C6F6E 
 4573      6720756E 
 4573      7369676E 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 134


 4573      65642069 
 4574              	.LASF97:
 4575 011c 43795379 		.ascii	"CySysTickInitVar\000"
 4575      73546963 
 4575      6B496E69 
 4575      74566172 
 4575      00
 4576              	.LASF38:
 4577 012d 4379456E 		.ascii	"CyEnableInts\000"
 4577      61626C65 
 4577      496E7473 
 4577      00
 4578              	.LASF59:
 4579 013a 4379536F 		.ascii	"CySoftwareReset\000"
 4579      66747761 
 4579      72655265 
 4579      73657400 
 4580              	.LASF75:
 4581 014a 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4581      73546963 
 4581      6B456E61 
 4581      626C6549 
 4581      6E746572 
 4582              	.LASF42:
 4583 0163 4379496E 		.ascii	"CyIntGetState\000"
 4583      74476574 
 4583      53746174 
 4583      6500
 4584              	.LASF6:
 4585 0171 6C6F6E67 		.ascii	"long long int\000"
 4585      206C6F6E 
 4585      6720696E 
 4585      7400
 4586              	.LASF0:
 4587 017f 7369676E 		.ascii	"signed char\000"
 4587      65642063 
 4587      68617200 
 4588              	.LASF65:
 4589 018b 66726571 		.ascii	"freq\000"
 4589      00
 4590              	.LASF73:
 4591 0190 43794465 		.ascii	"CyDelayFreq\000"
 4591      6C617946 
 4591      72657100 
 4592              	.LASF23:
 4593 019c 696E7465 		.ascii	"interruptState\000"
 4593      72727570 
 4593      74537461 
 4593      746500
 4594              	.LASF80:
 4595 01ab 43795379 		.ascii	"CySysTickGetReload\000"
 4595      73546963 
 4595      6B476574 
 4595      52656C6F 
 4595      616400
 4596              	.LASF4:
 4597 01be 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 135


 4597      20696E74 
 4597      00
 4598              	.LASF43:
 4599 01c7 4379496E 		.ascii	"CyIntDisable\000"
 4599      74446973 
 4599      61626C65 
 4599      00
 4600              	.LASF89:
 4601 01d4 43795379 		.ascii	"CySysTickGetCallback\000"
 4601      73546963 
 4601      6B476574 
 4601      43616C6C 
 4601      6261636B 
 4602              	.LASF9:
 4603 01e9 75696E74 		.ascii	"uint8\000"
 4603      3800
 4604              	.LASF94:
 4605 01ef 63796465 		.ascii	"cydelayFreqKhz\000"
 4605      6C617946 
 4605      7265714B 
 4605      687A00
 4606              	.LASF62:
 4607 01fe 43794465 		.ascii	"CyDelayUs\000"
 4607      6C617955 
 4607      7300
 4608              	.LASF13:
 4609 0208 646F7562 		.ascii	"double\000"
 4609      6C6500
 4610              	.LASF56:
 4611 020f 73686966 		.ascii	"shift\000"
 4611      7400
 4612              	.LASF31:
 4613 0215 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4613      734C7664 
 4613      436C6561 
 4613      72496E74 
 4613      65727275 
 4614              	.LASF11:
 4615 022c 75696E74 		.ascii	"uint32\000"
 4615      333200
 4616              	.LASF39:
 4617 0233 6D61736B 		.ascii	"mask\000"
 4617      00
 4618              	.LASF32:
 4619 0238 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4619      73436C6B 
 4619      47657453 
 4619      7973636C 
 4619      6B536F75 
 4620              	.LASF58:
 4621 0250 4379496E 		.ascii	"CyIntGetPriority\000"
 4621      74476574 
 4621      5072696F 
 4621      72697479 
 4621      00
 4622              	.LASF96:
 4623 0261 63796465 		.ascii	"cydelay32kMs\000"
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 136


 4623      6C617933 
 4623      326B4D73 
 4623      00
 4624              	.LASF84:
 4625 026e 43795379 		.ascii	"CySysTickInit\000"
 4625      73546963 
 4625      6B496E69 
 4625      7400
 4626              	.LASF104:
 4627 027c 443A5C72 		.ascii	"D:\\repositories\\Tarocco\\Bootloader\\cncboot_no_o"
 4627      65706F73 
 4627      69746F72 
 4627      6965735C 
 4627      5461726F 
 4628 02ab 7074696D 		.ascii	"ptimizations\\cncboot.cydsn\000"
 4628      697A6174 
 4628      696F6E73 
 4628      5C636E63 
 4628      626F6F74 
 4629              	.LASF90:
 4630 02c6 43794765 		.ascii	"CyGetUniqueId\000"
 4630      74556E69 
 4630      71756549 
 4630      6400
 4631              	.LASF82:
 4632 02d4 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4632      73546963 
 4632      6B476574 
 4632      436F756E 
 4632      74466C61 
 4633              	.LASF8:
 4634 02ea 756E7369 		.ascii	"unsigned int\000"
 4634      676E6564 
 4634      20696E74 
 4634      00
 4635              	.LASF83:
 4636 02f7 43795379 		.ascii	"CySysTickClear\000"
 4636      73546963 
 4636      6B436C65 
 4636      617200
 4637              	.LASF5:
 4638 0306 6C6F6E67 		.ascii	"long unsigned int\000"
 4638      20756E73 
 4638      69676E65 
 4638      6420696E 
 4638      7400
 4639              	.LASF79:
 4640 0318 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4640      734C7664 
 4640      47657449 
 4640      6E746572 
 4640      72757074 
 4641              	.LASF22:
 4642 0333 43795379 		.ascii	"CySysClkImoStop\000"
 4642      73436C6B 
 4642      496D6F53 
 4642      746F7000 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 137


 4643              	.LASF99:
 4644 0343 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4644      74657243 
 4644      72697469 
 4644      63616C53 
 4644      65637469 
 4645              	.LASF44:
 4646 035a 4379496E 		.ascii	"CyIntSetPending\000"
 4646      74536574 
 4646      50656E64 
 4646      696E6700 
 4647              	.LASF33:
 4648 036a 43795379 		.ascii	"CySysGetResetReason\000"
 4648      73476574 
 4648      52657365 
 4648      74526561 
 4648      736F6E00 
 4649              	.LASF3:
 4650 037e 73686F72 		.ascii	"short unsigned int\000"
 4650      7420756E 
 4650      7369676E 
 4650      65642069 
 4650      6E7400
 4651              	.LASF52:
 4652 0391 4379496E 		.ascii	"CyIntSetVector\000"
 4652      74536574 
 4652      56656374 
 4652      6F7200
 4653              	.LASF41:
 4654 03a0 6E756D62 		.ascii	"number\000"
 4654      657200
 4655              	.LASF55:
 4656 03a7 7072696F 		.ascii	"priority\000"
 4656      72697479 
 4656      00
 4657              	.LASF64:
 4658 03b0 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4658      73436C6B 
 4658      57726974 
 4658      65496D6F 
 4658      46726571 
 4659              	.LASF47:
 4660 03c5 4379496E 		.ascii	"CyIntSetSysVector\000"
 4660      74536574 
 4660      53797356 
 4660      6563746F 
 4660      7200
 4661              	.LASF16:
 4662 03d7 72656733 		.ascii	"reg32\000"
 4662      3200
 4663              	.LASF85:
 4664 03dd 43795379 		.ascii	"CySysTickStart\000"
 4664      73546963 
 4664      6B537461 
 4664      727400
 4665              	.LASF35:
 4666 03ec 72657475 		.ascii	"returnStatus\000"
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 138


 4666      726E5374 
 4666      61747573 
 4666      00
 4667              	.LASF19:
 4668 03f9 73697A65 		.ascii	"sizetype\000"
 4668      74797065 
 4668      00
 4669              	.LASF45:
 4670 0402 4379496E 		.ascii	"CyIntClearPending\000"
 4670      74436C65 
 4670      61725065 
 4670      6E64696E 
 4670      6700
 4671              	.LASF18:
 4672 0414 6C6F6E67 		.ascii	"long double\000"
 4672      20646F75 
 4672      626C6500 
 4673              	.LASF48:
 4674 0420 61646472 		.ascii	"address\000"
 4674      65737300 
 4675              	.LASF67:
 4676 0428 62675472 		.ascii	"bgTrim5\000"
 4676      696D3500 
 4677              	.LASF25:
 4678 0430 73797363 		.ascii	"sysclkSource\000"
 4678      6C6B536F 
 4678      75726365 
 4678      00
 4679              	.LASF87:
 4680 043d 66756E63 		.ascii	"function\000"
 4680      74696F6E 
 4680      00
 4681              	.LASF98:
 4682 0446 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4682      6F467265 
 4682      714D687A 
 4682      32526567 
 4682      00
 4683              	.LASF81:
 4684 0457 43795379 		.ascii	"CySysTickGetValue\000"
 4684      73546963 
 4684      6B476574 
 4684      56616C75 
 4684      6500
 4685              	.LASF93:
 4686 0469 63796465 		.ascii	"cydelayFreqHz\000"
 4686      6C617946 
 4686      72657148 
 4686      7A00
 4687              	.LASF54:
 4688 0477 4379496E 		.ascii	"CyIntSetPriority\000"
 4688      74536574 
 4688      5072696F 
 4688      72697479 
 4688      00
 4689              	.LASF12:
 4690 0488 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 139


 4690      7400
 4691              	.LASF100:
 4692 048e 43794578 		.ascii	"CyExitCriticalSection\000"
 4692      69744372 
 4692      69746963 
 4692      616C5365 
 4692      6374696F 
 4693              	.LASF71:
 4694 04a4 43795379 		.ascii	"CySysLvdEnable\000"
 4694      734C7664 
 4694      456E6162 
 4694      6C6500
 4695              	.LASF20:
 4696 04b3 63795379 		.ascii	"cySysTickCallback\000"
 4696      73546963 
 4696      6B43616C 
 4696      6C626163 
 4696      6B00
 4697              	.LASF53:
 4698 04c5 4379496E 		.ascii	"CyIntGetVector\000"
 4698      74476574 
 4698      56656374 
 4698      6F7200
 4699              	.LASF61:
 4700 04d4 6D696C6C 		.ascii	"milliseconds\000"
 4700      69736563 
 4700      6F6E6473 
 4700      00
 4701              	.LASF101:
 4702 04e1 43794465 		.ascii	"CyDelayCycles\000"
 4702      6C617943 
 4702      79636C65 
 4702      7300
 4703              	.LASF15:
 4704 04ef 72656738 		.ascii	"reg8\000"
 4704      00
 4705              	.LASF72:
 4706 04f4 74687265 		.ascii	"threshold\000"
 4706      73686F6C 
 4706      6400
 4707              	.LASF46:
 4708 04fe 43794861 		.ascii	"CyHalt\000"
 4708      6C7400
 4709              	.LASF1:
 4710 0505 756E7369 		.ascii	"unsigned char\000"
 4710      676E6564 
 4710      20636861 
 4710      7200
 4711              	.LASF2:
 4712 0513 73686F72 		.ascii	"short int\000"
 4712      7420696E 
 4712      7400
 4713              	.LASF40:
 4714 051d 4379496E 		.ascii	"CyIntEnable\000"
 4714      74456E61 
 4714      626C6500 
 4715              	.LASF51:
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 140


 4716 0529 4379496E 		.ascii	"CyIntGetSysVector\000"
 4716      74476574 
 4716      53797356 
 4716      6563746F 
 4716      7200
 4717              	.LASF28:
 4718 053b 636C6B53 		.ascii	"clkSelect\000"
 4718      656C6563 
 4718      7400
 4719              	.LASF34:
 4720 0545 72656173 		.ascii	"reason\000"
 4720      6F6E00
 4721              	.LASF14:
 4722 054c 63686172 		.ascii	"char\000"
 4722      00
 4723              	.LASF17:
 4724 0551 63796973 		.ascii	"cyisraddress\000"
 4724      72616464 
 4724      72657373 
 4724      00
 4725              	.LASF76:
 4726 055e 43795379 		.ascii	"CySysTickEnable\000"
 4726      73546963 
 4726      6B456E61 
 4726      626C6500 
 4727              	.LASF27:
 4728 056e 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4728      73436C6B 
 4728      57726974 
 4728      65537973 
 4728      636C6B44 
 4729              	.LASF86:
 4730 0585 43795379 		.ascii	"CySysTickSetCallback\000"
 4730      73546963 
 4730      6B536574 
 4730      43616C6C 
 4730      6261636B 
 4731              	.LASF92:
 4732 059a 43795379 		.ascii	"CySysTickCallbacks\000"
 4732      73546963 
 4732      6B43616C 
 4732      6C626163 
 4732      6B7300
 4733              	.LASF70:
 4734 05ad 696D6F54 		.ascii	"imoTrim1Value\000"
 4734      72696D31 
 4734      56616C75 
 4734      6500
 4735              	.LASF91:
 4736 05bb 756E6971 		.ascii	"uniqueId\000"
 4736      75654964 
 4736      00
 4737              	.LASF60:
 4738 05c4 43794465 		.ascii	"CyDelay\000"
 4738      6C617900 
 4739              	.LASF77:
 4740 05cc 43795379 		.ascii	"CySysTickDisableInterrupt\000"
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 141


 4740      73546963 
 4740      6B446973 
 4740      61626C65 
 4740      496E7465 
 4741              	.LASF30:
 4742 05e6 43795379 		.ascii	"CySysLvdDisable\000"
 4742      734C7664 
 4742      44697361 
 4742      626C6500 
 4743              	.LASF95:
 4744 05f6 63796465 		.ascii	"cydelayFreqMhz\000"
 4744      6C617946 
 4744      7265714D 
 4744      687A00
 4745              	.LASF74:
 4746 0605 43795379 		.ascii	"CySysTickStop\000"
 4746      73546963 
 4746      6B53746F 
 4746      7000
 4747              	.LASF29:
 4748 0613 64697669 		.ascii	"divider\000"
 4748      64657200 
 4749              	.LASF21:
 4750 061b 43795379 		.ascii	"CySysClkImoStart\000"
 4750      73436C6B 
 4750      496D6F53 
 4750      74617274 
 4750      00
 4751              	.LASF68:
 4752 062c 6E657749 		.ascii	"newImoTrim2Value\000"
 4752      6D6F5472 
 4752      696D3256 
 4752      616C7565 
 4752      00
 4753              	.LASF103:
 4754 063d 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 4754      72617465 
 4754      645F536F 
 4754      75726365 
 4754      5C50536F 
 4755              	.LASF63:
 4756 065c 6D696372 		.ascii	"microseconds\000"
 4756      6F736563 
 4756      6F6E6473 
 4756      00
 4757              	.LASF24:
 4758 0669 746D7052 		.ascii	"tmpReg\000"
 4758      656700
 4759              	.LASF78:
 4760 0670 43795379 		.ascii	"CySysTickSetReload\000"
 4760      73546963 
 4760      6B536574 
 4760      52656C6F 
 4760      616400
 4761              	.LASF105:
 4762 0683 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4762      73546963 
ARM GAS  C:\Users\ottor\AppData\Local\Temp\ccW06JZJ.s 			page 142


 4762      6B536572 
 4762      76696365 
 4762      43616C6C 
 4763              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
